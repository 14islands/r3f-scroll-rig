{"version":3,"file":"scrollbar.cjs","sources":["../src/config.ts","../src/store.ts","../src/scrollbar/useScrollbar.ts","../src/hooks/useIsomorphicLayoutEffect.ts","../src/scrollbar/LenisScrollbar.tsx","../src/hooks/useWindowSize.ts","../src/utils/math.ts","../src/hooks/useTracker.ts","../src/scrollbar/SmoothScrollbar.tsx"],"sourcesContent":["// Global config\n\nimport { WebGLRenderer } from 'three'\n\ntype PreloadCallback = (gl: WebGLRenderer) => void\n\nexport const config = {\n  // Execution order for useFrames (highest = last render)\n  PRIORITY_PRELOAD: 0,\n  PRIORITY_SCISSORS: 1,\n  PRIORITY_VIEWPORTS: 1,\n  PRIORITY_GLOBAL: 1000,\n\n  DEFAULT_SCALE_MULTIPLIER: 1,\n\n  // Global rendering props\n  preloadQueue: [] as PreloadCallback[],\n}\n","import create from 'zustand'\nimport { config } from './config'\n\nimport { LenisScrollCallback } from './scrollbar/LenisScrollbar'\n\ninterface ScrollRigStore {\n  debug: boolean\n  scaleMultiplier: number\n  globalRender: boolean\n  globalPriority: number\n  globalAutoClear: boolean\n  globalClearDepth: boolean\n  globalRenderQueue: false | any[]\n  clearGlobalRenderQueue: () => void\n  isCanvasAvailable: boolean\n  hasSmoothScrollbar: boolean\n  canvasChildren: Record<string, any | undefined>\n  updateCanvas: (key: string, newProps: any) => void\n  renderToCanvas: (key: string, mesh: any, props: any) => void\n  removeFromCanvas: (key: string, dispose: boolean) => void\n  pageReflow: number\n  requestReflow: () => void\n  scroll: {\n    y: number\n    x: number\n    limit: number\n    velocity: number\n    progress: number\n    direction: string\n  }\n  scrollTo: (target: any) => void\n  onScroll: (cb: LenisScrollCallback) => () => void\n}\n\nconst useCanvasStore = create<ScrollRigStore>((set) => ({\n  // //////////////////////////////////////////////////////////////////////////\n  // GLOBAL ScrollRig STATE\n  // //////////////////////////////////////////////////////////////////////////\n  debug: false,\n  scaleMultiplier: config.DEFAULT_SCALE_MULTIPLIER,\n\n  globalRender: true,\n  globalPriority: config.PRIORITY_GLOBAL,\n  globalAutoClear: false,\n  globalClearDepth: true,\n\n  globalRenderQueue: false,\n  clearGlobalRenderQueue: () => set(() => ({ globalRenderQueue: false })),\n\n  // true if WebGL initialized without errors\n  isCanvasAvailable: true,\n\n  // true if <VirtualScrollbar> is currently enabled\n  hasSmoothScrollbar: false,\n\n  // map of all components to render on the global canvas\n  canvasChildren: {},\n\n  // add component to canvas\n  renderToCanvas: (key, mesh, props = {}) =>\n    set(({ canvasChildren }) => {\n      // check if already mounted\n      if (Object.getOwnPropertyDescriptor(canvasChildren, key)) {\n        // increase usage count\n        canvasChildren[key].instances += 1\n        canvasChildren[key].props.inactive = false\n        return { canvasChildren }\n      } else {\n        // otherwise mount it\n        const obj = { ...canvasChildren, [key]: { mesh, props, instances: 1 } }\n        return { canvasChildren: obj }\n      }\n    }),\n\n  // pass new props to a canvas component\n  updateCanvas: (key, newProps) =>\n    // @ts-ignore\n    set(({ canvasChildren }) => {\n      if (!canvasChildren[key]) return\n      const {\n        [key]: { mesh, props, instances },\n      } = canvasChildren\n      const obj = {\n        ...canvasChildren,\n        [key]: { mesh, props: { ...props, ...newProps }, instances },\n      }\n      // console.log('updateCanvas', key, { ...props, ...newProps })\n      return { canvasChildren: obj }\n    }),\n\n  // remove component from canvas\n  removeFromCanvas: (key, dispose = true) =>\n    set(({ canvasChildren }) => {\n      // check if remove or reduce instances\n      if (canvasChildren[key]?.instances > 1) {\n        // reduce usage count\n        canvasChildren[key].instances -= 1\n        return { canvasChildren }\n      } else {\n        if (dispose) {\n          // unmount since no longer used\n          const { [key]: _omit, ...obj } = canvasChildren // make a separate copy of the obj and omit\n          return { canvasChildren: obj }\n        } else {\n          // or tell it that it is \"inactive\"\n          canvasChildren[key].instances = 0\n          canvasChildren[key].props.inactive = true\n          return { canvasChildren: { ...canvasChildren } }\n        }\n      }\n    }),\n\n  // Used to ask components to re-calculate their positions after a layout reflow\n  pageReflow: 0,\n  requestReflow: () => {\n    set((state) => {\n      return { pageReflow: state.pageReflow + 1 }\n    })\n  },\n\n  // keep track of scrollbar\n  scroll: {\n    y: 0,\n    x: 0,\n    limit: 0,\n    velocity: 0,\n    progress: 0,\n    direction: '',\n  },\n  scrollTo: (target) => window.scrollTo(0, target),\n  onScroll: () => () => {},\n}))\n\nexport { useCanvasStore }\n","import { useCanvasStore } from '../store'\nimport { LenisScrollCallback } from './LenisScrollbar'\n\nexport interface Scroll {\n  y: number\n  x: number\n  limit: number\n  velocity: number\n  progress: number\n  direction: string\n}\n\ninterface UseScrollbarProps {\n  enabled: boolean\n  scroll: Scroll\n  scrollTo: (target: any) => void\n  onScroll: (cb: LenisScrollCallback) => () => void\n}\n\n/**\n * Public interface for ScrollRig\n */\nexport const useScrollbar = () => {\n  const hasSmoothScrollbar = useCanvasStore((state) => state.hasSmoothScrollbar)\n  const scroll = useCanvasStore((state) => state.scroll)\n  const scrollTo = useCanvasStore((state) => state.scrollTo)\n  const onScroll = useCanvasStore((state) => state.onScroll)\n\n  return {\n    enabled: hasSmoothScrollbar,\n    scroll,\n    scrollTo,\n    onScroll,\n  } as UseScrollbarProps\n}\n","import { useEffect, useLayoutEffect as vanillaUseLayoutEffect } from 'react'\n\nexport const isBrowser = typeof window !== 'undefined'\n\nexport const useLayoutEffect = isBrowser ? vanillaUseLayoutEffect : useEffect\n","import React, { useRef, useEffect, forwardRef, useImperativeHandle, ReactElement } from 'react'\n\n// @ts-ignore\n// eslint-disable-next-line import/no-unresolved\nimport Lenis from '@studio-freight/lenis'\n\nexport type LenisScrollCallback = (props: {\n  scroll: number\n  limit: number\n  velocity: number\n  direction: string\n  progress: number\n}) => void\n\ntype LenisScrollToTarget = number | HTMLElement | string\ntype LenisScrollToConfig = { offset: number; immediate: boolean; duration: number; easing: (t: number) => number }\ntype LenisScrollTo = (target: LenisScrollToTarget, props: LenisScrollToConfig) => void\n\ntype LenisScrollbarProps = {\n  children: (props: any) => ReactElement\n  duration?: number\n  easing?: (t: number) => number\n  smooth?: boolean\n  direction?: string\n  config?: any\n}\n\nexport interface ILenisScrollbar {\n  stop: () => void\n  start: () => void\n  on: (event: string, cb: LenisScrollCallback) => void\n  once: (event: string, cb: LenisScrollCallback) => void\n  off: (event: string, cb: LenisScrollCallback) => void\n  scrollTo: LenisScrollTo\n  raf: (time: number) => void\n}\n\nconst EASE_EXP_OUT = (t: number) => (t === 1 ? 1 : 1 - Math.pow(2, -10 * t)) // https://easings.net/\n\nexport function LenisScrollbar(\n  {\n    children,\n    duration = 1,\n    easing = EASE_EXP_OUT,\n    smooth = true,\n    direction = 'vertical',\n    config,\n    ...props\n  }: LenisScrollbarProps,\n  ref: any\n) {\n  const lenisImpl = useRef<ILenisScrollbar>()\n\n  // Expose lenis imperative API\n  useImperativeHandle(ref, () => ({\n    start: () => lenisImpl.current?.start(),\n    stop: () => lenisImpl.current?.stop(),\n    on: (event: string, cb: LenisScrollCallback) => lenisImpl.current?.on(event, cb),\n    once: (event: string, cb: LenisScrollCallback) => lenisImpl.current?.once(event, cb),\n    off: (event: string, cb: LenisScrollCallback) => lenisImpl.current?.off(event, cb),\n    scrollTo: (target: LenisScrollToTarget, props: LenisScrollToConfig) => lenisImpl.current?.scrollTo(target, props),\n    raf: (time: number) => lenisImpl.current?.raf(time),\n  }))\n\n  useEffect(\n    function initLenis() {\n      // @ts-ignore\n      const lenis = (lenisImpl.current = new Lenis({\n        duration,\n        easing,\n        smooth,\n        direction,\n        ...config,\n      }))\n\n      // cleanup on unmount\n      return () => {\n        lenis.destroy()\n      }\n    },\n    [duration, easing, smooth, direction]\n  )\n\n  // Support a render function as child\n  return children && children(props)\n}\n\nexport default forwardRef(LenisScrollbar)\n","import { useState, useEffect } from 'react'\n\nconst isBrowser = typeof window !== 'undefined'\n\n// https://usehooks.com/useWindowSize/\n\nexport interface WindowSize {\n  width: number\n  height: number\n}\n\nexport function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowSize>({\n    width: isBrowser ? window.innerWidth : Infinity,\n    height: isBrowser ? window.innerHeight : Infinity,\n  })\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      })\n    }\n    // Add event listener\n    window.addEventListener('resize', handleResize)\n    // Call handler right away so state gets updated with initial window size\n    handleResize()\n    // Remove event listener on cleanup\n    return () => window.removeEventListener('resize', handleResize)\n  }, []) // Empty array ensures that effect is only run on mount\n\n  return windowSize\n}\n","// Linear mapping from range <a1, a2> to range <b1, b2>\nexport function mapLinear(x: number, a1: number, a2: number, b1: number, b2: number) {\n  return b1 + ((x - a1) * (b2 - b1)) / (a2 - a1)\n}\n","import { useRef, useCallback, useEffect, useState, MutableRefObject } from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { useWindowSize } from './useWindowSize'\n\nimport vecn from 'vecn'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { mapLinear } from '../utils/math'\nimport { useCanvasStore } from '../store'\nimport { useScrollbar, Scroll } from '../scrollbar/useScrollbar'\n\nimport type { Rect, Bounds, TrackerOptions, Tracker, ScrollState } from './useTracker.d'\n\nfunction updateBounds(bounds: Bounds, rect: Rect, scroll: Scroll, size: any) {\n  bounds.top = rect.top - scroll.y\n  bounds.bottom = rect.bottom - scroll.y\n  bounds.left = rect.left - scroll.x\n  bounds.right = rect.right - scroll.x\n  bounds.width = rect.width\n  bounds.height = rect.height\n  // move coordinate system so 0,0 is at center of screen\n  bounds.x = bounds.left + rect.width * 0.5 - size.width * 0.5\n  bounds.y = bounds.top + rect.height * 0.5 - size.height * 0.5\n  bounds.positiveYUpBottom = size.height - bounds.bottom // inverse Y\n}\n\nfunction updatePosition(position: vec3, bounds: Bounds, scaleMultiplier: number) {\n  position.x = bounds.x * scaleMultiplier\n  position.y = -1 * bounds.y * scaleMultiplier\n}\n\nconst defaultArgs = { rootMargin: '50%', threshold: 0, autoUpdate: true }\n\n/**\n * Returns the current Scene position of the DOM element\n * based on initial getBoundingClientRect and scroll delta from start\n */\nfunction useTracker(track: MutableRefObject<HTMLElement>, options?: TrackerOptions): Tracker {\n  const size = useWindowSize()\n  const { scroll, onScroll } = useScrollbar()\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n\n  const { rootMargin, threshold, autoUpdate } = { ...defaultArgs, ...options }\n\n  // check if element is in viewport\n  const { ref, inView: inViewport } = useInView({ rootMargin, threshold })\n\n  // bind useInView ref to current tracking element\n  useLayoutEffect(() => {\n    ref(track.current)\n  }, [track])\n\n  // Using state so it's reactive\n  const [scale, setScale] = useState<vec3>()\n\n  // Using ref because\n  const scrollState: ScrollState = useRef({\n    inViewport: false,\n    progress: -1,\n    visibility: -1,\n    viewport: -1,\n  }).current\n\n  // DOM rect (initial position in pixels offset by scroll value on page load)\n  // Using ref so we can calculate bounds & position without a re-render\n  const rect = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n  }).current\n\n  // expose internal ref as a reactive state as well\n  const [reactiveRect, setReactiveRect] = useState<Rect>(rect)\n\n  // bounding rect in pixels - updated by scroll\n  const bounds = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n    positiveYUpBottom: 0,\n  }).current\n\n  // position in viewport units - updated by scroll\n  const position = useRef(vecn.vec3(0, 0, 0)).current\n\n  // Calculate bounding Rect as soon as it's available\n  useLayoutEffect(() => {\n    const _rect = track.current?.getBoundingClientRect()\n    rect.top = _rect.top + window.scrollY\n    rect.bottom = _rect.bottom + window.scrollY\n    rect.left = _rect.left + window.scrollX\n    rect.right = _rect.right + window.scrollX\n    rect.width = _rect.width\n    rect.height = _rect.height\n    rect.x = rect.left + _rect.width * 0.5\n    rect.y = rect.top + _rect.height * 0.5\n    setReactiveRect({ ...rect })\n    setScale(vecn.vec3(rect?.width * scaleMultiplier, rect?.height * scaleMultiplier, 1))\n  }, [track, size, pageReflow, scaleMultiplier])\n\n  const update = useCallback(\n    ({ onlyUpdateInViewport = true } = {}) => {\n      if (!track.current || (onlyUpdateInViewport && !scrollState.inViewport)) {\n        return\n      }\n\n      updateBounds(bounds, rect, scroll, size)\n      updatePosition(position, bounds, scaleMultiplier)\n\n      // scrollState setup based on scroll direction\n      const isHorizontal = scroll.direction === 'horizontal'\n      const sizeProp = isHorizontal ? 'width' : 'height'\n      const startProp = isHorizontal ? 'left' : 'top'\n\n      // calculate progress of passing through viewport (0 = just entered, 1 = just exited)\n      const pxInside = size[sizeProp] - bounds[startProp]\n      scrollState.progress = mapLinear(pxInside, 0, size[sizeProp] + bounds[sizeProp], 0, 1) // percent of total visible distance\n      scrollState.visibility = mapLinear(pxInside, 0, bounds[sizeProp], 0, 1) // percent of item height in view\n      scrollState.viewport = mapLinear(pxInside, 0, size[sizeProp], 0, 1) // percent of window height scrolled since visible\n    },\n    [track, size, scaleMultiplier, scroll]\n  )\n\n  // update scrollState in viewport\n  useLayoutEffect(() => {\n    scrollState.inViewport = inViewport\n    // update once more in case it went out of view\n    update({ onlyUpdateInViewport: false })\n  }, [inViewport])\n\n  // re-run if the callback updated\n  useLayoutEffect(() => {\n    update({ onlyUpdateInViewport: false })\n  }, [update])\n\n  // auto-update on scroll\n  useEffect(() => {\n    if (autoUpdate) return onScroll((_scroll) => update())\n  }, [autoUpdate, update, onScroll])\n\n  return {\n    rect: reactiveRect, // Dom rect - doesn't change on scroll - not - reactive\n    bounds, // scrolled bounding rect in pixels - not reactive\n    scale, // reactive scene scale - includes z-axis so it can be spread onto mesh directly\n    position, // scrolled element position in viewport units - not reactive\n    scrollState, // scroll progress stats - not reactive\n    inViewport, // reactive prop for when inside viewport\n    update: () => update({ onlyUpdateInViewport: false }), // optional manual update\n  }\n}\n\nexport { useTracker }\n","import React, { useEffect, useRef, useCallback, ReactElement } from 'react'\nimport { addEffect, invalidate } from '@react-three/fiber'\nimport pkg from 'debounce'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { useCanvasStore } from '../store'\n\nimport LenisScrollbar, { ILenisScrollbar, LenisScrollCallback } from './LenisScrollbar'\ninterface ISmoothScrobbar {\n  children: (props: any) => ReactElement\n  scrollRestoration?: ScrollRestoration\n  enabled?: boolean\n  locked?: boolean\n  disablePointerOnScroll?: boolean\n  config?: object\n  horizontal?: boolean\n}\n\nexport const SmoothScrollbar = ({\n  children,\n  enabled = true,\n  locked = false,\n  scrollRestoration = 'auto',\n  disablePointerOnScroll = true,\n  horizontal = false,\n  config,\n}: ISmoothScrobbar) => {\n  const ref = useRef<HTMLElement>()\n  const lenis = useRef<ILenisScrollbar>()\n  const preventPointer = useRef(false)\n  const globalScrollState = useCanvasStore((state) => state.scroll)\n\n  // set initial scroll direction\n  // need to be updated before children render\n  globalScrollState.direction = horizontal ? 'horizontal' : 'vertical'\n\n  // disable pointer events while scrolling to avoid slow event handlers\n  const preventPointerEvents = (prevent: boolean) => {\n    if (!disablePointerOnScroll) return\n    if (ref.current && preventPointer.current !== prevent) {\n      preventPointer.current = prevent\n      ref.current.style.pointerEvents = prevent ? 'none' : 'auto'\n    }\n  }\n\n  // reset pointer events when moving mouse\n  const onMouseMove = useCallback(() => {\n    preventPointerEvents(false)\n  }, [])\n\n  // function to bind to scroll event\n  // return function that will unbind same callback\n  const onScroll = useCallback((cb: LenisScrollCallback) => {\n    lenis.current?.on('scroll', cb)\n    return () => lenis.current?.off('scroll', cb)\n  }, [])\n\n  // apply chosen scroll restoration\n  useLayoutEffect(() => {\n    if ('scrollRestoration' in window.history) {\n      window.history.scrollRestoration = scrollRestoration\n    }\n  }, [])\n\n  useEffect(() => {\n    // let r3f drive the frameloop\n    const removeEffect = addEffect((time) => lenis.current?.raf(time))\n\n    // update global scroll store\n    lenis.current?.on('scroll', ({ scroll, limit, velocity, direction, progress }) => {\n      globalScrollState.y = direction === 'vertical' ? scroll : 0\n      globalScrollState.x = direction === 'horizontal' ? scroll : 0\n      globalScrollState.limit = limit\n      globalScrollState.velocity = velocity\n      globalScrollState.direction = direction\n      globalScrollState.progress = progress\n\n      // disable pointer logic\n      const disablePointer = pkg.debounce(() => preventPointerEvents(true), 100, true)\n      if (Math.abs(velocity) > 1.4) {\n        disablePointer()\n      } else {\n        preventPointerEvents(false)\n      }\n\n      invalidate()\n    })\n\n    // expose global scrollTo function\n    // @ts-ignore\n    useCanvasStore.setState({ scrollTo: lenis.current?.scrollTo })\n\n    // expose global onScroll function to subscribe to scroll events\n    // @ts-ignore\n    useCanvasStore.setState({ onScroll })\n\n    // Set current scroll position on load in case reloaded further down\n    useCanvasStore.getState().scroll.y = window.scrollY\n    useCanvasStore.getState().scroll.x = window.scrollX\n\n    // Set active\n    document.documentElement.classList.toggle('js-smooth-scrollbar-enabled', enabled)\n    document.documentElement.classList.toggle('js-smooth-scrollbar-disabled', !enabled)\n    useCanvasStore.setState({ hasSmoothScrollbar: enabled })\n\n    // make sure R3F loop is invalidated when scrolling\n    const invalidateOnWheelEvent = () => invalidate()\n\n    window.addEventListener('pointermove', onMouseMove)\n    window.addEventListener('wheel', invalidateOnWheelEvent)\n    return () => {\n      removeEffect()\n      window.removeEventListener('pointermove', onMouseMove)\n      window.removeEventListener('wheel', invalidateOnWheelEvent)\n    }\n  }, [enabled])\n\n  useEffect(() => {\n    locked ? lenis.current?.stop() : lenis.current?.start()\n  }, [locked])\n\n  return (\n    <LenisScrollbar ref={lenis} smooth={enabled} direction={horizontal ? 'horizontal' : 'vertical'} config={config}>\n      {/* Use function child so we can spread props\n        - for instance disable pointer events while scrolling */}\n      {(bind: any) => children({ ...bind, ref })}\n    </LenisScrollbar>\n  )\n}\n"],"names":["useCanvasStore","create","set","debug","scaleMultiplier","globalRender","globalPriority","globalAutoClear","globalClearDepth","globalRenderQueue","clearGlobalRenderQueue","isCanvasAvailable","hasSmoothScrollbar","canvasChildren","renderToCanvas","key","mesh","props","_ref","_extends2","Object","getOwnPropertyDescriptor","instances","inactive","updateCanvas","newProps","_ref2","_extends3","_canvasChildren$key","removeFromCanvas","dispose","_ref3","_canvasChildren$key2","_objectWithoutPropertiesLoose","map","_toPropertyKey","pageReflow","requestReflow","state","scroll","y","x","limit","velocity","progress","direction","scrollTo","target","window","onScroll","useScrollbar","enabled","useLayoutEffect","vanillaUseLayoutEffect","useEffect","_excluded","EASE_EXP_OUT","t","Math","pow","forwardRef","ref","children","_ref$duration","duration","easing","smooth","_ref$smooth","_ref$direction","config","lenisImpl","useRef","useImperativeHandle","start","_lenisImpl$current","current","stop","_lenisImpl$current2","on","event","cb","_lenisImpl$current3","once","_lenisImpl$current4","off","_lenisImpl$current5","_lenisImpl$current6","raf","time","_lenisImpl$current7","lenis","Lenis","_extends","destroy","isBrowser","mapLinear","a1","a2","b1","b2","defaultArgs","rootMargin","threshold","autoUpdate","_ref$enabled","locked","_ref$locked","_ref$scrollRestoratio","scrollRestoration","disablePointerOnScroll","_ref$disablePointerOn","_ref$horizontal","horizontal","preventPointer","globalScrollState","preventPointerEvents","prevent","style","pointerEvents","useCallback","_lenis$current","_lenis$current2","history","_lenis$current4","_lenis$current5","removeEffect","addEffect","_lenis$current3","pkg","debounce","abs","disablePointer","invalidate","setState","getState","scrollY","scrollX","document","documentElement","classList","toggle","invalidateOnWheelEvent","addEventListener","onMouseMove","removeEventListener","_lenis$current6","_lenis$current7","LenisScrollbar","bind","track","options","size","useWindowSize","_useState","useState","width","innerWidth","Infinity","height","innerHeight","windowSize","setWindowSize","handleResize","_useScrollbar","_defaultArgs$options","useInView","_useInView","inViewport","inView","scale","setScale","scrollState","visibility","viewport","rect","top","bottom","left","right","_useState2","reactiveRect","setReactiveRect","bounds","positiveYUpBottom","position","vecn","vec3","_track$current","_rect","getBoundingClientRect","_temp","onlyUpdateInViewport","_ref$onlyUpdateInView","updateBounds","updatePosition","isHorizontal","sizeProp","pxInside","update","_scroll","_update"],"mappings":"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"}