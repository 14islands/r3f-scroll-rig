{"version":3,"file":"scrollbar.cjs","sources":["../src/config.ts","../src/store.ts","../src/scrollbar/useScrollbar.ts","../src/hooks/useIsomorphicLayoutEffect.ts","../src/scrollbar/LenisScrollbar.tsx","../src/scrollbar/SmoothScrollbar.tsx","../src/hooks/useWindowSize.ts","../src/utils/math.ts","../src/hooks/useTracker.ts"],"sourcesContent":["// Global config\n\nimport { WebGLRenderer } from 'three'\n\ntype PreloadCallback = (gl: WebGLRenderer) => void\n\nexport const config = {\n  // Execution order for useFrames (highest = last render)\n  PRIORITY_PRELOAD: 0,\n  PRIORITY_SCISSORS: 1,\n  PRIORITY_VIEWPORTS: 1,\n  PRIORITY_GLOBAL: 1000,\n\n  DEFAULT_SCALE_MULTIPLIER: 1,\n\n  // Global rendering props\n  preloadQueue: [] as PreloadCallback[],\n}\n","import create from 'zustand'\nimport { config } from './config'\n\nimport { LenisScrollCallback } from './scrollbar/LenisScrollbar'\n\ninterface ScrollRigStore {\n  debug: boolean\n  scaleMultiplier: number\n  globalRender: boolean\n  globalPriority: number\n  globalAutoClear: boolean\n  globalClearDepth: boolean\n  globalRenderQueue: false | any[]\n  clearGlobalRenderQueue: () => void\n  isCanvasAvailable: boolean\n  hasSmoothScrollbar: boolean\n  canvasChildren: Record<string, any | undefined>\n  updateCanvas: (key: string, newProps: any) => void\n  renderToCanvas: (key: string, mesh: any, props: any) => void\n  removeFromCanvas: (key: string, dispose: boolean) => void\n  pageReflow: number\n  requestReflow: () => void\n  scroll: {\n    y: number\n    x: number\n    limit: number\n    velocity: number\n    progress: number\n    direction: number\n    scrollDirection?: 'vertical' | 'horizontal'\n  }\n  scrollTo: (target: any) => void\n  onScroll: (cb: LenisScrollCallback) => () => void\n}\n\nconst useCanvasStore = create<ScrollRigStore>((set) => ({\n  // //////////////////////////////////////////////////////////////////////////\n  // GLOBAL ScrollRig STATE\n  // //////////////////////////////////////////////////////////////////////////\n  debug: false,\n  scaleMultiplier: config.DEFAULT_SCALE_MULTIPLIER,\n\n  globalRender: true,\n  globalPriority: config.PRIORITY_GLOBAL,\n  globalAutoClear: false,\n  globalClearDepth: true,\n\n  globalRenderQueue: false,\n  clearGlobalRenderQueue: () => set(() => ({ globalRenderQueue: false })),\n\n  // true if WebGL initialized without errors\n  isCanvasAvailable: true,\n\n  // true if <VirtualScrollbar> is currently enabled\n  hasSmoothScrollbar: false,\n\n  // map of all components to render on the global canvas\n  canvasChildren: {},\n\n  // add component to canvas\n  renderToCanvas: (key, mesh, props = {}) =>\n    set(({ canvasChildren }) => {\n      // check if already mounted\n      if (Object.getOwnPropertyDescriptor(canvasChildren, key)) {\n        // increase usage count\n        canvasChildren[key].instances += 1\n        canvasChildren[key].props.inactive = false\n        return { canvasChildren }\n      } else {\n        // otherwise mount it\n        const obj = { ...canvasChildren, [key]: { mesh, props, instances: 1 } }\n        return { canvasChildren: obj }\n      }\n    }),\n\n  // pass new props to a canvas component\n  updateCanvas: (key, newProps) =>\n    // @ts-ignore\n    set(({ canvasChildren }) => {\n      if (!canvasChildren[key]) return\n      const {\n        [key]: { mesh, props, instances },\n      } = canvasChildren\n      const obj = {\n        ...canvasChildren,\n        [key]: { mesh, props: { ...props, ...newProps }, instances },\n      }\n      // console.log('updateCanvas', key, { ...props, ...newProps })\n      return { canvasChildren: obj }\n    }),\n\n  // remove component from canvas\n  removeFromCanvas: (key, dispose = true) =>\n    set(({ canvasChildren }) => {\n      // check if remove or reduce instances\n      if (canvasChildren[key]?.instances > 1) {\n        // reduce usage count\n        canvasChildren[key].instances -= 1\n        return { canvasChildren }\n      } else {\n        if (dispose) {\n          // unmount since no longer used\n          const { [key]: _omit, ...obj } = canvasChildren // make a separate copy of the obj and omit\n          return { canvasChildren: obj }\n        } else {\n          // or tell it that it is \"inactive\"\n          canvasChildren[key].instances = 0\n          canvasChildren[key].props.inactive = true\n          return { canvasChildren: { ...canvasChildren } }\n        }\n      }\n    }),\n\n  // Used to ask components to re-calculate their positions after a layout reflow\n  pageReflow: 0,\n  requestReflow: () => {\n    set((state) => {\n      return { pageReflow: state.pageReflow + 1 }\n    })\n  },\n\n  // keep track of scrollbar\n  scroll: {\n    y: 0,\n    x: 0,\n    limit: 0,\n    velocity: 0,\n    progress: 0,\n    direction: 0,\n    scrollDirection: undefined,\n  },\n  scrollTo: (target) => window.scrollTo(0, target),\n  onScroll: () => () => {},\n}))\n\nexport { useCanvasStore }\n","import { useCanvasStore } from '../store'\nimport { LenisScrollCallback } from './LenisScrollbar'\n\nexport interface Scroll {\n  y: number\n  x: number\n  limit: number\n  velocity: number\n  progress: number\n  direction: number\n  scrollDirection: string\n}\n\ninterface UseScrollbarProps {\n  enabled: boolean\n  scroll: Scroll\n  scrollTo: (target: any) => void\n  onScroll: (cb: LenisScrollCallback) => () => void\n}\n\n/**\n * Public interface for ScrollRig\n */\nexport const useScrollbar = () => {\n  const hasSmoothScrollbar = useCanvasStore((state) => state.hasSmoothScrollbar)\n  const scroll = useCanvasStore((state) => state.scroll)\n  const scrollTo = useCanvasStore((state) => state.scrollTo)\n  const onScroll = useCanvasStore((state) => state.onScroll)\n\n  return {\n    enabled: hasSmoothScrollbar,\n    scroll,\n    scrollTo,\n    onScroll,\n  } as UseScrollbarProps\n}\n","import { useEffect, useLayoutEffect as vanillaUseLayoutEffect } from 'react'\n\nexport const isBrowser = typeof window !== 'undefined'\n\nexport const useLayoutEffect = isBrowser ? vanillaUseLayoutEffect : useEffect\n","import React, { useRef, useEffect, forwardRef, useImperativeHandle, ReactElement } from 'react'\n\n// @ts-ignore\n// eslint-disable-next-line import/no-unresolved\nimport Lenis from '@studio-freight/lenis'\n\nexport type LenisScrollCallback = (props: {\n  scroll: number\n  limit: number\n  velocity: number\n  direction: number\n  progress: number\n}) => void\n\nexport type LenisScrollToTarget = number | HTMLElement | string\nexport type LenisScrollToConfig = {\n  offset: number\n  immediate: boolean\n  duration: number\n  easing: (t: number) => number\n}\ntype LenisScrollTo = (target: LenisScrollToTarget, props: LenisScrollToConfig) => void\n\ntype LenisScrollbarProps = {\n  children: (props: any) => ReactElement\n  duration?: number\n  easing?: (t: number) => number\n  smooth?: boolean\n  direction?: string\n  config?: any\n  smoothTouch?: boolean\n}\n\nexport interface ILenisScrollbar {\n  stop: () => void\n  start: () => void\n  on: (event: string, cb: LenisScrollCallback) => void\n  once: (event: string, cb: LenisScrollCallback) => void\n  off: (event: string, cb: LenisScrollCallback) => void\n  notify: () => void\n  scrollTo: LenisScrollTo\n  raf: (time: number) => void\n}\n\nconst EASE_EXP_OUT = (t: number) => (t === 1 ? 1 : 1 - Math.pow(2, -10 * t)) // https://easings.net/\n\nexport function LenisScrollbar(\n  {\n    children,\n    duration = 1,\n    easing = EASE_EXP_OUT,\n    smooth = true,\n    direction = 'vertical',\n    config,\n    ...props\n  }: LenisScrollbarProps,\n  ref: any\n) {\n  const lenisImpl = useRef<ILenisScrollbar>()\n\n  // Expose lenis imperative API\n  useImperativeHandle(ref, () => lenisImpl.current)\n\n  useEffect(\n    function initLenis() {\n      // @ts-ignore\n      const lenis = (lenisImpl.current = new Lenis({\n        duration,\n        easing,\n        smooth,\n        direction,\n        ...config,\n      }))\n\n      // cleanup on unmount\n      return () => {\n        lenis.destroy()\n      }\n    },\n    [duration, easing, smooth, direction]\n  )\n\n  // Support a render function as child\n  return children && children(props)\n}\n\nexport default forwardRef(LenisScrollbar)\n","import React, { useEffect, useRef, useCallback, ReactElement, useMemo, forwardRef, useImperativeHandle } from 'react'\nimport { addEffect, invalidate } from '@react-three/fiber'\nimport pkg from 'debounce'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { useCanvasStore } from '../store'\n\nimport LenisScrollbar, {\n  ILenisScrollbar,\n  LenisScrollCallback,\n  LenisScrollToTarget,\n  LenisScrollToConfig,\n} from './LenisScrollbar'\ninterface ISmoothScrobbar {\n  children: (props: any) => ReactElement\n  scrollRestoration?: ScrollRestoration\n  enabled?: boolean\n  locked?: boolean\n  disablePointerOnScroll?: boolean\n  config?: object\n  horizontal?: boolean\n  scrollInContainer?: boolean\n  updateGlobalState?: boolean\n  onScroll?: LenisScrollCallback\n}\n\nconst SmoothScrollbarImpl = (\n  {\n    children,\n    enabled = true,\n    locked = false,\n    scrollRestoration = 'auto',\n    disablePointerOnScroll = true,\n    horizontal = false,\n    scrollInContainer = false,\n    updateGlobalState = true,\n    onScroll,\n    config,\n  }: ISmoothScrobbar,\n  ref: any\n) => {\n  const innerRef = useRef<HTMLElement>()\n  const lenis = useRef<ILenisScrollbar>()\n  const preventPointer = useRef(false)\n  const globalScrollState = useCanvasStore((state) => state.scroll)\n\n  // expose scrollTo imperatively\n  useImperativeHandle(ref, () => {\n    return {\n      scrollTo: (target: LenisScrollToTarget, props: LenisScrollToConfig) => lenis.current?.scrollTo(target, props),\n      __lenis: lenis.current,\n    }\n  })\n\n  // disable pointer events while scrolling to avoid slow event handlers\n  const preventPointerEvents = (prevent: boolean) => {\n    if (!disablePointerOnScroll) return\n    if (innerRef.current && preventPointer.current !== prevent) {\n      preventPointer.current = prevent\n      innerRef.current.style.pointerEvents = prevent ? 'none' : 'auto'\n    }\n  }\n\n  // reset pointer events when moving mouse\n  const onMouseMove = useCallback(() => {\n    preventPointerEvents(false)\n  }, [])\n\n  // function to bind to scroll event\n  // return function that will unbind same callback\n  const globalOnScroll = useCallback(\n    (cb: LenisScrollCallback) => {\n      lenis.current?.on('scroll', cb)\n      return () => lenis.current?.off('scroll', cb)\n    },\n    [enabled]\n  )\n\n  // apply chosen scroll restoration\n  useLayoutEffect(() => {\n    if ('scrollRestoration' in window.history) {\n      window.history.scrollRestoration = scrollRestoration\n    }\n  }, [])\n\n  useEffect(() => {\n    // let r3f drive the frameloop\n    const removeEffect = addEffect((time: number) => lenis.current?.raf(time))\n\n    // update global scroll store\n    lenis.current?.on('scroll', ({ scroll, limit, velocity, direction, progress }) => {\n      if (updateGlobalState) {\n        globalScrollState.y = !horizontal ? scroll : 0\n        globalScrollState.x = horizontal ? scroll : 0\n        globalScrollState.limit = limit\n        globalScrollState.velocity = velocity\n        globalScrollState.direction = direction\n        globalScrollState.progress = progress\n      }\n\n      // disable pointer logic\n      const disablePointer = pkg.debounce(() => preventPointerEvents(true), 100, true)\n      if (Math.abs(velocity) > 1.4) {\n        disablePointer()\n      } else {\n        preventPointerEvents(false)\n      }\n\n      onScroll && onScroll({ scroll, limit, velocity, direction, progress })\n\n      invalidate()\n    })\n\n    // trigger initial scroll event to update global state\n    lenis.current?.notify()\n\n    // update global state\n    if (updateGlobalState) {\n      globalScrollState.scrollDirection = horizontal ? 'horizontal' : 'vertical'\n\n      // expose global scrollTo function\n      // @ts-ignore\n      useCanvasStore.setState({ scrollTo: lenis.current?.scrollTo })\n\n      // expose global onScroll function to subscribe to scroll events\n      // @ts-ignore\n      useCanvasStore.setState({ onScroll: globalOnScroll })\n\n      // Set current scroll position on load in case reloaded further down\n      useCanvasStore.getState().scroll.y = window.scrollY\n      useCanvasStore.getState().scroll.x = window.scrollX\n    }\n\n    // Set active\n    document.documentElement.classList.toggle('js-smooth-scrollbar-enabled', enabled)\n    document.documentElement.classList.toggle('js-smooth-scrollbar-disabled', !enabled)\n    useCanvasStore.setState({ hasSmoothScrollbar: enabled })\n\n    // make sure R3F loop is invalidated when scrolling\n    const invalidateOnWheelEvent = () => invalidate()\n\n    window.addEventListener('pointermove', onMouseMove)\n    window.addEventListener('wheel', invalidateOnWheelEvent)\n    return () => {\n      removeEffect()\n      window.removeEventListener('pointermove', onMouseMove)\n      window.removeEventListener('wheel', invalidateOnWheelEvent)\n    }\n  }, [enabled])\n\n  useEffect(() => {\n    locked ? lenis.current?.stop() : lenis.current?.start()\n  }, [locked])\n\n  // Set up scroll containers - allows scrolling without resizing window on iOS/mobile\n  const { wrapper, content } = useMemo(() => {\n    if (typeof document === 'undefined') return {}\n    const html = document.documentElement\n    const wrapper = document.body\n    const content = document.body.firstElementChild\n\n    html.classList.toggle('ScrollRig-scrollHtml', scrollInContainer)\n    wrapper.classList.toggle('ScrollRig-scrollWrapper', scrollInContainer)\n\n    return {\n      wrapper,\n      content,\n    }\n  }, [scrollInContainer])\n\n  return (\n    <LenisScrollbar\n      ref={lenis}\n      smooth={enabled}\n      direction={horizontal ? 'horizontal' : 'vertical'}\n      config={\n        scrollInContainer\n          ? {\n              smoothTouch: true,\n              wrapper,\n              content,\n              ...config,\n            }\n          : { ...config }\n      }\n    >\n      {/* Use function child so we can spread props\n        - for instance disable pointer events while scrolling */}\n      {(bind: any) => children({ ...bind, ref: innerRef })}\n    </LenisScrollbar>\n  )\n}\n\nexport const SmoothScrollbar = forwardRef(SmoothScrollbarImpl)\n","import { useState, useEffect, useMemo } from 'react'\nimport pkg from 'debounce'\n\nconst isBrowser = typeof window !== 'undefined'\n\n// https://usehooks.com/useWindowSize/\n\nexport interface WindowSize {\n  width: number\n  height: number\n}\n\ntype ConfigProps = {\n  debounce?: number\n}\n\n/*\n * Triggers a resize only if the Canvas DOM element changed dimensions - not on window resize event\n */\n\nexport function useWindowSize({ debounce = 0 }: ConfigProps = {}) {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowSize>({\n    width: isBrowser ? window.innerWidth : Infinity,\n    height: isBrowser ? window.innerHeight : Infinity,\n  })\n  useEffect(() => {\n    // check if we can find a canvas - if so, base size on canvas instead of window\n    // since 100vh !== window.innerHeight on mobile\n    const canvasEl = document.getElementById('ScrollRig-canvas')\n\n    // Handler to call on window resize\n    function handleResize() {\n      const width = canvasEl ? canvasEl.clientWidth : window.innerWidth\n      const height = canvasEl ? canvasEl.clientHeight : window.innerHeight\n\n      if (width !== windowSize.width || height !== windowSize.height) {\n        // Set window width/height to state\n        setWindowSize({\n          width,\n          height,\n        })\n      }\n    }\n\n    const debouncedResize = pkg.debounce(handleResize, debounce)\n\n    // Add event listener\n    let observer: ResizeObserver\n    if (canvasEl) {\n      observer = new ResizeObserver(debouncedResize)\n      observer.observe(canvasEl)\n    } else {\n      window.addEventListener('resize', debouncedResize)\n    }\n    // Call handler right away so state gets updated with initial window size\n    handleResize()\n    // Remove event listener on cleanup\n    return () => {\n      window.removeEventListener('resize', debouncedResize)\n      observer?.disconnect()\n    }\n  }, []) // Empty array ensures that effect is only run on mount\n\n  return windowSize\n}\n","// Linear mapping from range <a1, a2> to range <b1, b2>\nexport function mapLinear(x: number, a1: number, a2: number, b1: number, b2: number) {\n  return b1 + ((x - a1) * (b2 - b1)) / (a2 - a1)\n}\n","import { useRef, useCallback, useEffect, useMemo, useState, MutableRefObject } from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { useWindowSize } from './useWindowSize'\nimport vecn from 'vecn'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { mapLinear } from '../utils/math'\nimport { useCanvasStore } from '../store'\nimport { useScrollbar, Scroll } from '../scrollbar/useScrollbar'\n\nimport type { Rect, Bounds, TrackerOptions, Tracker, ScrollState } from './useTracker.d'\n\nfunction updateBounds(bounds: Bounds, rect: Rect, scroll: Scroll, size: any) {\n  bounds.top = rect.top - scroll.y\n  bounds.bottom = rect.bottom - scroll.y\n  bounds.left = rect.left - scroll.x\n  bounds.right = rect.right - scroll.x\n  bounds.width = rect.width\n  bounds.height = rect.height\n  // move coordinate system so 0,0 is at center of screen\n  bounds.x = bounds.left + rect.width * 0.5 - size.width * 0.5\n  bounds.y = bounds.top + rect.height * 0.5 - size.height * 0.5\n  bounds.positiveYUpBottom = size.height - bounds.bottom // inverse Y\n}\n\nfunction updatePosition(position: vec3, bounds: Bounds, scaleMultiplier: number) {\n  position.x = bounds.x * scaleMultiplier\n  position.y = -1 * bounds.y * scaleMultiplier\n}\n\n/**\n * Returns the current Scene position of the DOM element\n * based on initial getBoundingClientRect and scroll delta from start\n */\nfunction useTracker(track: MutableRefObject<HTMLElement>, options?: TrackerOptions): Tracker {\n  const size = useWindowSize()\n  const { scroll, onScroll } = useScrollbar()\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n\n  // extend defaults with optional options\n  const { rootMargin, threshold, autoUpdate, wrapper } = useMemo(() => {\n    const target = { rootMargin: '0%', threshold: 0, autoUpdate: true } as TrackerOptions\n    const opts = options || {}\n    Object.keys(opts).map((key: string, index) => {\n      if (opts[key] !== undefined) target[key] = opts[key]\n    })\n    return target\n  }, [options])\n\n  // check if element is in viewport\n  const { ref, inView: inViewport } = useInView({ rootMargin, threshold })\n\n  // bind useInView ref to current tracking element\n  useLayoutEffect(() => {\n    ref(track.current)\n  }, [track])\n\n  // Using state so it's reactive\n  const [scale, setScale] = useState<vec3>()\n\n  // Using ref because\n  const scrollState: ScrollState = useRef({\n    inViewport: false,\n    progress: -1,\n    visibility: -1,\n    viewport: -1,\n  }).current\n\n  // DOM rect (initial position in pixels offset by scroll value on page load)\n  // Using ref so we can calculate bounds & position without a re-render\n  const rect = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n  }).current\n\n  // expose internal ref as a reactive state as well\n  const [reactiveRect, setReactiveRect] = useState<Rect>(rect)\n\n  // bounding rect in pixels - updated by scroll\n  const bounds = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n    positiveYUpBottom: 0,\n  }).current\n\n  // position in viewport units - updated by scroll\n  const position = useRef(vecn.vec3(0, 0, 0)).current\n\n  // Calculate bounding Rect as soon as it's available\n  useLayoutEffect(() => {\n    const _rect = track.current?.getBoundingClientRect()\n    if (!_rect) return\n    const initialY = wrapper ? (wrapper as HTMLElement).scrollTop : window.scrollY\n    const initialX = wrapper ? (wrapper as HTMLElement).scrollLeft : window.scrollX\n    rect.top = _rect.top + initialY\n    rect.bottom = _rect.bottom + initialY\n    rect.left = _rect.left + initialX\n    rect.right = _rect.right + initialX\n    rect.width = _rect.width\n    rect.height = _rect.height\n    rect.x = rect.left + _rect.width * 0.5\n    rect.y = rect.top + _rect.height * 0.5\n    setReactiveRect({ ...rect })\n    setScale(vecn.vec3(rect?.width * scaleMultiplier, rect?.height * scaleMultiplier, 1))\n  }, [track, size, pageReflow, scaleMultiplier])\n\n  const update = useCallback(\n    ({ onlyUpdateInViewport = true, scroll: _scroll = scroll } = {}) => {\n      if (!track.current || (onlyUpdateInViewport && !scrollState.inViewport)) {\n        return\n      }\n\n      updateBounds(bounds, rect, _scroll, size)\n      updatePosition(position, bounds, scaleMultiplier)\n\n      // scrollState setup based on scroll direction\n      const isHorizontal = _scroll.scrollDirection === 'horizontal'\n      const sizeProp = isHorizontal ? 'width' : 'height'\n      const startProp = isHorizontal ? 'left' : 'top'\n\n      // calculate progress of passing through viewport (0 = just entered, 1 = just exited)\n      const pxInside = size[sizeProp] - bounds[startProp]\n      scrollState.progress = mapLinear(pxInside, 0, size[sizeProp] + bounds[sizeProp], 0, 1) // percent of total visible distance\n      scrollState.visibility = mapLinear(pxInside, 0, bounds[sizeProp], 0, 1) // percent of item height in view\n      scrollState.viewport = mapLinear(pxInside, 0, size[sizeProp], 0, 1) // percent of window height scrolled since visible\n    },\n    [track, size, scaleMultiplier, scroll]\n  )\n\n  // update scrollState in viewport\n  useLayoutEffect(() => {\n    scrollState.inViewport = inViewport\n    // update once more in case it went out of view\n    update({ onlyUpdateInViewport: false })\n  }, [inViewport])\n\n  // re-run if the callback updated\n  useLayoutEffect(() => {\n    update({ onlyUpdateInViewport: false })\n  }, [update])\n\n  // auto-update on scroll\n  useEffect(() => {\n    if (autoUpdate) return onScroll((_scroll) => update())\n  }, [autoUpdate, update, onScroll])\n\n  return {\n    rect: reactiveRect, // Dom rect - doesn't change on scroll - not - reactive\n    bounds, // scrolled bounding rect in pixels - not reactive\n    scale, // reactive scene scale - includes z-axis so it can be spread onto mesh directly\n    position, // scrolled element position in viewport units - not reactive\n    scrollState, // scroll progress stats - not reactive\n    inViewport, // reactive prop for when inside viewport\n    update: (args) => update({ onlyUpdateInViewport: false, ...args }), // optional manual update\n  }\n}\n\nexport { useTracker }\n"],"names":["useCanvasStore","create","set","debug","scaleMultiplier","globalRender","globalPriority","globalAutoClear","globalClearDepth","globalRenderQueue","clearGlobalRenderQueue","isCanvasAvailable","hasSmoothScrollbar","canvasChildren","renderToCanvas","key","mesh","props","_extends2","Object","getOwnPropertyDescriptor","instances","inactive","_extends","updateCanvas","newProps","_ref2","_extends3","_canvasChildren$key","removeFromCanvas","dispose","_ref3","_canvasChildren$key2","_objectWithoutPropertiesLoose","map","_toPropertyKey","pageReflow","requestReflow","state","scroll","y","x","limit","velocity","progress","direction","scrollDirection","undefined","scrollTo","target","window","onScroll","useScrollbar","enabled","useLayoutEffect","vanillaUseLayoutEffect","useEffect","_excluded","t","Math","pow","forwardRef","_ref","ref","children","duration","_ref$duration","easing","EASE_EXP_OUT","_ref$easing","_ref$smooth","smooth","_ref$direction","config","useRef","useImperativeHandle","current","lenis","lenisImpl","Lenis","destroy","_ref$enabled","locked","_ref$locked","scrollRestoration","_ref$scrollRestoratio","_ref$disablePointerOn","disablePointerOnScroll","horizontal","_ref$horizontal","scrollInContainer","_ref$scrollInContaine","_ref$updateGlobalStat","updateGlobalState","innerRef","preventPointer","globalScrollState","_lenis$current","__lenis","preventPointerEvents","prevent","style","pointerEvents","onMouseMove","useCallback","globalOnScroll","cb","_lenis$current2","on","_lenis$current3","off","history","_lenis$current5","_lenis$current6","_lenis$current7","addEffect","time","_lenis$current4","raf","disablePointer","pkg","debounce","abs","invalidate","notify","setState","getState","scrollY","scrollX","document","documentElement","classList","toggle","invalidateOnWheelEvent","addEventListener","removeEffect","removeEventListener","_lenis$current8","_lenis$current9","stop","start","useMemo","html","wrapper","body","content","firstElementChild","React","createElement","LenisScrollbar","smoothTouch","bind","isBrowser","mapLinear","a1","a2","b1","b2","track","options","size","useWindowSize","_temp","_ref$debounce","useState","width","innerWidth","Infinity","height","innerHeight","windowSize","setWindowSize","canvasEl","getElementById","handleResize","clientWidth","clientHeight","observer","debouncedResize","observe","_observer","disconnect","_useScrollbar","_useMemo","rootMargin","threshold","autoUpdate","opts","keys","index","useInView","_useInView","inViewport","inView","scale","_useState","setScale","scrollState","visibility","viewport","rect","top","bottom","left","right","_useState2","reactiveRect","setReactiveRect","bounds","positiveYUpBottom","position","vecn","vec3","_track$current","_rect","getBoundingClientRect","initialY","scrollTop","initialX","scrollLeft","update","_ref$onlyUpdateInView","onlyUpdateInViewport","_ref$scroll","_scroll","updateBounds","updatePosition","isHorizontal","sizeProp","pxInside","args","_update"],"mappings":"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"}