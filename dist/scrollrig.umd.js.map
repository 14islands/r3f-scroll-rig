{"version":3,"file":"scrollrig.umd.js","sources":["../src/hooks/useIsomorphicLayoutEffect.ts","../src/config.ts","../src/store.ts","../src/components/ResizeManager.ts","../src/components/PerspectiveCamera.tsx","../src/components/OrthographicCamera.tsx","../src/utils/helpers.ts","../src/renderer-api.ts","../src/components/GlobalCanvas.tsx","../src/hooks/useScrollRig.ts","../src/components/GlobalChildren.tsx","../src/components/GlobalRenderer.tsx","../src/components/CanvasErrorBoundary.tsx","../src/components/DebugMesh.tsx","../src/hooks/useWindowSize.ts","../src/utils/math.ts","../src/scrollbar/useScrollbar.ts","../src/hooks/useTracker.ts","../src/components/ScrollScene.tsx","../src/components/ViewportScrollScene.tsx","../src/hooks/useCanvas.ts","../src/components/UseCanvas.tsx","../src/hooks/useImageAsTexture.ts","../src/scrollbar/SmoothScrollbar.tsx","../src/components/R3FSmoothScrollbar.tsx","../src/index.ts"],"sourcesContent":["import { useEffect, useLayoutEffect as vanillaUseLayoutEffect } from 'react'\n\nexport const isBrowser = typeof window !== 'undefined'\n\nexport const useLayoutEffect = isBrowser ? vanillaUseLayoutEffect : useEffect\n","// Global config\nimport type { Scene, Camera, WebGLRenderer } from 'three'\n\ntype PreloadCallback = (gl: WebGLRenderer, scene: Scene, camera: Camera) => void\n\nexport const config = {\n  // Execution order for useFrames (highest = last render)\n  PRIORITY_PRELOAD: 0,\n  PRIORITY_SCISSORS: 1,\n  PRIORITY_VIEWPORTS: 1,\n  PRIORITY_GLOBAL: 1000,\n\n  DEFAULT_SCALE_MULTIPLIER: 1,\n\n  // Global rendering props\n  preloadQueue: [] as PreloadCallback[],\n}\n","import create from 'zustand'\nimport { config } from './config'\n\nimport { ScrollCallback } from './scrollbar/SmoothScrollbar.d'\n\ninterface ScrollRigStore {\n  debug: boolean\n  scaleMultiplier: number\n  globalRender: boolean\n  globalPriority: number\n  globalClearDepth: boolean\n  globalRenderQueue: false | any[]\n  clearGlobalRenderQueue: () => void\n  isCanvasAvailable: boolean\n  hasSmoothScrollbar: boolean\n  canvasChildren: Record<string, any | undefined>\n  updateCanvas: (key: string, newProps: any) => void\n  renderToCanvas: (key: string, mesh: any, props: any) => void\n  removeFromCanvas: (key: string, dispose: boolean) => void\n  pageReflow: number\n  requestReflow: () => void\n  scroll: {\n    y: number\n    x: number\n    limit: number\n    velocity: number\n    progress: number\n    direction: number\n    scrollDirection?: 'vertical' | 'horizontal'\n  }\n  scrollTo: (target: any) => void\n  onScroll: (cb: ScrollCallback) => () => void\n}\n\nconst useCanvasStore = create<ScrollRigStore>((set) => ({\n  // //////////////////////////////////////////////////////////////////////////\n  // GLOBAL ScrollRig STATE\n  // //////////////////////////////////////////////////////////////////////////\n  debug: false,\n  scaleMultiplier: config.DEFAULT_SCALE_MULTIPLIER,\n\n  globalRender: true,\n  globalPriority: config.PRIORITY_GLOBAL,\n  globalClearDepth: false,\n\n  globalRenderQueue: false,\n  clearGlobalRenderQueue: () => set(() => ({ globalRenderQueue: false })),\n\n  // true if WebGL initialized without errors\n  isCanvasAvailable: true,\n\n  // true if <VirtualScrollbar> is currently enabled\n  hasSmoothScrollbar: false,\n\n  // map of all components to render on the global canvas\n  canvasChildren: {},\n\n  // add component to canvas\n  renderToCanvas: (key, mesh, props = {}) =>\n    set(({ canvasChildren }) => {\n      // check if already mounted\n      if (Object.getOwnPropertyDescriptor(canvasChildren, key)) {\n        // increase usage count\n        canvasChildren[key].instances += 1\n        canvasChildren[key].props.inactive = false\n        return { canvasChildren }\n      } else {\n        // otherwise mount it\n        const obj = { ...canvasChildren, [key]: { mesh, props, instances: 1 } }\n        return { canvasChildren: obj }\n      }\n    }),\n\n  // pass new props to a canvas component\n  updateCanvas: (key, newProps) =>\n    // @ts-ignore\n    set(({ canvasChildren }) => {\n      if (!canvasChildren[key]) return\n      const {\n        [key]: { mesh, props, instances },\n      } = canvasChildren\n      const obj = {\n        ...canvasChildren,\n        [key]: { mesh, props: { ...props, ...newProps }, instances },\n      }\n      // console.log('updateCanvas', key, { ...props, ...newProps })\n      return { canvasChildren: obj }\n    }),\n\n  // remove component from canvas\n  removeFromCanvas: (key, dispose = true) =>\n    set(({ canvasChildren }) => {\n      // check if remove or reduce instances\n      if (canvasChildren[key]?.instances > 1) {\n        // reduce usage count\n        canvasChildren[key].instances -= 1\n        return { canvasChildren }\n      } else {\n        if (dispose) {\n          // unmount since no longer used\n          const { [key]: _omit, ...obj } = canvasChildren // make a separate copy of the obj and omit\n          return { canvasChildren: obj }\n        } else {\n          // or tell it that it is \"inactive\"\n          canvasChildren[key].instances = 0\n          canvasChildren[key].props.inactive = true\n          return { canvasChildren: { ...canvasChildren } }\n        }\n      }\n    }),\n\n  // Used to ask components to re-calculate their positions after a layout reflow\n  pageReflow: 0,\n  requestReflow: () => {\n    set((state) => {\n      return { pageReflow: state.pageReflow + 1 }\n    })\n  },\n\n  // keep track of scrollbar\n  scroll: {\n    y: 0,\n    x: 0,\n    limit: 0,\n    velocity: 0,\n    progress: 0,\n    direction: 0,\n    scrollDirection: undefined,\n  },\n  scrollTo: (target) => window.scrollTo(0, target),\n  onScroll: () => () => {},\n}))\n\nexport { useCanvasStore }\n","import { useEffect } from 'react'\nimport { ResizeObserver as Polyfill } from '@juggle/resize-observer'\n\nimport { useCanvasStore } from '../store'\n\n/**\n * Trigger reflow when WebFonts loaded\n */\nexport const ResizeManager = () => {\n  const requestReflow = useCanvasStore((state) => state.requestReflow)\n  const debug = useCanvasStore((state) => state.debug)\n\n  // reflow on webfont loaded to prevent misalignments\n  useEffect(() => {\n    const ResizeObserver = window.ResizeObserver || Polyfill\n\n    // watch out for any random height change\n    let observer = new ResizeObserver(() => {\n      requestReflow()\n      debug && console.log('ResizeManager', 'document.body height changed')\n    })\n    observer.observe(document.body)\n    return () => {\n      observer?.disconnect()\n    }\n  }, [])\n\n  return null\n}\n","import React, { useRef, forwardRef, useMemo, useImperativeHandle } from 'react'\nimport { useThree } from '@react-three/fiber'\nimport { PerspectiveCamera as PerspectiveCameraImpl } from 'three'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { useCanvasStore } from '../store'\n\ntype Props = JSX.IntrinsicElements['perspectiveCamera'] & {\n  makeDefault?: boolean\n}\n\nconst DEFAULT_FOV = 50\n\nexport const PerspectiveCamera = forwardRef(({ makeDefault = false, ...props }: Props, ref) => {\n  const set = useThree((state) => state.set)\n  const camera = useThree((state) => state.camera)\n  const size = useThree((state) => state.size)\n  const viewport = useThree((state) => state.viewport)\n  const cameraRef = useRef<PerspectiveCameraImpl>(null!)\n  useImperativeHandle(ref, () => cameraRef.current)\n\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n\n  // Calculate FoV or distance to match DOM size\n  const { fov, distance, aspect } = useMemo(() => {\n    const width = size.width * scaleMultiplier\n    const height = size.height * scaleMultiplier\n    const aspect = width / height\n\n    // check props vs defaults\n    let fov = props.fov || DEFAULT_FOV\n    let distance = (props?.position as number[])?.[2]\n\n    // calculate either FoV or distance to match scale\n    if (distance) {\n      // calculate FoV based on distance\n      fov = 2 * (180 / Math.PI) * Math.atan(height / (2 * distance))\n    } else {\n      // calculate distance for specified FoV\n      const ratio = Math.tan(((fov / 2.0) * Math.PI) / 180.0) * 2.0\n      distance = height / ratio\n    }\n\n    return { fov, distance, aspect }\n  }, [size, scaleMultiplier, pageReflow])\n\n  // Update camera projection and R3F viewport\n  useLayoutEffect(() => {\n    cameraRef.current.lookAt(0, 0, 0)\n    cameraRef.current.updateProjectionMatrix()\n    // https://github.com/react-spring/@react-three/fiber/issues/178\n    // Update matrix world since the renderer is a frame late\n    cameraRef.current.updateMatrixWorld()\n    // update r3f viewport which is lagging on resize\n    set((state) => ({ viewport: { ...state.viewport, ...viewport.getCurrentViewport(camera) } }))\n  }, [size, scaleMultiplier, pageReflow])\n\n  useLayoutEffect(() => {\n    if (makeDefault) {\n      const oldCam = camera\n      set(() => ({ camera: cameraRef.current! }))\n      return () => set(() => ({ camera: oldCam }))\n    }\n    // The camera should not be part of the dependency list because this components camera is a stable reference\n    // that must exchange the default, and clean up after itself on unmount.\n  }, [cameraRef, makeDefault, set])\n\n  return (\n    <perspectiveCamera\n      ref={cameraRef}\n      position={[0, 0, distance]}\n      onUpdate={(self) => self.updateProjectionMatrix()}\n      near={0.1}\n      aspect={aspect}\n      fov={fov}\n      far={distance * 2}\n      {...props}\n    />\n  )\n})\n","import React, { useRef, forwardRef, useMemo, useImperativeHandle } from 'react'\nimport { OrthographicCamera as OrthographicCameraImpl } from 'three'\nimport { useThree } from '@react-three/fiber'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { useCanvasStore } from '../store'\n\ntype Props = JSX.IntrinsicElements['orthographicCamera'] & {\n  makeDefault?: boolean\n}\nexport const OrthographicCamera = forwardRef(({ makeDefault = false, ...props }: Props, ref) => {\n  const set = useThree((state) => state.set)\n  const camera = useThree((state) => state.camera)\n  const size = useThree((state) => state.size)\n\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n\n  const distance = useMemo(() => {\n    const width = size.width * scaleMultiplier\n    const height = size.height * scaleMultiplier\n    return Math.max(width, height)\n  }, [size, pageReflow, scaleMultiplier])\n\n  const cameraRef = useRef<OrthographicCameraImpl>(null!)\n  useImperativeHandle(ref, () => cameraRef.current)\n  useLayoutEffect(() => {\n    cameraRef.current.lookAt(0, 0, 0)\n    cameraRef.current.updateProjectionMatrix()\n    // https://github.com/react-spring/@react-three/fiber/issues/178\n    // Update matrix world since the renderer is a frame late\n    cameraRef.current.updateMatrixWorld()\n  }, [distance, size])\n\n  useLayoutEffect(() => {\n    if (makeDefault) {\n      const oldCam = camera\n      set(() => ({ camera: cameraRef.current! }))\n      return () => set(() => ({ camera: oldCam }))\n    }\n    // The camera should not be part of the dependency list because this components camera is a stable reference\n    // that must exchange the default, and clean up after itself on unmount.\n  }, [cameraRef, makeDefault, set])\n\n  return (\n    <orthographicCamera\n      left={(size.width * scaleMultiplier) / -2}\n      right={(size.width * scaleMultiplier) / 2}\n      top={(size.height * scaleMultiplier) / 2}\n      bottom={(size.height * scaleMultiplier) / -2}\n      far={distance * 2}\n      position={[0, 0, distance]}\n      near={0.001}\n      ref={cameraRef}\n      onUpdate={(self) => self.updateProjectionMatrix()}\n      {...props}\n    />\n  )\n})\n","import { Object3D } from 'three'\n\ntype CulledObject = {\n  wasFrustumCulled?: boolean\n  wasVisible?: boolean\n} & Object3D\n\n// Use to override Frustum temporarily to pre-upload textures to GPU\nexport function setAllCulled(obj: CulledObject, overrideCulled: boolean) {\n  if (!obj) return\n  if (overrideCulled === false) {\n    obj.wasFrustumCulled = obj.frustumCulled\n    obj.wasVisible = obj.visible\n    obj.visible = true\n    obj.frustumCulled = false\n  } else {\n    obj.visible = !!obj.wasVisible\n    obj.frustumCulled = !!obj.wasFrustumCulled\n  }\n  obj.children.forEach((child) => setAllCulled(child, overrideCulled))\n}\n","import { config } from './config'\nimport { Vector2, WebGLRenderer, Scene, Camera } from 'three'\nimport { invalidate } from '@react-three/fiber'\n\nimport { setAllCulled } from './utils/helpers'\nimport { useCanvasStore } from './store'\n\nconst viewportSize = new Vector2()\n\n// Flag that we need global rendering (full screen)\nexport const requestRender = (layers = [0]) => {\n  useCanvasStore.getState().globalRenderQueue = useCanvasStore.getState().globalRenderQueue || [0]\n  useCanvasStore.getState().globalRenderQueue = [...(useCanvasStore.getState().globalRenderQueue || []), ...layers]\n}\n\nexport const renderScissor = ({\n  gl,\n  scene,\n  camera,\n  left,\n  top,\n  width,\n  height,\n  layer = 0,\n  autoClear = false,\n  clearDepth = false,\n}: any) => {\n  if (!scene || !camera) return\n  gl.autoClear = autoClear\n  gl.setScissor(left, top, width, height)\n  gl.setScissorTest(true)\n  camera.layers.set(layer)\n  clearDepth && gl.clearDepth()\n  gl.render(scene, camera)\n  gl.setScissorTest(false)\n}\n\nexport const renderViewport = ({\n  gl,\n  scene,\n  camera,\n  left,\n  top,\n  width,\n  height,\n  layer = 0,\n  scissor = true,\n  autoClear = false,\n  clearDepth = false,\n}: any) => {\n  if (!scene || !camera) return\n  gl.getSize(viewportSize)\n  gl.autoClear = autoClear\n  gl.setViewport(left, top, width, height)\n  gl.setScissor(left, top, width, height)\n  gl.setScissorTest(scissor)\n  camera.layers.set(layer)\n  clearDepth && gl.clearDepth()\n  gl.render(scene, camera)\n  gl.setScissorTest(false)\n  gl.setViewport(0, 0, viewportSize.x, viewportSize.y)\n}\n\nexport const preloadScene = (scene: Scene, camera: Camera, layer = 0, callback?: () => void) => {\n  config.preloadQueue.push((gl: WebGLRenderer, globalScene: Scene, globalCamera: Camera) => {\n    gl.setScissorTest(false)\n    setAllCulled(scene || globalScene, false)\n    camera.layers.set(layer)\n    gl.render(scene || globalScene, camera || globalCamera)\n    setAllCulled(scene || globalScene, true)\n    callback && callback()\n  })\n  // auto trigger a new frame for the preload\n  invalidate()\n}\n","import React, { ReactNode } from 'react'\nimport { Canvas, Props } from '@react-three/fiber'\nimport { ResizeObserver as Polyfill } from '@juggle/resize-observer'\nimport { parse } from 'query-string'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { useCanvasStore } from '../store'\nimport { ResizeManager } from './ResizeManager'\nimport { PerspectiveCamera } from './PerspectiveCamera'\nimport { OrthographicCamera } from './OrthographicCamera'\n\nimport { GlobalChildren } from './GlobalChildren'\nimport { GlobalRenderer } from './GlobalRenderer'\nimport { CanvasErrorBoundary } from './CanvasErrorBoundary'\n\nimport { config } from '../config'\n\nlet polyfill: new (callback: ResizeObserverCallback) => ResizeObserver\nif (typeof window !== 'undefined') {\n  polyfill = window.ResizeObserver || Polyfill\n}\n\ninterface IGlobalCanvas extends Omit<Props, 'children'> {\n  children?: ReactNode | ((globalChildren: ReactNode) => ReactNode)\n  orthographic?: boolean\n  onError?: (props: any) => void\n  camera?: any\n  // state\n  debug?: boolean\n  scaleMultiplier?: number\n  globalRender?: boolean\n  globalPriority?: number\n  globalClearDepth?: boolean\n}\n\nconst GlobalCanvasImpl = ({\n  children,\n  gl,\n  style,\n  orthographic,\n  camera,\n  debug,\n  scaleMultiplier = config.DEFAULT_SCALE_MULTIPLIER,\n  globalRender = true,\n  globalPriority = config.PRIORITY_GLOBAL,\n  globalClearDepth = false,\n  ...props\n}: Omit<IGlobalCanvas, 'onError'>) => {\n  const useGlobalRenderer = useCanvasStore((state) => state.globalRender)\n\n  // enable debug mode\n  useLayoutEffect(() => {\n    // Querystring overrides\n    const qs = parse(window.location.search)\n\n    // show debug statements\n    if (debug || typeof qs.debug !== 'undefined') {\n      useCanvasStore.setState({ debug: true })\n    }\n  }, [debug])\n\n  // update state\n  useLayoutEffect(() => {\n    useCanvasStore.setState({\n      scaleMultiplier,\n      globalRender,\n      globalPriority,\n      globalClearDepth,\n    })\n  }, [scaleMultiplier, globalPriority, globalRender, globalClearDepth])\n\n  return (\n    <Canvas\n      id=\"ScrollRig-canvas\"\n      // use our own default camera\n      camera={{\n        manual: true,\n      }}\n      // Some sane defaults\n      gl={{\n        // https://blog.tojicode.com/2013/12/failifmajorperformancecaveat-with-great.html\n        failIfMajorPerformanceCaveat: true, // skip webgl if slow device\n        ...gl,\n      }}\n      // polyfill old iOS safari\n      resize={{ scroll: false, debounce: 0, polyfill }}\n      // default styles\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        height: '100vh', // use 100vh to avoid resize on iOS when url bar goes away\n        ...style,\n      }}\n      // allow to override anything of the above\n      {...props}\n    >\n      {/* @ts-ignore */}\n      {!orthographic && <PerspectiveCamera manual makeDefault {...camera} />}\n      {/* @ts-ignore */}\n      {orthographic && <OrthographicCamera manual makeDefault {...camera} />}\n\n      {useGlobalRenderer && <GlobalRenderer />}\n\n      {typeof children === 'function' ? children(<GlobalChildren />) : <GlobalChildren>{children}</GlobalChildren>}\n\n      <ResizeManager />\n    </Canvas>\n  )\n}\n\nexport const GlobalCanvas = ({ children, onError, ...props }: IGlobalCanvas) => {\n  useLayoutEffect(() => {\n    document.documentElement.classList.add('js-has-global-canvas')\n  }, [])\n\n  return (\n    // @ts-ignore\n    <CanvasErrorBoundary\n      onError={(err: any) => {\n        onError && onError(err)\n        useCanvasStore.setState({ isCanvasAvailable: false }) /* WebGL failed to init */\n        document.documentElement.classList.remove('js-has-global-canvas')\n        document.documentElement.classList.add('js-global-canvas-error')\n      }}\n    >\n      <GlobalCanvasImpl {...props}>{children}</GlobalCanvasImpl>\n      <noscript>\n        <style>\n          {`\n          .ScrollRig-visibilityHidden,\n          .ScrollRig-transparentColor {\n            visibility: unset;\n            color: unset;\n          }\n          `}\n        </style>\n      </noscript>\n    </CanvasErrorBoundary>\n  )\n}\n","import { useEffect } from 'react'\n\nimport type { Scene, Camera } from 'three'\nimport { useCanvasStore } from '../store'\nimport { preloadScene, requestRender, renderScissor, renderViewport } from '../renderer-api'\n\nexport interface ScrollRigState {\n  debug: boolean\n  isCanvasAvailable: boolean\n  hasSmoothScrollbar: boolean\n  scaleMultiplier: number\n  preloadScene: (scene: Scene, camera: Camera, layer?: number, callback?: any) => void\n  requestRender: (layers?: number[]) => void\n  renderScissor: (args: any) => void\n  renderViewport: (args: any) => void\n  reflow: () => void\n}\n\n/**\n * Public interface for ScrollRig\n */\nexport const useScrollRig = () => {\n  const isCanvasAvailable = useCanvasStore((state) => state.isCanvasAvailable)\n  const hasSmoothScrollbar = useCanvasStore((state) => state.hasSmoothScrollbar)\n  const requestReflow = useCanvasStore((state) => state.requestReflow)\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n  const debug = useCanvasStore((state) => state.debug)\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n\n  useEffect(() => {\n    if (debug) {\n      // @ts-ignore\n      window._scrollRig = window._scrollRig || {}\n      // @ts-ignore\n      window._scrollRig.reflow = requestReflow\n    }\n  }, [])\n\n  return {\n    // boolean state\n    debug,\n    isCanvasAvailable,\n    hasSmoothScrollbar,\n    // scale\n    scaleMultiplier,\n    // render API\n    preloadScene,\n    requestRender,\n    renderScissor,\n    renderViewport,\n    // recalc all tracker positions\n    reflow: requestReflow,\n    reflowCompleted: pageReflow,\n  } as ScrollRigState\n}\n","import React, { Fragment, useEffect, ReactNode, cloneElement } from 'react'\nimport { invalidate, useThree } from '@react-three/fiber'\n\nimport { useCanvasStore } from '../store'\nimport { useScrollRig } from '../hooks/useScrollRig'\n\n/**\n * Renders global children from useCanvas hook\n */\nexport const GlobalChildren = ({ children }: { children?: ReactNode }) => {\n  const gl = useThree((s) => s.gl)\n  const canvasChildren = useCanvasStore((state) => state.canvasChildren)\n  const scrollRig = useScrollRig()\n\n  useEffect(() => {\n    // render empty canvas automatically if all children were removed\n    if (!Object.keys(canvasChildren).length) {\n      scrollRig.debug && console.log('GlobalRenderer', 'auto render empty canvas')\n      // clear leftover viewports etc from unmounted components\n      gl.clear()\n      // re-render global scene in case frameloop=\"demand\" to avoid empty canvas\n      scrollRig.requestRender()\n      invalidate()\n    }\n  }, [canvasChildren])\n\n  scrollRig.debug && console.log('GlobalChildren', Object.keys(canvasChildren).length)\n  return (\n    <>\n      {children}\n      {Object.keys(canvasChildren).map((key) => {\n        const { mesh, props } = canvasChildren[key]\n\n        if (typeof mesh === 'function') {\n          return <Fragment key={key}>{mesh({ key, ...scrollRig, ...props })}</Fragment>\n        }\n\n        return cloneElement(mesh, {\n          key,\n          ...props,\n        })\n      })}\n    </>\n  )\n}\n","import { useThree, useFrame, invalidate } from '@react-three/fiber'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { config } from '../config'\nimport { useCanvasStore } from '../store'\nimport { useScrollRig } from '../hooks/useScrollRig'\n\n/**\n * Global render loop to avoid double renders on the same frame\n */\nexport const GlobalRenderer = () => {\n  const gl = useThree((s) => s.gl)\n  const frameloop = useThree((s) => s.frameloop)\n  const globalClearDepth = useCanvasStore((state) => state.globalClearDepth)\n  const globalPriority = useCanvasStore((state) => state.globalPriority)\n  const scrollRig = useScrollRig()\n\n  // https://threejs.org/docs/#api/en/renderers/WebGLRenderer.debug\n  useLayoutEffect(() => {\n    gl.debug.checkShaderErrors = scrollRig.debug\n  }, [scrollRig.debug])\n\n  // PRELOAD RENDER LOOP\n  useFrame(({ camera, scene }) => {\n    if (!config.preloadQueue.length) return\n    // Render preload frames first and clear directly\n    config.preloadQueue.forEach((render) => render(gl, scene, camera))\n    // cleanup\n    gl.clear()\n    config.preloadQueue = []\n    // trigger new frame to get correct visual state after all preloads\n    scrollRig.debug && console.log('GlobalRenderer', 'preload complete. trigger global render')\n    scrollRig.requestRender()\n    invalidate()\n  }, config.PRIORITY_PRELOAD)\n\n  // GLOBAL RENDER LOOP\n  useFrame(({ camera, scene }) => {\n    const globalRenderQueue = useCanvasStore.getState().globalRenderQueue\n\n    // Render if requested or if always on\n    if (frameloop === 'always' || globalRenderQueue) {\n      // render default layer, scene, camera\n      camera.layers.disableAll()\n      if (globalRenderQueue) {\n        // @ts-ignore\n        globalRenderQueue.forEach((layer) => {\n          camera.layers.enable(layer)\n        })\n      } else {\n        camera.layers.enable(0)\n      }\n\n      // render as HUD over any other renders by default\n      globalClearDepth && gl.clearDepth()\n      gl.render(scene, camera)\n    }\n    // cleanup for next frame\n    useCanvasStore.getState().clearGlobalRenderQueue()\n  }, globalPriority) // Take over rendering\n\n  return null\n}\n","// @ts-nocheck\nimport { Component, ReactNode } from 'react'\n\ninterface ICanvasErrorBoundary {\n  children: ReactNode\n  onError: () => void\n}\n\nexport class CanvasErrorBoundary extends Component<{}, ICanvasErrorBoundary> {\n  constructor(props) {\n    super(props)\n    this.state = { error: false }\n    this.props = props\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { error }\n  }\n\n  // componentDidCatch(error, errorInfo) {\n  //   // You can also log the error to an error reporting service\n  //   // logErrorToMyService(error, errorInfo)\n  // }\n\n  render() {\n    if (this.state.error) {\n      this.props.onError && this.props.onError(this.state.error)\n      return null\n    }\n\n    return this.props.children\n  }\n}\n","import React from 'react'\nimport { Color } from 'three'\n\nexport const DebugMesh = ({ scale }: { scale: [x: number, y: number, z: number] }) => (\n  <mesh scale={scale}>\n    <planeGeometry />\n    <shaderMaterial\n      args={[\n        {\n          uniforms: {\n            color: { value: new Color('hotpink') },\n          },\n          vertexShader: `\n            void main() {\n              gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n            }\n          `,\n          fragmentShader: `\n            uniform vec3 color;\n            uniform float opacity;\n            void main() {\n              gl_FragColor.rgba = vec4(color, .5);\n            }\n          `,\n        },\n      ]}\n      transparent\n    />\n  </mesh>\n)\n","import { useState, useEffect } from 'react'\nimport { ResizeObserver as Polyfill } from '@juggle/resize-observer'\nimport pkg from 'debounce'\n\nconst isBrowser = typeof window !== 'undefined'\nexport interface WindowSize {\n  width: number\n  height: number\n}\n\ntype ConfigProps = {\n  debounce?: number\n}\n\n/*\n * Triggers a resize only if the Canvas DOM element changed dimensions - not on window resize event\n *\n * This is to avoid costly re-renders when the URL bar is scrolled away on mobile\n *\n * Based on: https://usehooks.com/useWindowSize/\n */\n\nexport function useWindowSize({ debounce = 0 }: ConfigProps = {}) {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowSize>({\n    width: isBrowser ? window.innerWidth : Infinity,\n    height: isBrowser ? window.innerHeight : Infinity,\n  })\n\n  useEffect(() => {\n    // check if we can find a canvas - if so, base size on canvas instead of window\n    // since 100vh !== window.innerHeight on mobile\n    const canvasEl = document.getElementById('ScrollRig-canvas')\n\n    // Handler to call on window resize\n    function handleResize() {\n      const width = canvasEl ? canvasEl.clientWidth : window.innerWidth\n      const height = canvasEl ? canvasEl.clientHeight : window.innerHeight\n\n      if (width !== windowSize.width || height !== windowSize.height) {\n        // Set window width/height to state\n        setWindowSize({\n          width,\n          height,\n        })\n      }\n    }\n\n    const debouncedResize = pkg.debounce(handleResize, debounce)\n\n    // Add event listener\n    const ResizeObserver = window.ResizeObserver || Polyfill\n    let observer: ResizeObserver\n    if (canvasEl) {\n      observer = new ResizeObserver(debouncedResize)\n      observer.observe(canvasEl)\n    } else {\n      window.addEventListener('resize', debouncedResize)\n    }\n    // Call handler right away so state gets updated with initial window size\n    handleResize()\n    // Remove event listener on cleanup\n    return () => {\n      window.removeEventListener('resize', debouncedResize)\n      observer?.disconnect()\n    }\n  }, [windowSize, setWindowSize])\n\n  return windowSize\n}\n","// Linear mapping from range <a1, a2> to range <b1, b2>\nexport function mapLinear(x: number, a1: number, a2: number, b1: number, b2: number) {\n  return b1 + ((x - a1) * (b2 - b1)) / (a2 - a1)\n}\n","import { useCanvasStore } from '../store'\nimport { ScrollCallback } from './SmoothScrollbar.d'\n\nexport interface Scroll {\n  y: number\n  x: number\n  limit: number\n  velocity: number\n  progress: number\n  direction: number\n  scrollDirection: string\n}\n\ninterface UseScrollbarProps {\n  enabled: boolean\n  scroll: Scroll\n  scrollTo: (target: any) => void\n  onScroll: (cb: ScrollCallback) => () => void\n}\n\n/**\n * Public interface for ScrollRig\n */\nexport const useScrollbar = () => {\n  const hasSmoothScrollbar = useCanvasStore((state) => state.hasSmoothScrollbar)\n  const scroll = useCanvasStore((state) => state.scroll)\n  const scrollTo = useCanvasStore((state) => state.scrollTo)\n  const onScroll = useCanvasStore((state) => state.onScroll)\n\n  return {\n    enabled: hasSmoothScrollbar,\n    scroll,\n    scrollTo,\n    onScroll,\n  } as UseScrollbarProps\n}\n","import { useRef, useCallback, useEffect, useMemo, useState, MutableRefObject } from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { useWindowSize } from './useWindowSize'\nimport vecn from 'vecn'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { mapLinear } from '../utils/math'\nimport { useCanvasStore } from '../store'\nimport { useScrollRig } from './useScrollRig'\n\nimport { useScrollbar, Scroll } from '../scrollbar/useScrollbar'\n\nimport type { Rect, Bounds, TrackerOptions, Tracker, ScrollState, UpdateCallback } from './useTracker.d'\n\nfunction updateBounds(bounds: Bounds, rect: Rect, scroll: Scroll, size: any) {\n  bounds.top = rect.top - (scroll.y || 0)\n  bounds.bottom = rect.bottom - (scroll.y || 0)\n  bounds.left = rect.left - (scroll.x || 0)\n  bounds.right = rect.right - (scroll.x || 0)\n  bounds.width = rect.width\n  bounds.height = rect.height\n  // move coordinate system so 0,0 is at center of screen\n  bounds.x = bounds.left + rect.width * 0.5 - size.width * 0.5\n  bounds.y = bounds.top + rect.height * 0.5 - size.height * 0.5\n  bounds.positiveYUpBottom = size.height - bounds.bottom // inverse Y\n}\n\nfunction updatePosition(position: vec3, bounds: Bounds, scaleMultiplier: number) {\n  position.x = bounds.x * scaleMultiplier\n  position.y = -1 * bounds.y * scaleMultiplier\n}\n\n/**\n * Returns the current Scene position of the DOM element\n * based on initial getBoundingClientRect and scroll delta from start\n */\nfunction useTracker(track: MutableRefObject<HTMLElement>, options?: TrackerOptions): Tracker {\n  const size = useWindowSize()\n  const { debug } = useScrollRig()\n  const { scroll, onScroll } = useScrollbar()\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n\n  // extend defaults with optional options\n  const { rootMargin, threshold, autoUpdate, wrapper } = useMemo(() => {\n    const target = { rootMargin: '0%', threshold: 0, autoUpdate: true } as TrackerOptions\n    const opts = options || {}\n    Object.keys(opts).map((key: string, index) => {\n      if (opts[key] !== undefined) target[key] = opts[key]\n    })\n    return target\n  }, [options])\n\n  // check if element is in viewport\n  const { ref, inView: inViewport } = useInView({ rootMargin, threshold })\n\n  // bind useInView ref to current tracking element\n  useLayoutEffect(() => {\n    ref(track.current)\n  }, [track])\n\n  // Using state so it's reactive\n  const [scale, setScale] = useState<vec3>(vecn.vec3(0, 0, 0))\n\n  // Using ref because\n  const scrollState: ScrollState = useRef({\n    inViewport: false,\n    progress: -1,\n    visibility: -1,\n    viewport: -1,\n  }).current\n\n  // DOM rect (initial position in pixels offset by scroll value on page load)\n  // Using ref so we can calculate bounds & position without a re-render\n  const rect = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n  }).current\n\n  // expose internal ref as a reactive state as well\n  const [reactiveRect, setReactiveRect] = useState<Rect>(rect)\n\n  // bounding rect in pixels - updated by scroll\n  const bounds = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n    positiveYUpBottom: 0,\n  }).current\n\n  // position in viewport units - updated by scroll\n  const position = useRef(vecn.vec3(0, 0, 0)).current\n\n  // Calculate bounding Rect as soon as it's available\n  useLayoutEffect(() => {\n    const _rect = track.current?.getBoundingClientRect()\n    if (!_rect) return\n    const initialY = wrapper ? (wrapper as HTMLElement).scrollTop : window.scrollY\n    const initialX = wrapper ? (wrapper as HTMLElement).scrollLeft : window.scrollX\n    rect.top = _rect.top + initialY\n    rect.bottom = _rect.bottom + initialY\n    rect.left = _rect.left + initialX\n    rect.right = _rect.right + initialX\n    rect.width = _rect.width\n    rect.height = _rect.height\n    setReactiveRect({ ...rect })\n    setScale(vecn.vec3(rect?.width * scaleMultiplier, rect?.height * scaleMultiplier, 1))\n    debug &&\n      console.log(\n        'useTracker.getBoundingClientRect:',\n        rect,\n        'intialScroll:',\n        { initialY, initialX },\n        'size:',\n        size,\n        'pageReflow:',\n        pageReflow\n      )\n  }, [track, size, pageReflow, scaleMultiplier, debug])\n\n  const update = useCallback(\n    ({ onlyUpdateInViewport = false, scroll: overrideScroll }: UpdateCallback = {}) => {\n      if (!track.current || (onlyUpdateInViewport && !scrollState.inViewport)) {\n        return\n      }\n\n      const _scroll = overrideScroll || scroll\n\n      updateBounds(bounds, rect, _scroll, size)\n      updatePosition(position, bounds, scaleMultiplier)\n\n      // scrollState setup based on scroll direction\n      const isHorizontal = _scroll.scrollDirection === 'horizontal'\n      const sizeProp = isHorizontal ? 'width' : 'height'\n      const startProp = isHorizontal ? 'left' : 'top'\n\n      // calculate progress of passing through viewport (0 = just entered, 1 = just exited)\n      const pxInside = size[sizeProp] - bounds[startProp]\n      scrollState.progress = mapLinear(pxInside, 0, size[sizeProp] + bounds[sizeProp], 0, 1) // percent of total visible distance\n      scrollState.visibility = mapLinear(pxInside, 0, bounds[sizeProp], 0, 1) // percent of item height in view\n      scrollState.viewport = mapLinear(pxInside, 0, size[sizeProp], 0, 1) // percent of window height scrolled since visible\n    },\n    [track, size, scaleMultiplier, scroll]\n  )\n\n  // update scrollState in viewport\n  useLayoutEffect(() => {\n    scrollState.inViewport = inViewport\n    // update once more in case it went out of view\n    update({ onlyUpdateInViewport: false })\n    debug && console.log('useTracker.inViewport:', inViewport, 'update()')\n  }, [inViewport])\n\n  // re-run if the callback updated\n  useLayoutEffect(() => {\n    update({ onlyUpdateInViewport: false })\n    debug && console.log('useTracker.update on resize/reflow')\n  }, [update, pageReflow])\n\n  // auto-update on scroll\n  useEffect(() => {\n    if (autoUpdate) return onScroll((_scroll) => update({ onlyUpdateInViewport: true }))\n  }, [autoUpdate, update, onScroll])\n\n  return {\n    rect: reactiveRect, // Dom rect - doesn't change on scroll - not - reactive\n    bounds, // scrolled bounding rect in pixels - not reactive\n    scale, // reactive scene scale - includes z-axis so it can be spread onto mesh directly\n    position, // scrolled element position in viewport units - not reactive\n    scrollState, // scroll progress stats - not reactive\n    inViewport, // reactive prop for when inside viewport\n    update, // optional manual update\n  }\n}\n\nexport { useTracker }\n","import React, { memo, useState, useCallback, MutableRefObject, ReactNode } from 'react'\nimport { Scene } from 'three'\nimport { useFrame, createPortal } from '@react-three/fiber'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { config } from '../config'\nimport { useCanvasStore } from '../store'\nimport { useScrollRig } from '../hooks/useScrollRig'\nimport { DebugMesh } from './DebugMesh'\nimport { useTracker } from '../hooks/useTracker'\nimport type { ScrollState } from '../hooks/useTracker.d'\n\nexport interface ScrollSceneChildProps {\n  track: MutableRefObject<HTMLElement>\n  margin: number\n  priority: number\n  scale: vec3 | undefined\n  scrollState: ScrollState\n  inViewport: boolean\n}\n\ninterface ScrollScene {\n  track: MutableRefObject<HTMLElement>\n  children: (state: ScrollSceneChildProps) => ReactNode\n  margin?: number\n  inViewportMargin?: string\n  inViewportThreshold?: number\n  visible?: boolean\n  hideOffscreen?: boolean\n  scissor?: boolean\n  debug?: boolean\n  as?: string\n  priority?: number\n}\n\n/**\n * Generic THREE.js Scene that tracks the dimensions and position of a DOM element while scrolling\n * Scene is positioned and scaled exactly above DOM element\n *\n * @author david@14islands.com\n */\nconst ScrollSceneImpl = ({\n  track,\n  children,\n  margin = 0, // Margin outside scissor to avoid clipping vertex displacement (px)\n  inViewportMargin,\n  inViewportThreshold,\n  visible = true,\n  hideOffscreen = true,\n  scissor = false,\n  debug = false,\n  as = 'scene',\n  priority = config.PRIORITY_SCISSORS,\n  ...props\n}: ScrollScene) => {\n  const inlineSceneRef = useCallback((node: any) => {\n    if (node !== null) {\n      setScene(node)\n    }\n  }, [])\n\n  const [scene, setScene] = useState<Scene | null>(scissor ? new Scene() : null)\n  const { requestRender, renderScissor } = useScrollRig()\n  const globalRender = useCanvasStore((state) => state.globalRender)\n\n  const { bounds, scale, position, scrollState, inViewport } = useTracker(track, {\n    rootMargin: inViewportMargin,\n    threshold: inViewportThreshold,\n  })\n\n  // Hide scene when outside of viewport if `hideOffscreen` or set to `visible` prop\n  useLayoutEffect(() => {\n    if (scene) scene.visible = hideOffscreen ? inViewport && visible : visible\n  }, [scene, inViewport, hideOffscreen, visible])\n\n  // RENDER FRAME\n  useFrame(\n    ({ gl, camera }) => {\n      if (!scene) return\n\n      if (scene.visible) {\n        // move scene\n        scene.position.y = position.y\n        scene.position.x = position.x\n\n        if (scissor) {\n          renderScissor({\n            gl,\n            scene,\n            camera,\n            left: bounds.left - margin,\n            top: bounds.positiveYUpBottom - margin,\n            width: bounds.width + margin * 2,\n            height: bounds.height + margin * 2,\n          })\n        } else {\n          requestRender()\n        }\n      }\n    },\n    globalRender ? priority : undefined\n  )\n\n  const content = (\n    <>\n      {(!children || debug) && scale && <DebugMesh scale={scale} />}\n      {children &&\n        scene &&\n        scale &&\n        children({\n          // inherited props\n          track,\n          margin,\n          // new props\n          scale,\n          scrollState,\n          inViewport,\n          // useFrame render priority (in case children need to run after)\n          priority: priority,\n          // tunnel the rest\n          ...props,\n        })}\n    </>\n  )\n\n  // portal if scissor or inline nested scene\n  const InlineElement: any = as\n  // @ts-ignore\n  return scissor && scene ? createPortal(content, scene) : <InlineElement ref={inlineSceneRef}>{content}</InlineElement>\n}\n\nconst ScrollScene = memo(ScrollSceneImpl)\n\nexport { ScrollScene }\n","import React, { memo, useEffect, useState, useCallback, MutableRefObject, ReactNode } from 'react'\nimport { Scene } from 'three'\nimport { useFrame, createPortal, useThree } from '@react-three/fiber'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { config } from '../config'\nimport { useScrollRig } from '../hooks/useScrollRig'\nimport { DebugMesh } from './DebugMesh'\nimport { useTracker } from '../hooks/useTracker'\nimport type { Tracker } from '../hooks/useTracker.d'\nimport { PerspectiveCamera } from './PerspectiveCamera'\nimport { OrthographicCamera } from './OrthographicCamera'\n\nimport type { ScrollSceneChildProps } from './ScrollScene'\n\ninterface ViewportScrollScene {\n  track: MutableRefObject<HTMLElement>\n  children: (state: ScrollSceneChildProps) => ReactNode\n  margin?: number\n  inViewportMargin?: string\n  inViewportThreshold?: number\n  visible?: boolean\n  hideOffscreen?: boolean\n  debug?: boolean\n  orthographic?: boolean\n  priority?: number\n  hud?: boolean // clear depth to render on top\n  camera?: any\n}\n\n/**\n * Generic THREE.js Scene that tracks the dimensions and position of a DOM element while scrolling\n * Scene is rendered into a GL viewport matching the DOM position for better performance\n *\n * Adapted to @react-three/fiber from https://threejsfundamentals.org/threejs/lessons/threejs-multiple-scenes.html\n * @author david@14islands.com\n */\nconst Viewport = ({\n  track,\n  children,\n  margin = 0, // Margin outside viewport to avoid clipping vertex displacement (px)\n  visible = true,\n  hideOffscreen = true,\n  debug = false,\n  orthographic = false,\n  priority = config.PRIORITY_VIEWPORTS,\n  inViewport,\n  bounds,\n  scale,\n  scrollState,\n  camera,\n  hud,\n  ...props\n}: ViewportScrollScene & Tracker) => {\n  const scene = useThree((s) => s.scene)\n  const get = useThree((state) => state.get)\n  const setEvents = useThree((state) => state.setEvents)\n\n  const { renderViewport } = useScrollRig()\n\n  // Hide scene when outside of viewport if `hideOffscreen` or set to `visible` prop\n  useLayoutEffect(() => {\n    scene.visible = hideOffscreen ? inViewport && visible : visible\n  }, [inViewport, hideOffscreen, visible])\n\n  // From: https://github.com/pmndrs/drei/blob/d22fe0f58fd596c7bfb60a7a543cf6c80da87624/src/web/View.tsx#L80\n  useEffect(() => {\n    // Connect the event layer to the tracking element\n    const old = get().events.connected\n    setEvents({ connected: track.current })\n    return () => setEvents({ connected: old })\n  }, [])\n\n  // RENDER FRAME\n  useFrame(({ gl, scene, camera }) => {\n    // Render scene to viewport using local camera and limit updates using scissor test\n    if (scene.visible) {\n      renderViewport({\n        gl,\n        scene,\n        camera,\n        left: bounds.left - margin,\n        top: bounds.positiveYUpBottom - margin,\n        width: bounds.width + margin * 2,\n        height: bounds.height + margin * 2,\n        clearDepth: !!hud,\n      })\n    }\n  }, priority)\n\n  return (\n    <>\n      {!orthographic && <PerspectiveCamera manual makeDefault {...camera} />}\n      {orthographic && <OrthographicCamera manual makeDefault {...camera} />}\n      {(!children || debug) && scale && <DebugMesh scale={scale} />}\n      {children &&\n        // scene &&\n        scale &&\n        children({\n          // inherited props\n          track,\n          margin,\n          // new props\n          scale,\n          scrollState,\n          inViewport,\n          // useFrame render priority (in case children need to run after)\n          priority,\n          // tunnel the rest\n          ...props,\n        })}\n    </>\n  )\n}\n\nfunction ViewportScrollSceneImpl({\n  track,\n  margin = 0, // Margin outside viewport to avoid clipping vertex displacement (px)\n  inViewportMargin,\n  inViewportThreshold,\n  priority,\n  ...props\n}: ViewportScrollScene) {\n  const [scene] = useState(() => new Scene())\n\n  const { bounds, ...trackerProps } = useTracker(track, {\n    rootMargin: inViewportMargin,\n    threshold: inViewportThreshold,\n  })\n\n  // From: https://github.com/pmndrs/drei/blob/d22fe0f58fd596c7bfb60a7a543cf6c80da87624/src/web/View.tsx#L80\n  const compute = useCallback(\n    (event: any, state: any) => {\n      // limit events to DOM element bounds\n      if (track.current && event.target === track.current) {\n        const { width, height, left, top } = bounds\n        const mWidth = width + margin * 2\n        const mHeight = height + margin * 2\n        const x = event.clientX - left + margin\n        const y = event.clientY - top + margin\n        state.pointer.set((x / mWidth) * 2 - 1, -(y / mHeight) * 2 + 1)\n        state.raycaster.setFromCamera(state.pointer, state.camera)\n      }\n    },\n    [bounds]\n  )\n\n  return (\n    bounds &&\n    createPortal(\n      <Viewport track={track} bounds={bounds} priority={priority} margin={margin} {...props} {...trackerProps} />,\n      scene,\n      // @ts-ignore\n      { events: { compute, priority }, size: { width: bounds.width, height: bounds.height } }\n    )\n  )\n}\n\nconst ViewportScrollScene = memo(ViewportScrollSceneImpl)\n\nexport { ViewportScrollScene }\n","import { useEffect, useMemo, useCallback, ReactNode } from 'react'\nimport { MathUtils } from 'three'\n\nimport { useCanvasStore } from '../store'\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\n\nimport { ScrollRigState } from '../hooks/useScrollRig'\n/**\n * Adds THREE.js object to the GlobalCanvas while the component is mounted\n * @param {object} object THREE.js object3d\n */\nfunction useCanvas(\n  object: ReactNode | ((props: ScrollRigState) => ReactNode),\n  deps: any = {},\n  { key, dispose = true }: { key?: string; dispose?: boolean } = {}\n) {\n  const updateCanvas = useCanvasStore((state) => state.updateCanvas)\n  const renderToCanvas = useCanvasStore((state) => state.renderToCanvas)\n  const removeFromCanvas = useCanvasStore((state) => state.removeFromCanvas)\n\n  // auto generate uuid v4 key\n  const uniqueKey = useMemo(() => key || MathUtils.generateUUID(), [])\n\n  // render to canvas if not mounted already\n  useLayoutEffect(() => {\n    renderToCanvas(uniqueKey, object, { inactive: false })\n  }, [uniqueKey])\n\n  // remove from canvas if no usage (after render so new users have time to register)\n  useEffect(() => {\n    return () => {\n      removeFromCanvas(uniqueKey, dispose)\n    }\n  }, [uniqueKey])\n\n  // return function that can set new props on the canvas component\n  const set = useCallback(\n    (props: any) => {\n      updateCanvas(uniqueKey, props)\n    },\n    [updateCanvas, uniqueKey]\n  )\n\n  // auto update props when deps change\n  useEffect(() => {\n    set(deps)\n  }, [...Object.values(deps)])\n\n  return set\n}\n\nexport { useCanvas }\n","import { forwardRef, ReactNode } from 'react'\nimport { useCanvas } from '../hooks/useCanvas'\n\nimport { ScrollRigState } from '../hooks/useScrollRig'\n\ninterface IUseCanvas {\n  children: ReactNode | ((props: ScrollRigState) => ReactNode)\n  id?: string // persistent layout id\n  dispose?: boolean // dispose on unmount\n}\n\nconst UseCanvas = forwardRef(({ children, id, dispose = true, ...props }: IUseCanvas, ref) => {\n  // auto update canvas with all props\n  useCanvas(children, { ...props, ref }, { key: id, dispose })\n  return null\n})\n\nexport { UseCanvas }\n","import { useEffect, RefObject, useMemo, useState } from 'react'\nimport { useThree, useLoader } from '@react-three/fiber'\nimport { Texture, CanvasTexture, ImageBitmapLoader, TextureLoader, DefaultLoadingManager } from 'three'\nimport { suspend } from 'suspend-react'\nimport supportsWebP from 'supports-webp'\nimport equal from 'fast-deep-equal'\n\nimport { useWindowSize } from './useWindowSize'\nimport { useCanvasStore } from '../store'\n\n/**\n *  Create Threejs Texture from DOM image tag\n *\n *  - Supports <picture> and `srcset` - uses `currentSrc` to get the responsive image source\n *\n *  - Supports lazy-loading image - suspends until first load event. Warning: the GPU upload can cause jank\n *\n *  - Relies on browser cache to avoid loading image twice. We let the <img> tag load the image and suspend until it's ready.\n *\n *  - NOTE: You must add the `crossOrigin` attribute\n *     <img src=\"\" alt=\"\" crossOrigin=\"anonymous\"/>\n */\n\nlet hasWebpSupport: boolean = false\n// this test is fast - \"should\" run before first image is requested\nsupportsWebP.then((supported) => {\n  hasWebpSupport = supported\n})\n\nfunction useTextureLoader() {\n  // Use an ImageBitmapLoader if imageBitmaps are supported. Moves much of the\n  // expensive work of uploading a texture to the GPU off the main thread.\n  // Copied from: github.com/mrdoob/three.js/blob/master/examples/jsm/loaders/GLTFLoader.js#L2424\n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent) === true\n  const isFirefox = navigator.userAgent.indexOf('Firefox') > -1\n  // @ts-ignore\n  const firefoxVersion = isFirefox ? navigator.userAgent.match(/Firefox\\/([0-9]+)\\./)[1] : -1\n  return typeof createImageBitmap === 'undefined' || isSafari || (isFirefox && firefoxVersion < 98)\n}\n\nfunction useImageAsTexture(\n  imgRef: RefObject<HTMLImageElement>,\n  { initTexture = true, premultiplyAlpha = 'default' } = {}\n) {\n  const gl = useThree((s) => s.gl)\n  const size = useWindowSize()\n  const debug = useCanvasStore((state) => state.debug)\n\n  // This is a workaround for detecting lazy loading images\n  // unfortunately the `loadstart` event is not working everywhere: https://bugs.chromium.org/p/chromium/issues/detail?id=458851\n  // So we can't suspend while lazy images are loading - only detect when they finished\n  const [newSrcDetected, setNewSrcDetected] = useState(imgRef.current?.currentSrc)\n  useEffect(() => {\n    const el = imgRef.current\n    const onLoad = () => {\n      setNewSrcDetected(imgRef.current?.currentSrc)\n    }\n    el?.addEventListener('load', onLoad)\n    return () => el?.removeEventListener('load', onLoad)\n  }, [imgRef, newSrcDetected, setNewSrcDetected])\n\n  // suspend until we have currentSrc for this `size`\n  const currentSrc = suspend(\n    () => {\n      DefaultLoadingManager.itemStart('waiting for DOM image')\n      return new Promise((resolve) => {\n        const el = imgRef.current\n\n        function returnResolve() {\n          resolve(el?.currentSrc)\n          DefaultLoadingManager.itemEnd('waiting for DOM image')\n        }\n\n        // respond to future load event if not cached\n        el?.addEventListener('load', returnResolve, { once: true })\n\n        // detect if loaded from browser cache\n        if (el?.complete) {\n          el?.removeEventListener('load', returnResolve)\n          returnResolve()\n        }\n      })\n    },\n    [imgRef, size, imgRef.current?.currentSrc, newSrcDetected],\n    { equal } // use deep-equal since size ref seems to update on route change\n  ) as string\n\n  const LoaderProto = useTextureLoader() ? TextureLoader : ImageBitmapLoader\n\n  // @ts-ignore\n  const result: any = useLoader(LoaderProto, currentSrc, (loader) => {\n    if (loader instanceof ImageBitmapLoader) {\n      loader.setOptions({\n        colorSpaceConversion: 'none',\n        premultiplyAlpha, // \"none\" increases blocking time in lighthouse\n        imageOrientation: 'flipY',\n      })\n      // Add webp to Accept header if supported\n      // TODO: add check for AVIF\n      loader.setRequestHeader({\n        Accept: `${hasWebpSupport ? 'image/webp,' : ''}*/*`,\n      })\n    }\n  })\n\n  const texture = useMemo(() => {\n    if (result instanceof Texture) {\n      return result\n    }\n    if (result instanceof ImageBitmap) {\n      return new CanvasTexture(result)\n    }\n  }, [result]) as Texture\n\n  // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n  useEffect(\n    function uploadTextureToGPU() {\n      initTexture && gl.initTexture(texture)\n      debug && console.log('useImageAsTexture', 'initTexture()')\n    },\n    [gl, texture, initTexture]\n  )\n\n  return texture\n}\n\nexport { useImageAsTexture }\n","import { useEffect, useRef, useCallback, ReactElement, forwardRef, useImperativeHandle } from 'react'\nimport Lenis from '@studio-freight/lenis'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { useCanvasStore } from '../store'\nimport { ISmoothScrollbar, ScrollCallback, ScrollToTarget, ScrollToConfig } from './SmoothScrollbar.d'\n\nconst POINTER_EVENTS_ENABLE_VELOCITY = 1\nconst POINTER_EVENTS_DISABLE_VELOCITY = 1.5\n\nconst SmoothScrollbarImpl = (\n  {\n    children,\n    enabled = true,\n    locked = false,\n    scrollRestoration = 'auto',\n    disablePointerOnScroll = true,\n    horizontal = false,\n    scrollInContainer = false,\n    updateGlobalState = true,\n    onScroll,\n    config = {},\n    invalidate = () => {},\n    addEffect,\n  }: ISmoothScrollbar,\n  ref: any\n) => {\n  const innerRef = useRef<HTMLElement>()\n  const lenis = useRef<Lenis>()\n  const preventPointer = useRef(false)\n  const globalScrollState = useCanvasStore((s) => s.scroll)\n\n  // Expose lenis imperative API\n  useImperativeHandle(ref, () => ({\n    start: () => lenis.current?.start(),\n    stop: () => lenis.current?.stop(),\n    on: (event: string, cb: ScrollCallback) => lenis.current?.on(event, cb),\n    once: (event: string, cb: ScrollCallback) => lenis.current?.once(event, cb),\n    off: (event: string, cb?: ScrollCallback) => lenis.current?.off(event, cb),\n    notify: () => lenis.current?.notify(),\n    scrollTo: (target: ScrollToTarget, props: ScrollToConfig) => lenis.current?.scrollTo(target, props),\n    raf: (time: number) => lenis.current?.raf(time),\n    __lenis: lenis.current,\n  }))\n\n  // disable pointer events while scrolling to avoid slow event handlers\n  const preventPointerEvents = useCallback(\n    (prevent: boolean) => {\n      if (!disablePointerOnScroll) return\n      if (innerRef.current && preventPointer.current !== prevent) {\n        preventPointer.current = prevent\n        innerRef.current.style.pointerEvents = prevent ? 'none' : 'auto'\n      }\n    },\n    [disablePointerOnScroll, innerRef, preventPointer]\n  )\n\n  // apply chosen scroll restoration\n  useLayoutEffect(() => {\n    if ('scrollRestoration' in window.history) {\n      window.history.scrollRestoration = scrollRestoration\n    }\n  }, [])\n\n  // INIT LENIS\n  useLayoutEffect(() => {\n    // Set up scroll containers - allows scrolling without resizing window on iOS/mobile\n    const html = document.documentElement\n    const wrapper = document.body\n    const content = document.body.firstElementChild\n\n    html.classList.toggle('ScrollRig-scrollHtml', scrollInContainer)\n    wrapper.classList.toggle('ScrollRig-scrollWrapper', scrollInContainer)\n\n    if (scrollInContainer) {\n      Object.assign(config, {\n        smoothTouch: true,\n        wrapper,\n        content,\n      })\n    }\n\n    lenis.current = new Lenis({\n      direction: horizontal ? 'horizontal' : 'vertical',\n      ...config,\n    })\n\n    // let r3f drive the frameloop\n    let removeEffect: () => void\n    if (addEffect) {\n      removeEffect = addEffect((time: number) => lenis.current?.raf(time))\n    } else {\n      // manual animation frame\n      // TODO use framer motion / popmotion render loop?\n      let _raf: number\n      function raf(time: number) {\n        lenis.current?.raf(time)\n        _raf = requestAnimationFrame(raf)\n      }\n      _raf = requestAnimationFrame(raf)\n      removeEffect = () => cancelAnimationFrame(_raf)\n    }\n\n    return () => {\n      removeEffect()\n      lenis.current?.destroy()\n    }\n  }, [])\n\n  // BIND TO LENIS SCROLL EVENT\n  useLayoutEffect(() => {\n    lenis.current?.on('scroll', ({ scroll, limit, velocity, direction, progress }: any) => {\n      const y = !horizontal ? scroll : 0\n      const x = horizontal ? scroll : 0\n\n      // update global scroll store\n      if (updateGlobalState) {\n        globalScrollState.y = y\n        globalScrollState.x = x\n        globalScrollState.limit = limit\n        globalScrollState.velocity = velocity\n        globalScrollState.direction = direction\n        globalScrollState.progress = progress\n      }\n\n      if (Math.abs(velocity) > POINTER_EVENTS_DISABLE_VELOCITY) {\n        preventPointerEvents(true)\n      }\n      if (Math.abs(velocity) < POINTER_EVENTS_ENABLE_VELOCITY) {\n        preventPointerEvents(false)\n      }\n\n      onScroll && onScroll({ scroll, limit, velocity, direction, progress })\n\n      invalidate() // demand a R3F frame on scroll\n    })\n\n    // update global state\n    if (updateGlobalState) {\n      globalScrollState.scrollDirection = horizontal ? 'horizontal' : 'vertical'\n\n      // expose global scrollTo function\n      // @ts-ignore\n      useCanvasStore.setState({ scrollTo: lenis.current?.scrollTo })\n\n      // expose global onScroll function to subscribe to scroll events\n      useCanvasStore.setState({\n        onScroll: (cb: ScrollCallback) => {\n          lenis.current?.on('scroll', cb)\n          lenis.current?.notify() // send current scroll to new subscriber\n          return () => lenis.current?.off('scroll', cb)\n        },\n      })\n\n      // Set current scroll position on load in case reloaded further down\n      useCanvasStore.getState().scroll.y = window.scrollY\n      useCanvasStore.getState().scroll.x = window.scrollX\n    }\n\n    // fire our internal scroll callback to update globalState\n    lenis.current?.notify()\n    return () => {\n      lenis.current?.off('scroll')\n    }\n  }, [])\n\n  // Interaction events - invalidate R3F loop and enable pointer events\n  useLayoutEffect(() => {\n    const invalidateOnWheelEvent = () => invalidate()\n    const onPointerInteraction = () => preventPointerEvents(false)\n    window.addEventListener('pointermove', onPointerInteraction)\n    window.addEventListener('pointerdown', onPointerInteraction)\n    window.addEventListener('wheel', invalidateOnWheelEvent)\n    return () => {\n      lenis.current?.off('scroll')\n      window.removeEventListener('pointermove', onPointerInteraction)\n      window.removeEventListener('pointerdown', onPointerInteraction)\n      window.removeEventListener('wheel', invalidateOnWheelEvent)\n    }\n  }, [])\n\n  // Mark as enabled in global state\n  useEffect(() => {\n    if (updateGlobalState) {\n      document.documentElement.classList.toggle('js-smooth-scrollbar-enabled', enabled)\n      document.documentElement.classList.toggle('js-smooth-scrollbar-disabled', !enabled)\n      useCanvasStore.setState({ hasSmoothScrollbar: enabled })\n    }\n  }, [enabled])\n\n  useEffect(() => {\n    locked ? lenis.current?.stop() : lenis.current?.start()\n  }, [locked])\n\n  {\n    /* Use function child so we can spread props\n    - for instance disable pointer events while scrolling */\n  }\n  return children({ ref: innerRef })\n}\n\nexport const SmoothScrollbar = forwardRef<any, ISmoothScrollbar>(SmoothScrollbarImpl)\n","import React, { forwardRef } from 'react'\nimport { SmoothScrollbar } from '../scrollbar/SmoothScrollbar'\nimport { ISmoothScrollbar } from '../scrollbar/SmoothScrollbar.d'\nimport { addEffect, invalidate } from '@react-three/fiber'\n\nfunction R3FSmoothScrollbar(props: ISmoothScrollbar, ref: any) {\n  return <SmoothScrollbar ref={ref} invalidate={invalidate} addEffect={addEffect} {...props} />\n}\n\nexport default forwardRef<any, ISmoothScrollbar>(R3FSmoothScrollbar)\n","import './styles/index.css'\n\n// Components\nexport { GlobalCanvas } from './components/GlobalCanvas'\nexport { ScrollScene } from './components/ScrollScene'\nexport { ViewportScrollScene } from './components/ViewportScrollScene'\nexport { UseCanvas } from './components/UseCanvas'\n\n// Hooks\nexport { useScrollRig } from './hooks/useScrollRig'\nexport { useCanvas } from './hooks/useCanvas'\nexport { useScrollbar } from './scrollbar/useScrollbar'\nexport { useTracker } from './hooks/useTracker'\n\n// Utils hooks\nexport { useImageAsTexture } from './hooks/useImageAsTexture'\n\n// Scrollbar\nexport { default as SmoothScrollbar } from './components/R3FSmoothScrollbar'\n\n// CSS class names for hiding stuff\n// Matching css styles can be imported from @14islands/r3f-scrollr-rig/css\nexport const styles = {\n  hidden: 'ScrollRig-visibilityHidden',\n  hiddenWhenSmooth: 'ScrollRig-visibilityHidden ScrollRig-hiddenIfSmooth',\n  transparentColor: 'ScrollRig-transparentColor',\n  transparentColorWhenSmooth: 'ScrollRig-transparentColor ScrollRig-hiddenIfSmooth',\n}\n\n// Private-ish\n// ----------------------------------\nexport { useCanvasStore } from './store'\n\n// Types\nexport type { ScrollState } from './hooks/useTracker.d'\n"],"names":["useLayoutEffect","window","vanillaUseLayoutEffect","useEffect","config","PRIORITY_PRELOAD","PRIORITY_SCISSORS","PRIORITY_VIEWPORTS","PRIORITY_GLOBAL","DEFAULT_SCALE_MULTIPLIER","preloadQueue","useCanvasStore","create","set","debug","scaleMultiplier","globalRender","globalPriority","globalClearDepth","globalRenderQueue","clearGlobalRenderQueue","isCanvasAvailable","hasSmoothScrollbar","canvasChildren","renderToCanvas","key","mesh","props","_ref","_extends2","Object","getOwnPropertyDescriptor","instances","inactive","_extends","updateCanvas","newProps","_ref2","_extends3","_canvasChildren$key","removeFromCanvas","dispose","_ref3","_canvasChildren$key2","_objectWithoutPropertiesLoose","map","_toPropertyKey","pageReflow","requestReflow","state","scroll","y","x","limit","velocity","progress","direction","scrollDirection","undefined","scrollTo","target","onScroll","ResizeManager","observer","ResizeObserver","Polyfill","console","log","observe","document","body","disconnect","_excluded","PerspectiveCamera","forwardRef","ref","_ref$makeDefault","makeDefault","useThree","camera","size","viewport","cameraRef","useRef","useImperativeHandle","current","_useMemo","useMemo","_props$position","height","aspect","width","fov","distance","position","Math","PI","atan","tan","lookAt","updateProjectionMatrix","updateMatrixWorld","getCurrentViewport","oldCam","React","onUpdate","self","near","far","OrthographicCamera","max","createElement","left","right","top","bottom","setAllCulled","obj","overrideCulled","wasFrustumCulled","frustumCulled","wasVisible","visible","children","forEach","child","polyfill","viewportSize","Vector2","requestRender","layers","getState","concat","renderScissor","gl","scene","_ref$layer","layer","_ref$autoClear","autoClear","_ref$clearDepth","clearDepth","setScissor","setScissorTest","render","renderViewport","_ref2$layer","_ref2$scissor","scissor","_ref2$autoClear","_ref2$clearDepth","getSize","setViewport","preloadScene","callback","push","globalScene","globalCamera","invalidate","useScrollRig","_scrollRig","reflow","reflowCompleted","GlobalChildren","s","scrollRig","keys","length","clear","Fragment","cloneElement","GlobalRenderer","frameloop","checkShaderErrors","useFrame","disableAll","enable","CanvasErrorBoundary","_Component","_this","call","this","error","getDerivedStateFromError","prototype","onError","Component","_excluded2","GlobalCanvasImpl","style","orthographic","_ref$scaleMultiplier","_ref$globalRender","_ref$globalPriority","_ref$globalClearDepth","useGlobalRenderer","qs","parse","location","search","setState","Canvas","id","manual","failIfMajorPerformanceCaveat","resize","debounce","DebugMesh","scale","args","uniforms","color","value","Color","vertexShader","fragmentShader","transparent","isBrowser","useWindowSize","_temp","_ref$debounce","_useState","useState","innerWidth","Infinity","innerHeight","windowSize","setWindowSize","canvasEl","getElementById","handleResize","clientWidth","clientHeight","debouncedResize","pkg","addEventListener","_observer","removeEventListener","mapLinear","a1","a2","b1","b2","useScrollbar","enabled","useTracker","track","options","_useScrollbar","rootMargin","threshold","autoUpdate","opts","index","wrapper","_useInView","useInView","inViewport","inView","vecn","vec3","setScale","scrollState","visibility","rect","_useState2","reactiveRect","setReactiveRect","bounds","positiveYUpBottom","_track$current","_rect","getBoundingClientRect","initialY","scrollTop","scrollY","initialX","scrollLeft","scrollX","update","useCallback","_ref$onlyUpdateInView","onlyUpdateInViewport","_scroll","updateBounds","updatePosition","isHorizontal","sizeProp","pxInside","ScrollScene","memo","_ref$margin","margin","inViewportMargin","inViewportThreshold","_ref$visible","_ref$hideOffscreen","hideOffscreen","_ref$scissor","_ref$debug","_ref$as","as","_ref$priority","priority","inlineSceneRef","node","setScene","Scene","_useScrollRig","_useTracker","content","InlineElement","createPortal","Viewport","_ref$orthographic","hud","get","setEvents","old","events","connected","ViewportScrollScene","_ref3$margin","trackerProps","_excluded3","compute","event","pointer","clientX","clientY","raycaster","setFromCamera","useCanvas","object","deps","_ref$dispose","uniqueKey","MathUtils","generateUUID","values","UseCanvas","hasWebpSupport","supportsWebP","then","supported","SmoothScrollbar","_ref$enabled","_ref$locked","locked","_ref$scrollRestoratio","scrollRestoration","_ref$disablePointerOn","disablePointerOnScroll","_ref$horizontal","horizontal","_ref$scrollInContaine","scrollInContainer","_ref$updateGlobalStat","updateGlobalState","_ref$config","_ref$invalidate","addEffect","innerRef","lenis","preventPointer","globalScrollState","start","_lenis$current","stop","_lenis$current2","on","cb","_lenis$current3","once","_lenis$current4","off","_lenis$current5","notify","_lenis$current6","_lenis$current7","raf","time","_lenis$current8","__lenis","preventPointerEvents","prevent","pointerEvents","history","removeEffect","_raf","html","documentElement","firstElementChild","classList","toggle","assign","smoothTouch","Lenis","_lenis$current9","requestAnimationFrame","_lenis$current10","cancelAnimationFrame","_lenis$current11","destroy","_lenis$current12","_lenis$current17","_lenis$current13","abs","_lenis$current14","_lenis$current15","_lenis$current16","_lenis$current18","invalidateOnWheelEvent","onPointerInteraction","_lenis$current19","_lenis$current20","_lenis$current21","add","err","remove","hidden","hiddenWhenSmooth","transparentColor","transparentColorWhenSmooth","imgRef","_imgRef$current","_imgRef$current3","_ref$initTexture","initTexture","_ref$premultiplyAlpha","premultiplyAlpha","currentSrc","newSrcDetected","setNewSrcDetected","el","onLoad","_imgRef$current2","isSafari","isFirefox","firefoxVersion","suspend","DefaultLoadingManager","itemStart","Promise","resolve","returnResolve","itemEnd","complete","equal","LoaderProto","test","navigator","userAgent","indexOf","match","createImageBitmap","TextureLoader","ImageBitmapLoader","result","useLoader","loader","setOptions","colorSpaceConversion","imageOrientation","setRequestHeader","Accept","texture","Texture","ImageBitmap","CanvasTexture"],"mappings":"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"}