import e,{useMemo as t,useEffect as r,forwardRef as i,useRef as n}from"react";import{Color as o,Vector2 as s}from"three";import{useThree as l,useFrame as a}from"@react-three/fiber";import{Text as u}from"@react-three/drei";import{useScrollRig as c,useScrollbar as m,useImageAsTexture as h,ScrollScene as p}from"@14islands/r3f-scroll-rig";function f(){return f=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(e[i]=r[i])}return e},f.apply(this,arguments)}function d(e,t){if(null==e)return{};var r,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)t.indexOf(r=o[i])>=0||(n[r]=e[r]);return n}const g=["el","children","material","scale","font","fontOffsetY","fontOffsetX","overrideEmissive","color"],v=i=>{let{el:n,children:s,material:a,scale:m,font:h,fontOffsetY:p=0,fontOffsetX:v=0,overrideEmissive:y=!1,color:w}=i,b=d(i,g);const{size:S}=l(),{scaleMultiplier:E}=c(),{textColor:A,fontSize:x,textAlign:_,lineHeight:N,letterSpacing:z}=t(()=>{if(!n.current)return{};const e=window.getComputedStyle(n.current);return{letterSpacing:(parseFloat(e.letterSpacing)||0)/parseFloat(e.fontSize),lineHeight:(parseFloat(e.lineHeight)||0)/parseFloat(e.fontSize),textColor:new o(w||e.color).convertSRGBToLinear(),fontSize:parseFloat(e.fontSize)*E,textAlign:e.textAlign}},[n,S,m,w,E]);r(()=>{a&&y&&(a.emissive=w)},[a,w,y]);let M=0;return"left"===_||"start"===_?M=-.5*m[0]:"right"!==_&&"end"!==_||(M=.5*m[0]),e.createElement(u,f({fontSize:x,maxWidth:m?m[0]:S.width,lineHeight:N,textAlign:_,letterSpacing:z,overflowWrap:"break-word",font:h,color:A,anchorX:_,anchorY:"top",position:[M+x*v,(m?.5*m[1]:.5*S.height)+x*p,0],material:a},b),s)},y=["el","scale","scrollState","vertexShader","fragmentShader","invalidateFrameLoop","widthSegments","heightSegments"],w=i((i,u)=>{let{el:p,scale:g,scrollState:v,vertexShader:w,fragmentShader:b,invalidateFrameLoop:S=!1,widthSegments:E=128,heightSegments:A=128}=i,x=d(i,y);const _=n(null),N=n(null),{invalidate:z,gl:M,size:T}=l(),k=l(e=>e.viewport.dpr),{scroll:O}=m(),{scaleMultiplier:V}=c(),R=h(p),F=t(()=>({u_color:{value:new o("black")},u_time:{value:0},u_pixelRatio:{value:k},u_progress:{value:0},u_visibility:{value:0},u_viewport:{value:0},u_velocity:{value:0},u_res:{value:new s},u_rect:{value:new s},u_size:{value:new s},u_texture:{value:null},u_loaded:{value:!1},u_scaleMultiplier:{value:V}}),[k]);r(()=>{R&&_.current&&(_.current.uniforms.u_texture.value=R,_.current.uniforms.u_size.value.set(R.image.width,R.image.height),_.current.uniforms.u_loaded.value=!0)},[R,M]),r(()=>{_.current&&(_.current.uniforms.u_res.value.set(T.width,T.height),_.current.uniforms.u_rect.value.set(null==g?void 0:g[0],null==g?void 0:g[1]))},[T,g]),a((e,t)=>{v.inViewport&&N.current&&_.current&&_.current.uniforms.u_loaded.value&&(_.current.uniforms.u_time.value+=t,_.current.uniforms.u_rect.value.set(N.current.scale.x,N.current.scale.y),_.current.uniforms.u_velocity.value=O.velocity,_.current.uniforms.u_progress.value=v.progress,_.current.uniforms.u_visibility.value=v.visibility,_.current.uniforms.u_viewport.value=v.viewport,S&&z())});const P=t(()=>[{vertexShader:w,fragmentShader:b}],[w,b]);return e.createElement(e.Fragment,null,e.createElement("mesh",f({ref:(L=[N,u],function(e){L.forEach(function(t){"function"==typeof t?t(e):null!=t&&(t.current=e)})})},x),e.createElement("planeGeometry",{attach:"geometry",args:[1,1,E,A]}),e.createElement("shaderMaterial",{ref:_,args:P,transparent:!0,uniforms:F})));var L}),b=["children","speed"],S=({children:t,scrollState:r,parallax:i})=>{const o=n(null),s=l(e=>e.size),{scaleMultiplier:u}=c();return a(()=>{r.inViewport&&(o.current.position.y=i*(2*r.progress-1)*u*s.height)}),e.createElement("mesh",{ref:o},t)},E=t=>{let{children:r,speed:i=1}=t,n=d(t,b);const o=i-1;return e.createElement(p,f({scissor:!1,inViewportMargin:200*Math.max(0,.5)+50+"%"},n),t=>e.createElement(S,f({parallax:o},t),r(t)))};let A=new Proxy({},{get:function(e,t){return e.hasOwnProperty(t)||(e[t]=N(t)),e[t]}});class x extends Array{constructor(e,t){if(!(t=k(t)).every(e=>"Number"===V(e)))throw new TypeError("All arguments must be numbers.");if(t.length>1&&t.length!==e)throw new Error("Argument list must be empty, have a single number, or have a length equal to the dimension.");0===t.length&&(t=[0]),1===t.length&&"Number"===V(t[0])&&(t=Array(e).fill(t[0])),e>1?super(...t):(super(1),this[0]=t[0]),Reflect.defineProperty(this,"pop",{value:void 0,enumerable:!1}),Reflect.defineProperty(this,"push",{value:void 0,enumerable:!1}),Reflect.defineProperty(this,"shift",{value:void 0,enumerable:!1}),Reflect.defineProperty(this,"unshift",{value:void 0,enumerable:!1})}get magnitude(){return this.pnorm(2)}div(e){T(e,this.dim,!0),"Number"===V(e)&&(e=new Array(this.dim).fill(e));let t=[];for(let r=0;r<this.length;++r)t[r]=this[r]/e[r];return A[this.dim](t)}minus(e){T(e,this.dim,!0),"Number"===V(e)&&(e=new Array(this.dim).fill(e));let t=[];for(let r=0;r<this.dim;++r)t[r]=this[r]-e[r];return A[this.dim](t)}neg(){return A[this.dim](this.times(-1))}plus(e){T(e,this.dim,!0),"Number"===V(e)&&(e=new Array(this.dim).fill(e));let t=[];for(let r=0;r<this.dim;++r)t[r]=this[r]+e[r];return A[this.dim](t)}pow(e){let t=[];for(let r=0;r<this.dim;++r)t[r]=Math.pow(this[r],e);return A[this.dim](t)}times(e){T(e,this.dim,!0),"Number"===V(e)&&(e=new Array(this.dim).fill(e));let t=[];for(let r=0;r<this.dim;++r)t[r]=this[r]*e[r];return A[this.dim](t)}dot(e){T(e,this.dim);let t=0;for(let r=0;r<this.dim;++r)t+=this[r]*e[r];return t}normalize(){return this.div(this.magnitude)}pnorm(e){let t=0;for(let r=0;r<this.dim;++r)t+=Math.pow(Math.abs(this[r]),e);return Math.pow(t,1/e)}reflect(e){const t=e.normalize();return this.minus(t.times(2*this.dot(t)))}argmax(){const e=this.max();return this.reduce((t,r,i)=>r===e?t.concat([i]):t,[])}argmin(){const e=this.min();return this.reduce((t,r,i)=>r===e?t.concat([i]):t,[])}choose(e){if(!Array.isArray(e))throw new TypeError("Argument must be a list of indices.");if(!e.every(e=>e<this.dim&&O(e.toString())))throw new RangeError("All elements of argument must be valid indices.");let t=[];return e.forEach(e=>t.push(this[e])),A[t.length](t)}copy(){return A[this.dim](this)}equals(e){return e.length===this.dim&&e.every((e,t)=>this[t]===e)}approximatelyEquals(e,t=1e-8){return e.length===this.dim&&e.every((e,r)=>Math.abs(this[r]-e)<t)}max(){return Math.max(...this)}min(){return Math.min(...this)}sum(){return this.reduce((e,t)=>e+t,0)}toArray(){return Array.from(this)}concat(...e){const t=super.concat.apply(this.toArray(),e);return A[t.length](t)}filter(...e){const t=super.filter.apply(this.toArray(),e);return t.length>0?A[t.length](t):t}map(...e){const t=super.map(...e);return t.every(e=>"Number"===V(e))?t:t.toArray()}slice(...e){const t=super.slice.apply(this.toArray(),e);return t.length>0?A[t.length](t):t}splice(...e){let t=this.toArray();if(t.splice(...e),t.length!==this.dim)throw new Error("All removed elements must be replaced.");if(!t.every(e=>"Number"===V(e)))throw new TypeError("All elements must be numbers.");t.forEach((e,t)=>{this[t]=e})}toString(){return this.reduce((e,t,r)=>e+t+(r===this.dim-1?" ":", "),"[ ")+"]"}}const _={set:function(e,t,r){if("length"===t)return!1;if(O(t)){if(Number(t)>=e.dim)throw new RangeError("Vector may not have more elements than dimension.");if("Number"!==V(r))throw new TypeError("Vectors may only contain numbers.");return e[t]=r,!0}const i=M(t.toString());return!!(e.dim<=4&&i)&&(function(e,t,r,i){if(1===t.length){if("Number"!==V(i))throw new TypeError("Must set to a number");return void(e[r[t]]=i)}if(!Array.isArray(i))throw new TypeError("Right-hand side must be an array.");if(t.length!==i.length)throw new TypeError("Right-hand side must have matching length.");if(!i.every(e=>"Number"===V(e)))throw new TypeError("All new values must be numbers.");if(t.split("").some(t=>r[t]>=e.dim))return;let n=!0;for(let e=0,r={};e<t.length;++e){if(r.hasOwnProperty(t[e])){n=!1;break}r[t[e]]=!0}if(!n)throw new SyntaxError("Swizzle assignment does not allow symbols to be repeated.");t.split("").map(e=>r[e]).forEach((t,r)=>{e[t]=i[r]})}(e,t.toString(),i,r),!0)},get:function(e,t){const r=M(t.toString());return e.dim<=4&&r?function(e,t,r){const i=t.length;if(1===i)return e[r[t]];let n=t.split("").reduce((t,i)=>{let n=r[i];return t&&n<e.dim?t.concat([e[n]]):void 0},[]);return n?new A[i](...n):void 0}(e,t,r):e[t]}};function N(e){if(!((e=Number(e))in A)){if(isNaN(e))throw new TypeError("Dimension must be coercible to a number.");if(e<=0)throw new RangeError("Dimension must be positive.");if(!Number.isInteger(e))throw new RangeError("Dimension must be positive.");let t="vec"+e,r={[t]:class extends x{constructor(...t){if(1===t.length&&t[0]instanceof x){if(t[0].dim>e)throw new TypeError("Cannot demote vectors.");t=function(e,t){return[...Array(t)].map((t,r)=>r<e.length?e[r]:0)}(t[0].toArray(),e)}super(e,t),Reflect.defineProperty(this,"dim",{value:e,writable:!1,enumerable:!1})}}}[t];A[e]=function(...e){let t=new r(...e);return Object.preventExtensions(t),new Proxy(t,_)}}return A[e]}const z=[{x:0,y:1,z:2,w:3},{r:0,g:1,b:2,a:3},{s:0,t:1,p:2,q:3}];function M(e){return z.find(t=>e.split("").every(e=>e in t))}function T(e,t,r=!1){if(!(r&&"Number"===V(e)||e.length&&e.length===t))throw new TypeError(`Invalid argument. Input must have matching dimension${r?"or be a scalar":""}.`)}function k(e){return e instanceof Array&&1===e.length&&e[0]instanceof Array?k(e[0]):e}function O(e){return!isNaN(e)&&Number(e).toString()===e&&Number.isInteger(Number(e))&&Number(e)>=0}function V(e){return Object.prototype.toString.call(e).slice(8,-1)}var R={getVecType:N,isVec:function(e){return e instanceof x},vec2:A[2],vec3:A[3],vec4:A[4],add:function(...e){const t=e[0].dim;if(!e.every(e=>e.dim===t))throw new TypeError("All vectors must have the same dimension.");return e.reduce((e,t)=>e.plus(t),A[t]())},multiply:function(...e){const t=e[0].dim;if(!e.every(e=>e.dim===t))throw new TypeError("All vectors must have the same dimension.");return e.reduce((e,t)=>e.times(t),A[t](1))},lerp:function(e,t,r){if(e.dim!==t.dim)throw new TypeError("Vectors must have the same dimension.");return r=r<0?0:r>1?1:r,e.plus(t.minus(e).times(r))},slerp:function(e,t,r){if(e.dim!==t.dim)throw new TypeError("Vectors must have the same dimension.");r=r<0?0:r>1?1:r;let i=e.normalize().dot(t.normalize());i=i<-1?-1:i>1?1:i;const n=Math.acos(i)*r,o=t.minus(e.times(i)).normalize(),s=e.magnitude+(t.magnitude-e.magnitude)*r;return e.times(Math.cos(n)).plus(o.times(Math.sin(n))).normalize().times(s)}};const F=["scale"],P=["children","track","stickyLerp","fillViewport"],L=({children:t,childTop:r,childBottom:i,scrollState:o,parentScale:s,childScale:u,scaleMultiplier:c,priority:m,stickyLerp:h=1})=>{const p=n(null),f=l(e=>e.size);return a((e,t)=>{if(!o.inViewport)return;const n=.5*s[1]-.5*u[1];let l=p.current.position.y;l=o.viewport+r/f.height<1?n:o.visibility-i/s[1]<1?-r+n-(o.viewport-1)*f.height*c:.5*-s[1]+.5*u[1],p.current.position.y=function(e,t,r,i,n=60){return o=t,e*(1-(s=void 0===i?r:1-Math.pow(1-r,i/(1/n))))+o*s;var o,s}(p.current.position.y,l,h,t)},m),e.createElement("group",{ref:p},t)},j=r=>{let{children:i,track:o,stickyLerp:s,fillViewport:a}=r,u=d(r,P);const m=l(e=>e.size),{scaleMultiplier:h}=c(),g=n(o.current),v=t(()=>{const e=getComputedStyle(o.current);return"sticky"===e.position?g.current=o.current.parentElement:console.error("StickyScrollScene: tracked element is not position:sticky"),e},[o]);return e.createElement(p,f({track:g},u),((t,r,i,n,{stickyLerp:o,fillViewport:s})=>l=>{let{scale:a}=l,u=d(l,F),c=R.vec3(parseFloat(i.width),parseFloat(i.height),1),m=parseFloat(i.top),h=r.height-m-c[1];return s&&(c=R.vec3(r.width,r.height,1),m=0,h=0),e.createElement(L,f({parentScale:a,childScale:c.times(n),stickyLerp:o,childTop:m,childBottom:h,scaleMultiplier:n},u),t(f({scale:c.times(n)},u)))})(i,m,v,h,{stickyLerp:s,fillViewport:a}))};export{E as ParallaxScrollScene,j as StickyScrollScene,w as WebGLImage,v as WebGLText};
//# sourceMappingURL=powerups.modern.js.map
