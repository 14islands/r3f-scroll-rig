{"version":3,"file":"scrollbar.module.js","sources":["../src/config.ts","../src/store.ts","../src/scrollbar/useScrollbar.ts","../src/hooks/useIsomorphicLayoutEffect.ts","../src/scrollbar/SmoothScrollbar.tsx","../src/hooks/useWindowSize.ts","../src/utils/math.ts","../src/hooks/useTracker.ts"],"sourcesContent":["// Global config\nimport type { Scene, Camera, WebGLRenderer } from 'three'\n\ntype PreloadCallback = (gl: WebGLRenderer, scene: Scene, camera: Camera) => void\n\nexport const config = {\n  // Execution order for useFrames (highest = last render)\n  PRIORITY_PRELOAD: 0,\n  PRIORITY_SCISSORS: 1,\n  PRIORITY_VIEWPORTS: 1,\n  PRIORITY_GLOBAL: 1000,\n\n  DEFAULT_SCALE_MULTIPLIER: 1,\n\n  // Global rendering props\n  preloadQueue: [] as PreloadCallback[],\n}\n","import create from 'zustand'\nimport { config } from './config'\n\nimport { ScrollCallback } from './scrollbar/SmoothScrollbar.d'\n\ninterface ScrollRigStore {\n  debug: boolean\n  scaleMultiplier: number\n  globalRender: boolean\n  globalPriority: number\n  globalClearDepth: boolean\n  globalRenderQueue: false | any[]\n  clearGlobalRenderQueue: () => void\n  isCanvasAvailable: boolean\n  hasSmoothScrollbar: boolean\n  canvasChildren: Record<string, any | undefined>\n  updateCanvas: (key: string, newProps: any) => void\n  renderToCanvas: (key: string, mesh: any, props: any) => void\n  removeFromCanvas: (key: string, dispose: boolean) => void\n  pageReflow: number\n  requestReflow: () => void\n  scroll: {\n    y: number\n    x: number\n    limit: number\n    velocity: number\n    progress: number\n    direction: number\n    scrollDirection?: 'vertical' | 'horizontal'\n  }\n  scrollTo: (target: any) => void\n  onScroll: (cb: ScrollCallback) => () => void\n}\n\nconst useCanvasStore = create<ScrollRigStore>((set) => ({\n  // //////////////////////////////////////////////////////////////////////////\n  // GLOBAL ScrollRig STATE\n  // //////////////////////////////////////////////////////////////////////////\n  debug: false,\n  scaleMultiplier: config.DEFAULT_SCALE_MULTIPLIER,\n\n  globalRender: true,\n  globalPriority: config.PRIORITY_GLOBAL,\n  globalClearDepth: false,\n\n  globalRenderQueue: false,\n  clearGlobalRenderQueue: () => set(() => ({ globalRenderQueue: false })),\n\n  // true if WebGL initialized without errors\n  isCanvasAvailable: true,\n\n  // true if <VirtualScrollbar> is currently enabled\n  hasSmoothScrollbar: false,\n\n  // map of all components to render on the global canvas\n  canvasChildren: {},\n\n  // add component to canvas\n  renderToCanvas: (key, mesh, props = {}) =>\n    set(({ canvasChildren }) => {\n      // check if already mounted\n      if (Object.getOwnPropertyDescriptor(canvasChildren, key)) {\n        // increase usage count\n        canvasChildren[key].instances += 1\n        canvasChildren[key].props.inactive = false\n        return { canvasChildren }\n      } else {\n        // otherwise mount it\n        const obj = { ...canvasChildren, [key]: { mesh, props, instances: 1 } }\n        return { canvasChildren: obj }\n      }\n    }),\n\n  // pass new props to a canvas component\n  updateCanvas: (key, newProps) =>\n    // @ts-ignore\n    set(({ canvasChildren }) => {\n      if (!canvasChildren[key]) return\n      const {\n        [key]: { mesh, props, instances },\n      } = canvasChildren\n      const obj = {\n        ...canvasChildren,\n        [key]: { mesh, props: { ...props, ...newProps }, instances },\n      }\n      // console.log('updateCanvas', key, { ...props, ...newProps })\n      return { canvasChildren: obj }\n    }),\n\n  // remove component from canvas\n  removeFromCanvas: (key, dispose = true) =>\n    set(({ canvasChildren }) => {\n      // check if remove or reduce instances\n      if (canvasChildren[key]?.instances > 1) {\n        // reduce usage count\n        canvasChildren[key].instances -= 1\n        return { canvasChildren }\n      } else {\n        if (dispose) {\n          // unmount since no longer used\n          const { [key]: _omit, ...obj } = canvasChildren // make a separate copy of the obj and omit\n          return { canvasChildren: obj }\n        } else {\n          // or tell it that it is \"inactive\"\n          canvasChildren[key].instances = 0\n          canvasChildren[key].props.inactive = true\n          return { canvasChildren: { ...canvasChildren } }\n        }\n      }\n    }),\n\n  // Used to ask components to re-calculate their positions after a layout reflow\n  pageReflow: 0,\n  requestReflow: () => {\n    set((state) => {\n      return { pageReflow: state.pageReflow + 1 }\n    })\n  },\n\n  // keep track of scrollbar\n  scroll: {\n    y: 0,\n    x: 0,\n    limit: 0,\n    velocity: 0,\n    progress: 0,\n    direction: 0,\n    scrollDirection: undefined,\n  },\n  scrollTo: (target) => window.scrollTo(0, target),\n  onScroll: () => () => {},\n}))\n\nexport { useCanvasStore }\n","import { useCanvasStore } from '../store'\nimport { ScrollCallback } from './SmoothScrollbar.d'\n\nexport interface Scroll {\n  y: number\n  x: number\n  limit: number\n  velocity: number\n  progress: number\n  direction: number\n  scrollDirection: string\n}\n\ninterface UseScrollbarProps {\n  enabled: boolean\n  scroll: Scroll\n  scrollTo: (target: any) => void\n  onScroll: (cb: ScrollCallback) => () => void\n}\n\n/**\n * Public interface for ScrollRig\n */\nexport const useScrollbar = () => {\n  const hasSmoothScrollbar = useCanvasStore((state) => state.hasSmoothScrollbar)\n  const scroll = useCanvasStore((state) => state.scroll)\n  const scrollTo = useCanvasStore((state) => state.scrollTo)\n  const onScroll = useCanvasStore((state) => state.onScroll)\n\n  return {\n    enabled: hasSmoothScrollbar,\n    scroll,\n    scrollTo,\n    onScroll,\n  } as UseScrollbarProps\n}\n","import { useEffect, useLayoutEffect as vanillaUseLayoutEffect } from 'react'\n\nexport const isBrowser = typeof window !== 'undefined'\n\nexport const useLayoutEffect = isBrowser ? vanillaUseLayoutEffect : useEffect\n","import { useEffect, useRef, useCallback, ReactElement, forwardRef, useImperativeHandle } from 'react'\nimport Lenis from '@studio-freight/lenis'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { useCanvasStore } from '../store'\nimport { ISmoothScrollbar, ScrollCallback, ScrollToTarget, ScrollToConfig } from './SmoothScrollbar.d'\n\nconst POINTER_EVENTS_ENABLE_VELOCITY = 1\nconst POINTER_EVENTS_DISABLE_VELOCITY = 1.5\n\nconst SmoothScrollbarImpl = (\n  {\n    children,\n    enabled = true,\n    locked = false,\n    scrollRestoration = 'auto',\n    disablePointerOnScroll = true,\n    horizontal = false,\n    scrollInContainer = false,\n    updateGlobalState = true,\n    onScroll,\n    config = {},\n    invalidate = () => {},\n    addEffect,\n  }: ISmoothScrollbar,\n  ref: any\n) => {\n  const innerRef = useRef<HTMLElement>()\n  const lenis = useRef<Lenis>()\n  const preventPointer = useRef(false)\n  const globalScrollState = useCanvasStore((s) => s.scroll)\n\n  // Expose lenis imperative API\n  useImperativeHandle(ref, () => ({\n    start: () => lenis.current?.start(),\n    stop: () => lenis.current?.stop(),\n    on: (event: string, cb: ScrollCallback) => lenis.current?.on(event, cb),\n    notify: () => lenis.current?.emit(), // backwards compatible\n    emit: () => lenis.current?.emit(),\n    scrollTo: (target: ScrollToTarget, props: ScrollToConfig) => lenis.current?.scrollTo(target, props),\n    raf: (time: number) => lenis.current?.raf(time),\n    __lenis: lenis.current,\n  }))\n\n  // disable pointer events while scrolling to avoid slow event handlers\n  const preventPointerEvents = useCallback(\n    (prevent: boolean) => {\n      if (!disablePointerOnScroll) return\n      if (innerRef.current && preventPointer.current !== prevent) {\n        preventPointer.current = prevent\n        innerRef.current.style.pointerEvents = prevent ? 'none' : 'auto'\n      }\n    },\n    [disablePointerOnScroll, innerRef, preventPointer]\n  )\n\n  // apply chosen scroll restoration\n  useLayoutEffect(() => {\n    if ('scrollRestoration' in window.history) {\n      window.history.scrollRestoration = scrollRestoration\n    }\n  }, [])\n\n  // INIT LENIS\n  useLayoutEffect(() => {\n    // Set up scroll containers - allows scrolling without resizing window on iOS/mobile\n    const html = document.documentElement\n    const wrapper = document.body\n    const content = document.body.firstElementChild\n\n    html.classList.toggle('ScrollRig-scrollHtml', scrollInContainer)\n    wrapper.classList.toggle('ScrollRig-scrollWrapper', scrollInContainer)\n\n    if (scrollInContainer) {\n      Object.assign(config, {\n        smoothTouch: true,\n        wrapper,\n        content,\n      })\n    }\n\n    lenis.current = new Lenis({\n      orientation: horizontal ? 'horizontal' : 'vertical',\n      ...config,\n    })\n\n    // let r3f drive the frameloop\n    let removeEffect: () => void\n    if (addEffect) {\n      removeEffect = addEffect((time: number) => lenis.current?.raf(time))\n    } else {\n      // manual animation frame\n      // TODO use framer motion / popmotion render loop?\n      let _raf: number\n      function raf(time: number) {\n        lenis.current?.raf(time)\n        _raf = requestAnimationFrame(raf)\n      }\n      _raf = requestAnimationFrame(raf)\n      removeEffect = () => cancelAnimationFrame(_raf)\n    }\n\n    return () => {\n      removeEffect()\n      lenis.current?.destroy()\n    }\n  }, [])\n\n  // BIND TO LENIS SCROLL EVENT\n  useLayoutEffect(() => {\n    const _onScroll = ({ scroll, limit, velocity, direction, progress }: any) => {\n      const y = !horizontal ? scroll : 0\n      const x = horizontal ? scroll : 0\n\n      // update global scroll store\n      if (updateGlobalState) {\n        globalScrollState.y = y\n        globalScrollState.x = x\n        globalScrollState.limit = limit\n        globalScrollState.velocity = velocity\n        globalScrollState.direction = direction\n        globalScrollState.progress = progress\n      }\n\n      if (Math.abs(velocity) > POINTER_EVENTS_DISABLE_VELOCITY) {\n        preventPointerEvents(true)\n      }\n      if (Math.abs(velocity) < POINTER_EVENTS_ENABLE_VELOCITY) {\n        preventPointerEvents(false)\n      }\n\n      onScroll && onScroll({ scroll, limit, velocity, direction, progress })\n\n      invalidate() // demand a R3F frame on scroll\n    }\n\n    lenis.current?.on('scroll', _onScroll)\n\n    // update global state\n    if (updateGlobalState) {\n      globalScrollState.scrollDirection = horizontal ? 'horizontal' : 'vertical'\n\n      // expose global scrollTo function\n      // @ts-ignore\n      useCanvasStore.setState({ scrollTo: lenis.current?.scrollTo })\n\n      // expose global onScroll function to subscribe to scroll events\n      useCanvasStore.setState({\n        onScroll: (cb: ScrollCallback) => {\n          lenis.current?.on('scroll', cb)\n          lenis.current?.emit() // send current scroll to new subscriber\n          return () => lenis.current?.off('scroll', cb)\n        },\n      })\n\n      // Set current scroll position on load in case reloaded further down\n      useCanvasStore.getState().scroll.y = window.scrollY\n      useCanvasStore.getState().scroll.x = window.scrollX\n    }\n\n    // fire our internal scroll callback to update globalState\n    lenis.current?.emit()\n    return () => {\n      lenis.current?.off('scroll', _onScroll)\n    }\n  }, [])\n\n  // Interaction events - invalidate R3F loop and enable pointer events\n  useLayoutEffect(() => {\n    const invalidateOnWheelEvent = () => invalidate()\n    const onPointerInteraction = () => preventPointerEvents(false)\n    window.addEventListener('pointermove', onPointerInteraction)\n    window.addEventListener('pointerdown', onPointerInteraction)\n    window.addEventListener('wheel', invalidateOnWheelEvent)\n    return () => {\n      window.removeEventListener('pointermove', onPointerInteraction)\n      window.removeEventListener('pointerdown', onPointerInteraction)\n      window.removeEventListener('wheel', invalidateOnWheelEvent)\n    }\n  }, [])\n\n  // Mark as enabled in global state\n  useEffect(() => {\n    if (updateGlobalState) {\n      document.documentElement.classList.toggle('js-smooth-scrollbar-enabled', enabled)\n      document.documentElement.classList.toggle('js-smooth-scrollbar-disabled', !enabled)\n      useCanvasStore.setState({ hasSmoothScrollbar: enabled })\n    }\n  }, [enabled])\n\n  useEffect(() => {\n    locked ? lenis.current?.stop() : lenis.current?.start()\n  }, [locked])\n\n  {\n    /* Use function child so we can spread props\n    - for instance disable pointer events while scrolling */\n  }\n  return children({ ref: innerRef })\n}\n\nexport const SmoothScrollbar = forwardRef<any, ISmoothScrollbar>(SmoothScrollbarImpl)\n","import { useState, useEffect } from 'react'\nimport { ResizeObserver as Polyfill } from '@juggle/resize-observer'\nimport pkg from 'debounce'\n\nconst isBrowser = typeof window !== 'undefined'\nexport interface WindowSize {\n  width: number\n  height: number\n}\n\ntype ConfigProps = {\n  debounce?: number\n}\n\n/*\n * Triggers a resize only if the Canvas DOM element changed dimensions - not on window resize event\n *\n * This is to avoid costly re-renders when the URL bar is scrolled away on mobile\n *\n * Based on: https://usehooks.com/useWindowSize/\n */\n\nexport function useWindowSize({ debounce = 0 }: ConfigProps = {}) {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowSize>({\n    width: isBrowser ? window.innerWidth : Infinity,\n    height: isBrowser ? window.innerHeight : Infinity,\n  })\n\n  useEffect(() => {\n    // check if we can find a canvas - if so, base size on canvas instead of window\n    // since 100vh !== window.innerHeight on mobile\n    const canvasEl = document.getElementById('ScrollRig-canvas')\n\n    // Handler to call on window resize\n    function handleResize() {\n      const width = canvasEl ? canvasEl.clientWidth : window.innerWidth\n      const height = canvasEl ? canvasEl.clientHeight : window.innerHeight\n\n      if (width !== windowSize.width || height !== windowSize.height) {\n        // Set window width/height to state\n        setWindowSize({\n          width,\n          height,\n        })\n      }\n    }\n\n    const debouncedResize = pkg.debounce(handleResize, debounce)\n\n    // Add event listener\n    const ResizeObserver = window.ResizeObserver || Polyfill\n    let observer: ResizeObserver\n    if (canvasEl) {\n      observer = new ResizeObserver(debouncedResize)\n      observer.observe(canvasEl)\n    } else {\n      window.addEventListener('resize', debouncedResize)\n    }\n    // Call handler right away so state gets updated with initial window size\n    handleResize()\n    // Remove event listener on cleanup\n    return () => {\n      window.removeEventListener('resize', debouncedResize)\n      observer?.disconnect()\n    }\n  }, [windowSize, setWindowSize])\n\n  return windowSize\n}\n","// Linear mapping from range <a1, a2> to range <b1, b2>\nexport function mapLinear(x: number, a1: number, a2: number, b1: number, b2: number) {\n  return b1 + ((x - a1) * (b2 - b1)) / (a2 - a1)\n}\n","import { useRef, useCallback, useEffect, useMemo, useState, MutableRefObject } from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { useWindowSize } from './useWindowSize'\nimport vecn from 'vecn'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { mapLinear } from '../utils/math'\nimport { useCanvasStore } from '../store'\n\nimport { useScrollbar, Scroll } from '../scrollbar/useScrollbar'\n\nimport type { Rect, Bounds, TrackerOptions, Tracker, ScrollState, UpdateCallback } from './useTracker.d'\n\nfunction updateBounds(bounds: Bounds, rect: Rect, scroll: Scroll, size: any) {\n  bounds.top = rect.top - (scroll.y || 0)\n  bounds.bottom = rect.bottom - (scroll.y || 0)\n  bounds.left = rect.left - (scroll.x || 0)\n  bounds.right = rect.right - (scroll.x || 0)\n  bounds.width = rect.width\n  bounds.height = rect.height\n  // move coordinate system so 0,0 is at center of screen\n  bounds.x = bounds.left + rect.width * 0.5 - size.width * 0.5\n  bounds.y = bounds.top + rect.height * 0.5 - size.height * 0.5\n  bounds.positiveYUpBottom = size.height - bounds.bottom // inverse Y\n}\n\nfunction updatePosition(position: vec3, bounds: Bounds, scaleMultiplier: number) {\n  position.x = bounds.x * scaleMultiplier\n  position.y = -1 * bounds.y * scaleMultiplier\n}\n\n/**\n * Returns the current Scene position of the DOM element\n * based on initial getBoundingClientRect and scroll delta from start\n */\nfunction useTracker(track: MutableRefObject<HTMLElement>, options?: TrackerOptions): Tracker {\n  const size = useWindowSize()\n  const { scroll, onScroll } = useScrollbar()\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n  const debug = useCanvasStore((state) => state.debug)\n\n  // extend defaults with optional options\n  const { rootMargin, threshold, autoUpdate, wrapper } = useMemo(() => {\n    const target = { rootMargin: '0%', threshold: 0, autoUpdate: true } as TrackerOptions\n    const opts = options || {}\n    Object.keys(opts).map((key: string, index) => {\n      if (opts[key] !== undefined) target[key] = opts[key]\n    })\n    return target\n  }, [options])\n\n  // check if element is in viewport\n  const { ref, inView: inViewport } = useInView({ rootMargin, threshold })\n\n  // bind useInView ref to current tracking element\n  useLayoutEffect(() => {\n    ref(track.current)\n  }, [track])\n\n  // Using state so it's reactive\n  const [scale, setScale] = useState<vec3>(vecn.vec3(0, 0, 0))\n\n  // Using ref because\n  const scrollState: ScrollState = useRef({\n    inViewport: false,\n    progress: -1,\n    visibility: -1,\n    viewport: -1,\n  }).current\n\n  // DOM rect (initial position in pixels offset by scroll value on page load)\n  // Using ref so we can calculate bounds & position without a re-render\n  const rect = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n  }).current\n\n  // expose internal ref as a reactive state as well\n  const [reactiveRect, setReactiveRect] = useState<Rect>(rect)\n\n  // bounding rect in pixels - updated by scroll\n  const bounds = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n    positiveYUpBottom: 0,\n  }).current\n\n  // position in viewport units - updated by scroll\n  const position = useRef(vecn.vec3(0, 0, 0)).current\n\n  // Calculate bounding Rect as soon as it's available\n  useLayoutEffect(() => {\n    const _rect = track.current?.getBoundingClientRect()\n    if (!_rect) return\n    const initialY = wrapper ? (wrapper as HTMLElement).scrollTop : window.scrollY\n    const initialX = wrapper ? (wrapper as HTMLElement).scrollLeft : window.scrollX\n    rect.top = _rect.top + initialY\n    rect.bottom = _rect.bottom + initialY\n    rect.left = _rect.left + initialX\n    rect.right = _rect.right + initialX\n    rect.width = _rect.width\n    rect.height = _rect.height\n    setReactiveRect({ ...rect })\n    setScale(vecn.vec3(rect?.width * scaleMultiplier, rect?.height * scaleMultiplier, 1))\n    debug &&\n      console.log(\n        'useTracker.getBoundingClientRect:',\n        rect,\n        'intialScroll:',\n        { initialY, initialX },\n        'size:',\n        size,\n        'pageReflow:',\n        pageReflow\n      )\n  }, [track, size, pageReflow, scaleMultiplier, debug])\n\n  const update = useCallback(\n    ({ onlyUpdateInViewport = false, scroll: overrideScroll }: UpdateCallback = {}) => {\n      if (!track.current || (onlyUpdateInViewport && !scrollState.inViewport)) {\n        return\n      }\n\n      const _scroll = overrideScroll || scroll\n\n      updateBounds(bounds, rect, _scroll, size)\n      updatePosition(position, bounds, scaleMultiplier)\n\n      // scrollState setup based on scroll direction\n      const isHorizontal = _scroll.scrollDirection === 'horizontal'\n      const sizeProp = isHorizontal ? 'width' : 'height'\n      const startProp = isHorizontal ? 'left' : 'top'\n\n      // calculate progress of passing through viewport (0 = just entered, 1 = just exited)\n      const pxInside = size[sizeProp] - bounds[startProp]\n      scrollState.progress = mapLinear(pxInside, 0, size[sizeProp] + bounds[sizeProp], 0, 1) // percent of total visible distance\n      scrollState.visibility = mapLinear(pxInside, 0, bounds[sizeProp], 0, 1) // percent of item height in view\n      scrollState.viewport = mapLinear(pxInside, 0, size[sizeProp], 0, 1) // percent of window height scrolled since visible\n    },\n    [track, size, scaleMultiplier, scroll]\n  )\n\n  // update scrollState in viewport\n  useLayoutEffect(() => {\n    scrollState.inViewport = inViewport\n    // update once more in case it went out of view\n    update({ onlyUpdateInViewport: false })\n    debug && console.log('useTracker.inViewport:', inViewport, 'update()')\n  }, [inViewport])\n\n  // re-run if the callback updated\n  useLayoutEffect(() => {\n    update({ onlyUpdateInViewport: false })\n    debug && console.log('useTracker.update on resize/reflow')\n  }, [update, pageReflow])\n\n  // auto-update on scroll\n  useEffect(() => {\n    if (autoUpdate) return onScroll((_scroll) => update({ onlyUpdateInViewport: true }))\n  }, [autoUpdate, update, onScroll])\n\n  return {\n    rect: reactiveRect, // Dom rect - doesn't change on scroll - not - reactive\n    bounds, // scrolled bounding rect in pixels - not reactive\n    scale, // reactive scene scale - includes z-axis so it can be spread onto mesh directly\n    position, // scrolled element position in viewport units - not reactive\n    scrollState, // scroll progress stats - not reactive\n    inViewport, // reactive prop for when inside viewport\n    update, // optional manual update\n  }\n}\n\nexport { useTracker }\n"],"names":["useCanvasStore","create","set","debug","scaleMultiplier","globalRender","globalPriority","globalClearDepth","globalRenderQueue","clearGlobalRenderQueue","isCanvasAvailable","hasSmoothScrollbar","canvasChildren","renderToCanvas","key","mesh","props","_ref","_extends2","Object","getOwnPropertyDescriptor","instances","inactive","_extends","updateCanvas","newProps","_ref2","_extends3","_canvasChildren$key","removeFromCanvas","dispose","_ref3","_canvasChildren$key2","_objectWithoutPropertiesLoose","map","_toPropertyKey","pageReflow","requestReflow","state","scroll","y","x","limit","velocity","progress","direction","scrollDirection","undefined","scrollTo","target","window","onScroll","useScrollbar","enabled","useLayoutEffect","vanillaUseLayoutEffect","useEffect","SmoothScrollbar","forwardRef","ref","children","_ref$enabled","_ref$locked","locked","_ref$scrollRestoratio","scrollRestoration","_ref$disablePointerOn","disablePointerOnScroll","_ref$horizontal","horizontal","_ref$scrollInContaine","scrollInContainer","_ref$updateGlobalStat","updateGlobalState","_ref$config","config","_ref$invalidate","invalidate","addEffect","innerRef","useRef","lenis","preventPointer","globalScrollState","s","useImperativeHandle","start","_lenis$current","current","stop","_lenis$current2","on","event","cb","_lenis$current3","notify","_lenis$current4","emit","_lenis$current5","_lenis$current6","raf","time","_lenis$current7","__lenis","preventPointerEvents","useCallback","prevent","style","pointerEvents","history","removeEffect","_raf","html","document","documentElement","wrapper","body","content","firstElementChild","classList","toggle","assign","smoothTouch","Lenis","orientation","_lenis$current8","requestAnimationFrame","_lenis$current9","cancelAnimationFrame","_lenis$current10","destroy","_lenis$current11","_lenis$current16","_lenis$current12","_onScroll","Math","abs","setState","_lenis$current13","_lenis$current14","_lenis$current15","off","getState","scrollY","scrollX","_lenis$current17","invalidateOnWheelEvent","onPointerInteraction","addEventListener","removeEventListener","_lenis$current18","_lenis$current19","isBrowser","mapLinear","a1","a2","b1","b2","useTracker","track","options","size","_temp","_ref$debounce","debounce","_useState","useState","width","innerWidth","Infinity","height","innerHeight","windowSize","setWindowSize","canvasEl","getElementById","handleResize","clientWidth","clientHeight","observer","debouncedResize","pkg","ResizeObserver","Polyfill","observe","_observer","disconnect","useWindowSize","_useScrollbar","_useMemo","useMemo","rootMargin","threshold","autoUpdate","opts","keys","index","_useInView","useInView","inViewport","inView","vecn","vec3","scale","setScale","scrollState","visibility","viewport","rect","top","bottom","left","right","_useState2","reactiveRect","setReactiveRect","bounds","positiveYUpBottom","position","_track$current","_rect","getBoundingClientRect","initialY","scrollTop","initialX","scrollLeft","console","log","update","_ref$onlyUpdateInView","onlyUpdateInViewport","_scroll","updateBounds","updatePosition","isHorizontal","sizeProp","pxInside"],"mappings":"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"}