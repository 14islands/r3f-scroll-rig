{"version":3,"file":"scrollbar.module.js","sources":["../src/config.ts","../src/store.ts","../src/scrollbar/useScrollbar.ts","../src/hooks/useIsomorphicLayoutEffect.ts","../src/scrollbar/SmoothScrollbar.tsx","../src/hooks/useWindowSize.ts","../src/utils/math.ts","../src/utils/helpers.ts","../src/renderer-api.ts","../src/hooks/useTracker.ts","../src/hooks/useScrollRig.ts"],"sourcesContent":["// Global config\n\nimport { Scene, Camera, WebGLRenderer } from 'three'\n\ntype PreloadCallback = (gl: WebGLRenderer, scene: Scene, camera: Camera) => void\n\nexport const config = {\n  // Execution order for useFrames (highest = last render)\n  PRIORITY_PRELOAD: 0,\n  PRIORITY_SCISSORS: 1,\n  PRIORITY_VIEWPORTS: 1,\n  PRIORITY_GLOBAL: 1000,\n\n  DEFAULT_SCALE_MULTIPLIER: 1,\n\n  // Global rendering props\n  preloadQueue: [] as PreloadCallback[],\n}\n","import create from 'zustand'\nimport { config } from './config'\n\nimport { ScrollCallback } from './scrollbar/SmoothScrollbar.d'\n\ninterface ScrollRigStore {\n  debug: boolean\n  scaleMultiplier: number\n  globalRender: boolean\n  globalPriority: number\n  globalClearDepth: boolean\n  globalRenderQueue: false | any[]\n  clearGlobalRenderQueue: () => void\n  isCanvasAvailable: boolean\n  hasSmoothScrollbar: boolean\n  canvasChildren: Record<string, any | undefined>\n  updateCanvas: (key: string, newProps: any) => void\n  renderToCanvas: (key: string, mesh: any, props: any) => void\n  removeFromCanvas: (key: string, dispose: boolean) => void\n  pageReflow: number\n  requestReflow: () => void\n  scroll: {\n    y: number\n    x: number\n    limit: number\n    velocity: number\n    progress: number\n    direction: number\n    scrollDirection?: 'vertical' | 'horizontal'\n  }\n  scrollTo: (target: any) => void\n  onScroll: (cb: ScrollCallback) => () => void\n}\n\nconst useCanvasStore = create<ScrollRigStore>((set) => ({\n  // //////////////////////////////////////////////////////////////////////////\n  // GLOBAL ScrollRig STATE\n  // //////////////////////////////////////////////////////////////////////////\n  debug: false,\n  scaleMultiplier: config.DEFAULT_SCALE_MULTIPLIER,\n\n  globalRender: true,\n  globalPriority: config.PRIORITY_GLOBAL,\n  globalClearDepth: false,\n\n  globalRenderQueue: false,\n  clearGlobalRenderQueue: () => set(() => ({ globalRenderQueue: false })),\n\n  // true if WebGL initialized without errors\n  isCanvasAvailable: true,\n\n  // true if <VirtualScrollbar> is currently enabled\n  hasSmoothScrollbar: false,\n\n  // map of all components to render on the global canvas\n  canvasChildren: {},\n\n  // add component to canvas\n  renderToCanvas: (key, mesh, props = {}) =>\n    set(({ canvasChildren }) => {\n      // check if already mounted\n      if (Object.getOwnPropertyDescriptor(canvasChildren, key)) {\n        // increase usage count\n        canvasChildren[key].instances += 1\n        canvasChildren[key].props.inactive = false\n        return { canvasChildren }\n      } else {\n        // otherwise mount it\n        const obj = { ...canvasChildren, [key]: { mesh, props, instances: 1 } }\n        return { canvasChildren: obj }\n      }\n    }),\n\n  // pass new props to a canvas component\n  updateCanvas: (key, newProps) =>\n    // @ts-ignore\n    set(({ canvasChildren }) => {\n      if (!canvasChildren[key]) return\n      const {\n        [key]: { mesh, props, instances },\n      } = canvasChildren\n      const obj = {\n        ...canvasChildren,\n        [key]: { mesh, props: { ...props, ...newProps }, instances },\n      }\n      // console.log('updateCanvas', key, { ...props, ...newProps })\n      return { canvasChildren: obj }\n    }),\n\n  // remove component from canvas\n  removeFromCanvas: (key, dispose = true) =>\n    set(({ canvasChildren }) => {\n      // check if remove or reduce instances\n      if (canvasChildren[key]?.instances > 1) {\n        // reduce usage count\n        canvasChildren[key].instances -= 1\n        return { canvasChildren }\n      } else {\n        if (dispose) {\n          // unmount since no longer used\n          const { [key]: _omit, ...obj } = canvasChildren // make a separate copy of the obj and omit\n          return { canvasChildren: obj }\n        } else {\n          // or tell it that it is \"inactive\"\n          canvasChildren[key].instances = 0\n          canvasChildren[key].props.inactive = true\n          return { canvasChildren: { ...canvasChildren } }\n        }\n      }\n    }),\n\n  // Used to ask components to re-calculate their positions after a layout reflow\n  pageReflow: 0,\n  requestReflow: () => {\n    set((state) => {\n      return { pageReflow: state.pageReflow + 1 }\n    })\n  },\n\n  // keep track of scrollbar\n  scroll: {\n    y: 0,\n    x: 0,\n    limit: 0,\n    velocity: 0,\n    progress: 0,\n    direction: 0,\n    scrollDirection: undefined,\n  },\n  scrollTo: (target) => window.scrollTo(0, target),\n  onScroll: () => () => {},\n}))\n\nexport { useCanvasStore }\n","import { useCanvasStore } from '../store'\nimport { ScrollCallback } from './SmoothScrollbar.d'\n\nexport interface Scroll {\n  y: number\n  x: number\n  limit: number\n  velocity: number\n  progress: number\n  direction: number\n  scrollDirection: string\n}\n\ninterface UseScrollbarProps {\n  enabled: boolean\n  scroll: Scroll\n  scrollTo: (target: any) => void\n  onScroll: (cb: ScrollCallback) => () => void\n}\n\n/**\n * Public interface for ScrollRig\n */\nexport const useScrollbar = () => {\n  const hasSmoothScrollbar = useCanvasStore((state) => state.hasSmoothScrollbar)\n  const scroll = useCanvasStore((state) => state.scroll)\n  const scrollTo = useCanvasStore((state) => state.scrollTo)\n  const onScroll = useCanvasStore((state) => state.onScroll)\n\n  return {\n    enabled: hasSmoothScrollbar,\n    scroll,\n    scrollTo,\n    onScroll,\n  } as UseScrollbarProps\n}\n","import { useEffect, useLayoutEffect as vanillaUseLayoutEffect } from 'react'\n\nexport const isBrowser = typeof window !== 'undefined'\n\nexport const useLayoutEffect = isBrowser ? vanillaUseLayoutEffect : useEffect\n","import { useEffect, useRef, useCallback, ReactElement, forwardRef, useImperativeHandle } from 'react'\nimport Lenis from '@studio-freight/lenis'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { useCanvasStore } from '../store'\nimport { ISmoothScrollbar, ScrollCallback, ScrollToTarget, ScrollToConfig } from './SmoothScrollbar.d'\n\nconst POINTER_EVENTS_ENABLE_VELOCITY = 1\nconst POINTER_EVENTS_DISABLE_VELOCITY = 1.5\n\nconst SmoothScrollbarImpl = (\n  {\n    children,\n    enabled = true,\n    locked = false,\n    scrollRestoration = 'auto',\n    disablePointerOnScroll = true,\n    horizontal = false,\n    scrollInContainer = false,\n    updateGlobalState = true,\n    onScroll,\n    config = {},\n    invalidate = () => {},\n    addEffect,\n  }: ISmoothScrollbar,\n  ref: any\n) => {\n  const innerRef = useRef<HTMLElement>()\n  const lenis = useRef<Lenis>()\n  const preventPointer = useRef(false)\n  const globalScrollState = useCanvasStore((s) => s.scroll)\n\n  // Expose lenis imperative API\n  useImperativeHandle(ref, () => ({\n    start: () => lenis.current?.start(),\n    stop: () => lenis.current?.stop(),\n    on: (event: string, cb: ScrollCallback) => lenis.current?.on(event, cb),\n    once: (event: string, cb: ScrollCallback) => lenis.current?.once(event, cb),\n    off: (event: string, cb?: ScrollCallback) => lenis.current?.off(event, cb),\n    notify: () => lenis.current?.notify(),\n    scrollTo: (target: ScrollToTarget, props: ScrollToConfig) => lenis.current?.scrollTo(target, props),\n    raf: (time: number) => lenis.current?.raf(time),\n    __lenis: lenis.current,\n  }))\n\n  // disable pointer events while scrolling to avoid slow event handlers\n  const preventPointerEvents = useCallback(\n    (prevent: boolean) => {\n      if (!disablePointerOnScroll) return\n      if (innerRef.current && preventPointer.current !== prevent) {\n        preventPointer.current = prevent\n        innerRef.current.style.pointerEvents = prevent ? 'none' : 'auto'\n      }\n    },\n    [disablePointerOnScroll, innerRef, preventPointer]\n  )\n\n  // apply chosen scroll restoration\n  useLayoutEffect(() => {\n    if ('scrollRestoration' in window.history) {\n      window.history.scrollRestoration = scrollRestoration\n    }\n  }, [])\n\n  // INIT LENIS\n  useLayoutEffect(() => {\n    // Set up scroll containers - allows scrolling without resizing window on iOS/mobile\n    const html = document.documentElement\n    const wrapper = document.body\n    const content = document.body.firstElementChild\n\n    html.classList.toggle('ScrollRig-scrollHtml', scrollInContainer)\n    wrapper.classList.toggle('ScrollRig-scrollWrapper', scrollInContainer)\n\n    if (scrollInContainer) {\n      Object.assign(config, {\n        smoothTouch: true,\n        wrapper,\n        content,\n      })\n    }\n\n    lenis.current = new Lenis({\n      direction: horizontal ? 'horizontal' : 'vertical',\n      ...config,\n    })\n\n    // let r3f drive the frameloop\n    let removeEffect: () => void\n    if (addEffect) {\n      removeEffect = addEffect((time: number) => lenis.current?.raf(time))\n    } else {\n      // manual animation frame\n      // TODO use framer motion / popmotion render loop?\n      let _raf: number\n      function raf(time: number) {\n        lenis.current?.raf(time)\n        _raf = requestAnimationFrame(raf)\n      }\n      _raf = requestAnimationFrame(raf)\n      removeEffect = () => cancelAnimationFrame(_raf)\n    }\n\n    return () => {\n      removeEffect()\n      lenis.current?.destroy()\n    }\n  }, [])\n\n  // BIND TO LENIS SCROLL EVENT\n  useLayoutEffect(() => {\n    lenis.current?.on('scroll', ({ scroll, limit, velocity, direction, progress }: any) => {\n      const y = !horizontal ? scroll : 0\n      const x = horizontal ? scroll : 0\n\n      // update global scroll store\n      if (updateGlobalState) {\n        globalScrollState.y = y\n        globalScrollState.x = x\n        globalScrollState.limit = limit\n        globalScrollState.velocity = velocity\n        globalScrollState.direction = direction\n        globalScrollState.progress = progress\n      }\n\n      if (Math.abs(velocity) > POINTER_EVENTS_DISABLE_VELOCITY) {\n        preventPointerEvents(true)\n      }\n      if (Math.abs(velocity) < POINTER_EVENTS_ENABLE_VELOCITY) {\n        preventPointerEvents(false)\n      }\n\n      onScroll && onScroll({ scroll, limit, velocity, direction, progress })\n\n      invalidate() // demand a R3F frame on scroll\n    })\n\n    // update global state\n    if (updateGlobalState) {\n      globalScrollState.scrollDirection = horizontal ? 'horizontal' : 'vertical'\n\n      // expose global scrollTo function\n      // @ts-ignore\n      useCanvasStore.setState({ scrollTo: lenis.current?.scrollTo })\n\n      // expose global onScroll function to subscribe to scroll events\n      useCanvasStore.setState({\n        onScroll: (cb: ScrollCallback) => {\n          lenis.current?.on('scroll', cb)\n          lenis.current?.notify() // send current scroll to new subscriber\n          return () => lenis.current?.off('scroll', cb)\n        },\n      })\n\n      // Set current scroll position on load in case reloaded further down\n      useCanvasStore.getState().scroll.y = window.scrollY\n      useCanvasStore.getState().scroll.x = window.scrollX\n    }\n\n    // fire our internal scroll callback to update globalState\n    lenis.current?.notify()\n    return () => {\n      lenis.current?.off('scroll')\n    }\n  }, [])\n\n  // Interaction events - invalidate R3F loop and enable pointer events\n  useLayoutEffect(() => {\n    const invalidateOnWheelEvent = () => invalidate()\n    const onPointerInteraction = () => preventPointerEvents(false)\n    window.addEventListener('pointermove', onPointerInteraction)\n    window.addEventListener('pointerdown', onPointerInteraction)\n    window.addEventListener('wheel', invalidateOnWheelEvent)\n    return () => {\n      lenis.current?.off('scroll')\n      window.removeEventListener('pointermove', onPointerInteraction)\n      window.removeEventListener('pointerdown', onPointerInteraction)\n      window.removeEventListener('wheel', invalidateOnWheelEvent)\n    }\n  }, [])\n\n  // Mark as enabled in global state\n  useEffect(() => {\n    if (updateGlobalState) {\n      document.documentElement.classList.toggle('js-smooth-scrollbar-enabled', enabled)\n      document.documentElement.classList.toggle('js-smooth-scrollbar-disabled', !enabled)\n      useCanvasStore.setState({ hasSmoothScrollbar: enabled })\n    }\n  }, [enabled])\n\n  useEffect(() => {\n    locked ? lenis.current?.stop() : lenis.current?.start()\n  }, [locked])\n\n  {\n    /* Use function child so we can spread props\n    - for instance disable pointer events while scrolling */\n  }\n  return children({ ref: innerRef })\n}\n\nexport const SmoothScrollbar = forwardRef<any, ISmoothScrollbar>(SmoothScrollbarImpl)\n","import { useState, useEffect } from 'react'\nimport { ResizeObserver as Polyfill } from '@juggle/resize-observer'\nimport pkg from 'debounce'\n\nconst isBrowser = typeof window !== 'undefined'\nexport interface WindowSize {\n  width: number\n  height: number\n}\n\ntype ConfigProps = {\n  debounce?: number\n}\n\n/*\n * Triggers a resize only if the Canvas DOM element changed dimensions - not on window resize event\n *\n * This is to avoid costly re-renders when the URL bar is scrolled away on mobile\n *\n * Based on: https://usehooks.com/useWindowSize/\n */\n\nexport function useWindowSize({ debounce = 0 }: ConfigProps = {}) {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowSize>({\n    width: isBrowser ? window.innerWidth : Infinity,\n    height: isBrowser ? window.innerHeight : Infinity,\n  })\n\n  useEffect(() => {\n    // check if we can find a canvas - if so, base size on canvas instead of window\n    // since 100vh !== window.innerHeight on mobile\n    const canvasEl = document.getElementById('ScrollRig-canvas')\n\n    // Handler to call on window resize\n    function handleResize() {\n      const width = canvasEl ? canvasEl.clientWidth : window.innerWidth\n      const height = canvasEl ? canvasEl.clientHeight : window.innerHeight\n\n      if (width !== windowSize.width || height !== windowSize.height) {\n        // Set window width/height to state\n        setWindowSize({\n          width,\n          height,\n        })\n      }\n    }\n\n    const debouncedResize = pkg.debounce(handleResize, debounce)\n\n    // Add event listener\n    const ResizeObserver = window.ResizeObserver || Polyfill\n    let observer: ResizeObserver\n    if (canvasEl) {\n      observer = new ResizeObserver(debouncedResize)\n      observer.observe(canvasEl)\n    } else {\n      window.addEventListener('resize', debouncedResize)\n    }\n    // Call handler right away so state gets updated with initial window size\n    handleResize()\n    // Remove event listener on cleanup\n    return () => {\n      window.removeEventListener('resize', debouncedResize)\n      observer?.disconnect()\n    }\n  }, [windowSize, setWindowSize])\n\n  return windowSize\n}\n","// Linear mapping from range <a1, a2> to range <b1, b2>\nexport function mapLinear(x: number, a1: number, a2: number, b1: number, b2: number) {\n  return b1 + ((x - a1) * (b2 - b1)) / (a2 - a1)\n}\n","import { Object3D } from 'three'\n\ntype CulledObject = {\n  wasFrustumCulled?: boolean\n  wasVisible?: boolean\n} & Object3D\n\n// Use to override Frustum temporarily to pre-upload textures to GPU\nexport function setAllCulled(obj: CulledObject, overrideCulled: boolean) {\n  if (!obj) return\n  if (overrideCulled === false) {\n    obj.wasFrustumCulled = obj.frustumCulled\n    obj.wasVisible = obj.visible\n    obj.visible = true\n    obj.frustumCulled = false\n  } else {\n    obj.visible = !!obj.wasVisible\n    obj.frustumCulled = !!obj.wasFrustumCulled\n  }\n  obj.children.forEach((child) => setAllCulled(child, overrideCulled))\n}\n","import { config } from './config'\nimport { Vector2, WebGLRenderer, Scene, Camera } from 'three'\nimport { invalidate } from '@react-three/fiber'\n\nimport { setAllCulled } from './utils/helpers'\nimport { useCanvasStore } from './store'\n\nconst viewportSize = new Vector2()\n\n// Flag that we need global rendering (full screen)\nexport const requestRender = (layers = [0]) => {\n  useCanvasStore.getState().globalRenderQueue = useCanvasStore.getState().globalRenderQueue || [0]\n  useCanvasStore.getState().globalRenderQueue = [...(useCanvasStore.getState().globalRenderQueue || []), ...layers]\n}\n\nexport const renderScissor = ({\n  gl,\n  scene,\n  camera,\n  left,\n  top,\n  width,\n  height,\n  layer = 0,\n  autoClear = false,\n  clearDepth = false,\n}: any) => {\n  if (!scene || !camera) return\n  gl.autoClear = autoClear\n  gl.setScissor(left, top, width, height)\n  gl.setScissorTest(true)\n  camera.layers.set(layer)\n  clearDepth && gl.clearDepth()\n  gl.render(scene, camera)\n  gl.setScissorTest(false)\n}\n\nexport const renderViewport = ({\n  gl,\n  scene,\n  camera,\n  left,\n  top,\n  width,\n  height,\n  layer = 0,\n  scissor = true,\n  autoClear = false,\n  clearDepth = false,\n}: any) => {\n  if (!scene || !camera) return\n  gl.getSize(viewportSize)\n  gl.autoClear = autoClear\n  gl.setViewport(left, top, width, height)\n  gl.setScissor(left, top, width, height)\n  gl.setScissorTest(scissor)\n  camera.layers.set(layer)\n  clearDepth && gl.clearDepth()\n  gl.render(scene, camera)\n  gl.setScissorTest(false)\n  gl.setViewport(0, 0, viewportSize.x, viewportSize.y)\n}\n\nexport const preloadScene = (scene: Scene, camera: Camera, layer = 0, callback?: () => void) => {\n  config.preloadQueue.push((gl: WebGLRenderer, globalScene: Scene, globalCamera: Camera) => {\n    gl.setScissorTest(false)\n    setAllCulled(scene || globalScene, false)\n    camera.layers.set(layer)\n    gl.render(scene || globalScene, camera || globalCamera)\n    setAllCulled(scene || globalScene, true)\n    callback && callback()\n  })\n  // auto trigger a new frame for the preload\n  invalidate()\n}\n","import { useRef, useCallback, useEffect, useMemo, useState, MutableRefObject } from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { useWindowSize } from './useWindowSize'\nimport vecn from 'vecn'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { mapLinear } from '../utils/math'\nimport { useCanvasStore } from '../store'\nimport { useScrollRig } from './useScrollRig'\n\nimport { useScrollbar, Scroll } from '../scrollbar/useScrollbar'\n\nimport type { Rect, Bounds, TrackerOptions, Tracker, ScrollState, UpdateCallback } from './useTracker.d'\n\nfunction updateBounds(bounds: Bounds, rect: Rect, scroll: Scroll, size: any) {\n  bounds.top = rect.top - (scroll.y || 0)\n  bounds.bottom = rect.bottom - (scroll.y || 0)\n  bounds.left = rect.left - (scroll.x || 0)\n  bounds.right = rect.right - (scroll.x || 0)\n  bounds.width = rect.width\n  bounds.height = rect.height\n  // move coordinate system so 0,0 is at center of screen\n  bounds.x = bounds.left + rect.width * 0.5 - size.width * 0.5\n  bounds.y = bounds.top + rect.height * 0.5 - size.height * 0.5\n  bounds.positiveYUpBottom = size.height - bounds.bottom // inverse Y\n}\n\nfunction updatePosition(position: vec3, bounds: Bounds, scaleMultiplier: number) {\n  position.x = bounds.x * scaleMultiplier\n  position.y = -1 * bounds.y * scaleMultiplier\n}\n\n/**\n * Returns the current Scene position of the DOM element\n * based on initial getBoundingClientRect and scroll delta from start\n */\nfunction useTracker(track: MutableRefObject<HTMLElement>, options?: TrackerOptions): Tracker {\n  const size = useWindowSize()\n  const { debug } = useScrollRig()\n  const { scroll, onScroll } = useScrollbar()\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n\n  // extend defaults with optional options\n  const { rootMargin, threshold, autoUpdate, wrapper } = useMemo(() => {\n    const target = { rootMargin: '0%', threshold: 0, autoUpdate: true } as TrackerOptions\n    const opts = options || {}\n    Object.keys(opts).map((key: string, index) => {\n      if (opts[key] !== undefined) target[key] = opts[key]\n    })\n    return target\n  }, [options])\n\n  // check if element is in viewport\n  const { ref, inView: inViewport } = useInView({ rootMargin, threshold })\n\n  // bind useInView ref to current tracking element\n  useLayoutEffect(() => {\n    ref(track.current)\n  }, [track])\n\n  // Using state so it's reactive\n  const [scale, setScale] = useState<vec3>(vecn.vec3(0, 0, 0))\n\n  // Using ref because\n  const scrollState: ScrollState = useRef({\n    inViewport: false,\n    progress: -1,\n    visibility: -1,\n    viewport: -1,\n  }).current\n\n  // DOM rect (initial position in pixels offset by scroll value on page load)\n  // Using ref so we can calculate bounds & position without a re-render\n  const rect = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n  }).current\n\n  // expose internal ref as a reactive state as well\n  const [reactiveRect, setReactiveRect] = useState<Rect>(rect)\n\n  // bounding rect in pixels - updated by scroll\n  const bounds = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n    positiveYUpBottom: 0,\n  }).current\n\n  // position in viewport units - updated by scroll\n  const position = useRef(vecn.vec3(0, 0, 0)).current\n\n  // Calculate bounding Rect as soon as it's available\n  useLayoutEffect(() => {\n    const _rect = track.current?.getBoundingClientRect()\n    if (!_rect) return\n    const initialY = wrapper ? (wrapper as HTMLElement).scrollTop : window.scrollY\n    const initialX = wrapper ? (wrapper as HTMLElement).scrollLeft : window.scrollX\n    rect.top = _rect.top + initialY\n    rect.bottom = _rect.bottom + initialY\n    rect.left = _rect.left + initialX\n    rect.right = _rect.right + initialX\n    rect.width = _rect.width\n    rect.height = _rect.height\n    setReactiveRect({ ...rect })\n    setScale(vecn.vec3(rect?.width * scaleMultiplier, rect?.height * scaleMultiplier, 1))\n    debug &&\n      console.log(\n        'useTracker.getBoundingClientRect:',\n        rect,\n        'intialScroll:',\n        { initialY, initialX },\n        'size:',\n        size,\n        'pageReflow:',\n        pageReflow\n      )\n  }, [track, size, pageReflow, scaleMultiplier, debug])\n\n  const update = useCallback(\n    ({ onlyUpdateInViewport = false, scroll: overrideScroll }: UpdateCallback = {}) => {\n      if (!track.current || (onlyUpdateInViewport && !scrollState.inViewport)) {\n        return\n      }\n\n      const _scroll = overrideScroll || scroll\n\n      updateBounds(bounds, rect, _scroll, size)\n      updatePosition(position, bounds, scaleMultiplier)\n\n      // scrollState setup based on scroll direction\n      const isHorizontal = _scroll.scrollDirection === 'horizontal'\n      const sizeProp = isHorizontal ? 'width' : 'height'\n      const startProp = isHorizontal ? 'left' : 'top'\n\n      // calculate progress of passing through viewport (0 = just entered, 1 = just exited)\n      const pxInside = size[sizeProp] - bounds[startProp]\n      scrollState.progress = mapLinear(pxInside, 0, size[sizeProp] + bounds[sizeProp], 0, 1) // percent of total visible distance\n      scrollState.visibility = mapLinear(pxInside, 0, bounds[sizeProp], 0, 1) // percent of item height in view\n      scrollState.viewport = mapLinear(pxInside, 0, size[sizeProp], 0, 1) // percent of window height scrolled since visible\n    },\n    [track, size, scaleMultiplier, scroll]\n  )\n\n  // update scrollState in viewport\n  useLayoutEffect(() => {\n    scrollState.inViewport = inViewport\n    // update once more in case it went out of view\n    update({ onlyUpdateInViewport: false })\n    debug && console.log('useTracker.inViewport:', inViewport, 'update()')\n  }, [inViewport])\n\n  // re-run if the callback updated\n  useLayoutEffect(() => {\n    update({ onlyUpdateInViewport: false })\n    debug && console.log('useTracker.update on resize/reflow')\n  }, [update, pageReflow])\n\n  // auto-update on scroll\n  useEffect(() => {\n    if (autoUpdate) return onScroll((_scroll) => update({ onlyUpdateInViewport: true }))\n  }, [autoUpdate, update, onScroll])\n\n  return {\n    rect: reactiveRect, // Dom rect - doesn't change on scroll - not - reactive\n    bounds, // scrolled bounding rect in pixels - not reactive\n    scale, // reactive scene scale - includes z-axis so it can be spread onto mesh directly\n    position, // scrolled element position in viewport units - not reactive\n    scrollState, // scroll progress stats - not reactive\n    inViewport, // reactive prop for when inside viewport\n    update, // optional manual update\n  }\n}\n\nexport { useTracker }\n","import { useEffect } from 'react'\n\nimport type { Scene, Camera } from 'three'\nimport { useCanvasStore } from '../store'\nimport { preloadScene, requestRender, renderScissor, renderViewport } from '../renderer-api'\n\nexport interface ScrollRigState {\n  debug: boolean\n  isCanvasAvailable: boolean\n  hasSmoothScrollbar: boolean\n  scaleMultiplier: number\n  preloadScene: (scene: Scene, camera: Camera, layer?: number, callback?: any) => void\n  requestRender: (layers?: number[]) => void\n  renderScissor: (args: any) => void\n  renderViewport: (args: any) => void\n  reflow: () => void\n}\n\n/**\n * Public interface for ScrollRig\n */\nexport const useScrollRig = () => {\n  const isCanvasAvailable = useCanvasStore((state) => state.isCanvasAvailable)\n  const hasSmoothScrollbar = useCanvasStore((state) => state.hasSmoothScrollbar)\n  const requestReflow = useCanvasStore((state) => state.requestReflow)\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n  const debug = useCanvasStore((state) => state.debug)\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n\n  useEffect(() => {\n    if (debug) {\n      // @ts-ignore\n      window._scrollRig = window._scrollRig || {}\n      // @ts-ignore\n      window._scrollRig.reflow = requestReflow\n    }\n  }, [])\n\n  return {\n    // boolean state\n    debug,\n    isCanvasAvailable,\n    hasSmoothScrollbar,\n    // scale\n    scaleMultiplier,\n    // render API\n    preloadScene,\n    requestRender,\n    renderScissor,\n    renderViewport,\n    // recalc all tracker positions\n    reflow: requestReflow,\n    reflowCompleted: pageReflow,\n  } as ScrollRigState\n}\n"],"names":["config","PRIORITY_PRELOAD","PRIORITY_SCISSORS","PRIORITY_VIEWPORTS","PRIORITY_GLOBAL","DEFAULT_SCALE_MULTIPLIER","preloadQueue","useCanvasStore","create","set","debug","scaleMultiplier","globalRender","globalPriority","globalClearDepth","globalRenderQueue","clearGlobalRenderQueue","isCanvasAvailable","hasSmoothScrollbar","canvasChildren","renderToCanvas","key","mesh","props","_ref","_extends2","Object","getOwnPropertyDescriptor","instances","inactive","_extends","updateCanvas","newProps","_ref2","_extends3","_canvasChildren$key","removeFromCanvas","dispose","_ref3","_canvasChildren$key2","map","_toPropertyKey","pageReflow","requestReflow","state","scroll","y","x","limit","velocity","progress","direction","scrollDirection","undefined","scrollTo","target","window","onScroll","useScrollbar","enabled","useLayoutEffect","vanillaUseLayoutEffect","useEffect","SmoothScrollbar","forwardRef","ref","children","_ref$enabled","_ref$locked","locked","scrollRestoration","_ref$scrollRestoratio","disablePointerOnScroll","_ref$disablePointerOn","horizontal","_ref$horizontal","scrollInContainer","_ref$scrollInContaine","updateGlobalState","_ref$updateGlobalStat","_ref$config","invalidate","_ref$invalidate","addEffect","innerRef","useRef","lenis","preventPointer","globalScrollState","s","useImperativeHandle","start","_lenis$current","current","stop","_lenis$current2","on","event","cb","_lenis$current3","once","_lenis$current4","off","_lenis$current5","notify","_lenis$current6","_lenis$current7","raf","time","_lenis$current8","__lenis","preventPointerEvents","useCallback","prevent","style","pointerEvents","history","removeEffect","_raf","html","document","documentElement","wrapper","body","firstElementChild","classList","toggle","assign","smoothTouch","content","Lenis","_lenis$current9","requestAnimationFrame","_lenis$current10","cancelAnimationFrame","_lenis$current11","destroy","_lenis$current12","_lenis$current17","Math","abs","setState","_lenis$current13","_lenis$current14","_lenis$current15","_lenis$current16","getState","scrollY","scrollX","_lenis$current18","invalidateOnWheelEvent","onPointerInteraction","addEventListener","_lenis$current19","removeEventListener","_lenis$current20","_lenis$current21","isBrowser","mapLinear","a1","a2","b1","b2","setAllCulled","obj","overrideCulled","wasFrustumCulled","frustumCulled","wasVisible","visible","forEach","child","viewportSize","Vector2","requestRender","layers","concat","renderScissor","gl","scene","camera","left","top","width","height","layer","_ref$layer","_ref$autoClear","autoClear","clearDepth","_ref$clearDepth","setScissor","setScissorTest","render","renderViewport","_ref2$layer","scissor","_ref2$scissor","_ref2$autoClear","_ref2$clearDepth","getSize","setViewport","preloadScene","callback","push","globalScene","globalCamera","useTracker","track","options","size","_temp","_ref$debounce","debounce","_useState","useState","innerWidth","Infinity","innerHeight","windowSize","setWindowSize","canvasEl","getElementById","clientWidth","clientHeight","observer","pkg","handleResize","ResizeObserver","Polyfill","debouncedResize","observe","_observer","disconnect","useWindowSize","useScrollRig","_scrollRig","reflow","reflowCompleted","_useScrollRig","_useScrollbar","useMemo","rootMargin","threshold","autoUpdate","opts","keys","index","_useInView","useInView","_useMemo","inViewport","inView","vecn","vec3","scale","setScale","scrollState","visibility","viewport","rect","bottom","right","reactiveRect","_useState2","setReactiveRect","bounds","positiveYUpBottom","position","_track$current","_rect","getBoundingClientRect","initialY","scrollTop","initialX","scrollLeft","console","log","update","onlyUpdateInViewport","_ref$onlyUpdateInView","_scroll","updateBounds","updatePosition","isHorizontal","sizeProp","pxInside"],"mappings":"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"}