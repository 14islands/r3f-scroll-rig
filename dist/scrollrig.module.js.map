{"version":3,"file":"scrollrig.module.js","sources":["../src/hooks/useIsomorphicLayoutEffect.ts","../src/config.ts","../src/store.ts","../src/components/ResizeManager.ts","../src/components/PerspectiveCamera.tsx","../src/components/OrthographicCamera.tsx","../src/utils/helpers.ts","../src/renderer-api.ts","../src/components/GlobalCanvas.tsx","../src/hooks/useScrollRig.ts","../src/components/GlobalChildren.tsx","../src/components/GlobalRenderer.tsx","../src/components/CanvasErrorBoundary.tsx","../src/components/DebugMesh.tsx","../src/hooks/useWindowSize.ts","../src/utils/math.ts","../src/scrollbar/useScrollbar.ts","../src/hooks/useTracker.ts","../src/components/ScrollScene.tsx","../src/components/ViewportScrollScene.tsx","../src/hooks/useCanvas.ts","../src/components/UseCanvas.tsx","../src/hooks/useImageAsTexture.ts","../src/scrollbar/SmoothScrollbar.tsx","../src/components/R3FSmoothScrollbar.tsx","../src/index.ts"],"sourcesContent":["import { useEffect, useLayoutEffect as vanillaUseLayoutEffect } from 'react'\n\nexport const isBrowser = typeof window !== 'undefined'\n\nexport const useLayoutEffect = isBrowser ? vanillaUseLayoutEffect : useEffect\n","// Global config\nimport type { Scene, Camera, WebGLRenderer } from 'three'\n\ntype PreloadCallback = (gl: WebGLRenderer, scene: Scene, camera: Camera) => void\n\nexport const config = {\n  // Execution order for useFrames (highest = last render)\n  PRIORITY_PRELOAD: 0,\n  PRIORITY_SCISSORS: 1,\n  PRIORITY_VIEWPORTS: 1,\n  PRIORITY_GLOBAL: 1000,\n\n  DEFAULT_SCALE_MULTIPLIER: 1,\n\n  // Global rendering props\n  preloadQueue: [] as PreloadCallback[],\n}\n","import create from 'zustand'\nimport { config } from './config'\n\nimport { ScrollCallback } from './scrollbar/SmoothScrollbarTypes'\n\ninterface ScrollRigStore {\n  debug: boolean\n  scaleMultiplier: number\n  globalRender: boolean\n  globalPriority: number\n  globalClearDepth: boolean\n  globalRenderQueue: false | any[]\n  clearGlobalRenderQueue: () => void\n  isCanvasAvailable: boolean\n  hasSmoothScrollbar: boolean\n  canvasChildren: Record<string, any | undefined>\n  updateCanvas: (key: string, newProps: any) => void\n  renderToCanvas: (key: string, mesh: any, props: any) => void\n  removeFromCanvas: (key: string, dispose: boolean) => void\n  pageReflow: number\n  requestReflow: () => void\n  scroll: {\n    y: number\n    x: number\n    limit: number\n    velocity: number\n    progress: number\n    direction: number\n    scrollDirection?: 'vertical' | 'horizontal'\n  }\n  scrollTo: (target: any) => void\n  onScroll: (cb: ScrollCallback) => () => void\n}\n\nconst useCanvasStore = create<ScrollRigStore>((set) => ({\n  // //////////////////////////////////////////////////////////////////////////\n  // GLOBAL ScrollRig STATE\n  // //////////////////////////////////////////////////////////////////////////\n  debug: false,\n  scaleMultiplier: config.DEFAULT_SCALE_MULTIPLIER,\n\n  globalRender: true,\n  globalPriority: config.PRIORITY_GLOBAL,\n  globalClearDepth: false,\n\n  globalRenderQueue: false,\n  clearGlobalRenderQueue: () => set(() => ({ globalRenderQueue: false })),\n\n  // true if WebGL initialized without errors\n  isCanvasAvailable: true,\n\n  // true if <VirtualScrollbar> is currently enabled\n  hasSmoothScrollbar: false,\n\n  // map of all components to render on the global canvas\n  canvasChildren: {},\n\n  // add component to canvas\n  renderToCanvas: (key, mesh, props = {}) =>\n    set(({ canvasChildren }) => {\n      // check if already mounted\n      if (Object.getOwnPropertyDescriptor(canvasChildren, key)) {\n        // increase usage count\n        canvasChildren[key].instances += 1\n        canvasChildren[key].props.inactive = false\n        return { canvasChildren }\n      } else {\n        // otherwise mount it\n        const obj = { ...canvasChildren, [key]: { mesh, props, instances: 1 } }\n        return { canvasChildren: obj }\n      }\n    }),\n\n  // pass new props to a canvas component\n  updateCanvas: (key, newProps) =>\n    // @ts-ignore\n    set(({ canvasChildren }) => {\n      if (!canvasChildren[key]) return\n      const {\n        [key]: { mesh, props, instances },\n      } = canvasChildren\n      const obj = {\n        ...canvasChildren,\n        [key]: { mesh, props: { ...props, ...newProps }, instances },\n      }\n      // console.log('updateCanvas', key, { ...props, ...newProps })\n      return { canvasChildren: obj }\n    }),\n\n  // remove component from canvas\n  removeFromCanvas: (key, dispose = true) =>\n    set(({ canvasChildren }) => {\n      // check if remove or reduce instances\n      if (canvasChildren[key]?.instances > 1) {\n        // reduce usage count\n        canvasChildren[key].instances -= 1\n        return { canvasChildren }\n      } else {\n        if (dispose) {\n          // unmount since no longer used\n          const { [key]: _omit, ...obj } = canvasChildren // make a separate copy of the obj and omit\n          return { canvasChildren: obj }\n        } else {\n          // or tell it that it is \"inactive\"\n          canvasChildren[key].instances = 0\n          canvasChildren[key].props.inactive = true\n          return { canvasChildren: { ...canvasChildren } }\n        }\n      }\n    }),\n\n  // Used to ask components to re-calculate their positions after a layout reflow\n  pageReflow: 0,\n  requestReflow: () => {\n    set((state) => {\n      return { pageReflow: state.pageReflow + 1 }\n    })\n  },\n\n  // keep track of scrollbar\n  scroll: {\n    y: 0,\n    x: 0,\n    limit: 0,\n    velocity: 0,\n    progress: 0,\n    direction: 0,\n    scrollDirection: undefined,\n  },\n  scrollTo: () => {},\n  onScroll: () => () => {},\n}))\n\nexport { useCanvasStore }\n","import { useEffect } from 'react'\nimport { ResizeObserver as Polyfill } from '@juggle/resize-observer'\n\nimport { useCanvasStore } from '../store'\n\n/**\n * Trigger reflow when WebFonts loaded\n */\nexport const ResizeManager = () => {\n  const requestReflow = useCanvasStore((state) => state.requestReflow)\n  const debug = useCanvasStore((state) => state.debug)\n\n  // reflow on webfont loaded to prevent misalignments\n  useEffect(() => {\n    const ResizeObserver = window.ResizeObserver || Polyfill\n\n    // watch out for any random height change\n    let observer = new ResizeObserver(() => {\n      requestReflow()\n      debug && console.log('ResizeManager', 'document.body height changed')\n    })\n    observer.observe(document.body)\n    return () => {\n      observer?.disconnect()\n    }\n  }, [])\n\n  return null\n}\n","import React, { useRef, forwardRef, useMemo, useImperativeHandle } from 'react'\nimport { useThree } from '@react-three/fiber'\nimport { PerspectiveCamera as PerspectiveCameraImpl } from 'three'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { useCanvasStore } from '../store'\n\ntype Props = JSX.IntrinsicElements['perspectiveCamera'] & {\n  makeDefault?: boolean\n  margin?: number\n}\n\nconst DEFAULT_FOV = 50\n\nexport const PerspectiveCamera = forwardRef(({ makeDefault = false, margin = 0, ...props }: Props, ref) => {\n  const set = useThree((state) => state.set)\n  const camera = useThree((state) => state.camera)\n  const size = useThree((state) => state.size)\n  const viewport = useThree((state) => state.viewport)\n  const cameraRef = useRef<PerspectiveCameraImpl>(null!)\n  useImperativeHandle(ref, () => cameraRef.current)\n\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n\n  // Calculate FoV or distance to match DOM size\n  const { fov, distance, aspect } = useMemo(() => {\n    const width = (size.width + margin * 2) * scaleMultiplier\n    const height = (size.height + margin * 2) * scaleMultiplier\n    const aspect = width / height\n\n    // check props vs defaults\n    let fov = props.fov || DEFAULT_FOV\n    let distance = (props?.position as number[])?.[2]\n\n    // calculate either FoV or distance to match scale\n    if (distance) {\n      // calculate FoV based on distance\n      fov = 2 * (180 / Math.PI) * Math.atan(height / (2 * distance))\n    } else {\n      // calculate distance for specified FoV\n      const ratio = Math.tan(((fov / 2.0) * Math.PI) / 180.0) * 2.0\n      distance = height / ratio\n    }\n\n    return { fov, distance, aspect }\n  }, [size, scaleMultiplier, pageReflow])\n\n  // Update camera projection and R3F viewport\n  useLayoutEffect(() => {\n    cameraRef.current.lookAt(0, 0, 0)\n    cameraRef.current.updateProjectionMatrix()\n    // https://github.com/react-spring/@react-three/fiber/issues/178\n    // Update matrix world since the renderer is a frame late\n    cameraRef.current.updateMatrixWorld()\n    // update r3f viewport which is lagging on resize\n    set((state) => ({ viewport: { ...state.viewport, ...viewport.getCurrentViewport(camera) } }))\n  }, [size, scaleMultiplier, pageReflow])\n\n  useLayoutEffect(() => {\n    if (makeDefault) {\n      const oldCam = camera\n      set(() => ({ camera: cameraRef.current! }))\n      return () => set(() => ({ camera: oldCam }))\n    }\n    // The camera should not be part of the dependency list because this components camera is a stable reference\n    // that must exchange the default, and clean up after itself on unmount.\n  }, [cameraRef, makeDefault, set])\n\n  return (\n    <perspectiveCamera\n      ref={cameraRef}\n      position={[0, 0, distance]}\n      onUpdate={(self) => self.updateProjectionMatrix()}\n      near={0.1}\n      aspect={aspect}\n      fov={fov}\n      far={distance * 2}\n      {...props}\n    />\n  )\n})\n","import React, { useRef, forwardRef, useMemo, useImperativeHandle } from 'react'\nimport { OrthographicCamera as OrthographicCameraImpl } from 'three'\nimport { useThree } from '@react-three/fiber'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { useCanvasStore } from '../store'\n\ntype Props = JSX.IntrinsicElements['orthographicCamera'] & {\n  makeDefault?: boolean\n  margin?: number\n}\nexport const OrthographicCamera = forwardRef(({ makeDefault = false, margin = 0, ...props }: Props, ref) => {\n  const set = useThree((state) => state.set)\n  const camera = useThree((state) => state.camera)\n  const size = useThree((state) => state.size)\n\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n\n  const distance = useMemo(() => {\n    const width = size.width * scaleMultiplier\n    const height = size.height * scaleMultiplier\n    return Math.max(width, height)\n  }, [size, pageReflow, scaleMultiplier])\n\n  const cameraRef = useRef<OrthographicCameraImpl>(null!)\n  useImperativeHandle(ref, () => cameraRef.current)\n  useLayoutEffect(() => {\n    cameraRef.current.lookAt(0, 0, 0)\n    cameraRef.current.updateProjectionMatrix()\n    // https://github.com/react-spring/@react-three/fiber/issues/178\n    // Update matrix world since the renderer is a frame late\n    cameraRef.current.updateMatrixWorld()\n  }, [distance, size])\n\n  useLayoutEffect(() => {\n    if (makeDefault) {\n      const oldCam = camera\n      set(() => ({ camera: cameraRef.current! }))\n      return () => set(() => ({ camera: oldCam }))\n    }\n    // The camera should not be part of the dependency list because this components camera is a stable reference\n    // that must exchange the default, and clean up after itself on unmount.\n  }, [cameraRef, makeDefault, set])\n\n  return (\n    <orthographicCamera\n      left={(size.width * scaleMultiplier) / -2 - margin * scaleMultiplier}\n      right={(size.width * scaleMultiplier) / 2 + margin * scaleMultiplier}\n      top={(size.height * scaleMultiplier) / 2 + margin * scaleMultiplier}\n      bottom={(size.height * scaleMultiplier) / -2 - margin * scaleMultiplier}\n      far={distance * 2}\n      position={[0, 0, distance]}\n      near={0.001}\n      ref={cameraRef}\n      onUpdate={(self) => self.updateProjectionMatrix()}\n      {...props}\n    />\n  )\n})\n","import { Object3D } from 'three'\n\ntype CulledObject = {\n  wasFrustumCulled?: boolean\n  wasVisible?: boolean\n} & Object3D\n\n// Use to override Frustum temporarily to pre-upload textures to GPU\nexport function setAllCulled(obj: CulledObject, overrideCulled: boolean) {\n  if (!obj) return\n  if (overrideCulled === false) {\n    obj.wasFrustumCulled = obj.frustumCulled\n    obj.wasVisible = obj.visible\n    obj.visible = true\n    obj.frustumCulled = false\n  } else {\n    obj.visible = !!obj.wasVisible\n    obj.frustumCulled = !!obj.wasFrustumCulled\n  }\n  obj.children.forEach((child) => setAllCulled(child, overrideCulled))\n}\n","import { config } from './config'\nimport { Vector2, WebGLRenderer, Scene, Camera } from 'three'\nimport { invalidate } from '@react-three/fiber'\n\nimport { setAllCulled } from './utils/helpers'\nimport { useCanvasStore } from './store'\n\nconst viewportSize = new Vector2()\n\n// Flag that we need global rendering (full screen)\nexport const requestRender = (layers = [0]) => {\n  useCanvasStore.getState().globalRenderQueue = useCanvasStore.getState().globalRenderQueue || [0]\n  useCanvasStore.getState().globalRenderQueue = [...(useCanvasStore.getState().globalRenderQueue || []), ...layers]\n}\n\nexport const renderScissor = ({\n  gl,\n  scene,\n  camera,\n  left,\n  top,\n  width,\n  height,\n  layer = 0,\n  autoClear = false,\n  clearDepth = false,\n}: any) => {\n  if (!scene || !camera) return\n  gl.autoClear = autoClear\n  gl.setScissor(left, top, width, height)\n  gl.setScissorTest(true)\n  camera.layers.set(layer)\n  clearDepth && gl.clearDepth()\n  gl.render(scene, camera)\n  gl.setScissorTest(false)\n}\n\nexport const renderViewport = ({\n  gl,\n  scene,\n  camera,\n  left,\n  top,\n  width,\n  height,\n  layer = 0,\n  scissor = true,\n  autoClear = false,\n  clearDepth = false,\n}: any) => {\n  if (!scene || !camera) return\n  gl.getSize(viewportSize)\n  gl.autoClear = autoClear\n  gl.setViewport(left, top, width, height)\n  gl.setScissor(left, top, width, height)\n  gl.setScissorTest(scissor)\n  camera.layers.set(layer)\n  clearDepth && gl.clearDepth()\n  gl.render(scene, camera)\n  gl.setScissorTest(false)\n  gl.setViewport(0, 0, viewportSize.x, viewportSize.y)\n}\n\nexport const preloadScene = (scene: Scene, camera: Camera, layer = 0, callback?: () => void) => {\n  config.preloadQueue.push((gl: WebGLRenderer, globalScene: Scene, globalCamera: Camera) => {\n    gl.setScissorTest(false)\n    setAllCulled(scene || globalScene, false)\n    camera.layers.set(layer)\n    gl.render(scene || globalScene, camera || globalCamera)\n    setAllCulled(scene || globalScene, true)\n    callback && callback()\n  })\n  // auto trigger a new frame for the preload\n  invalidate()\n}\n","import React, { ReactNode, ReactElement } from 'react'\nimport { Canvas, Props } from '@react-three/fiber'\nimport { ResizeObserver as Polyfill } from '@juggle/resize-observer'\nimport { parse } from 'query-string'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { useCanvasStore } from '../store'\nimport { ResizeManager } from './ResizeManager'\nimport { PerspectiveCamera } from './PerspectiveCamera'\nimport { OrthographicCamera } from './OrthographicCamera'\n\nimport { GlobalChildren } from './GlobalChildren'\nimport { GlobalRenderer } from './GlobalRenderer'\nimport { CanvasErrorBoundary } from './CanvasErrorBoundary'\n\nimport { config } from '../config'\nimport { version } from '../../package.json'\n\nlet polyfill: new (callback: ResizeObserverCallback) => ResizeObserver\nif (typeof window !== 'undefined') {\n  polyfill = window.ResizeObserver || Polyfill\n}\n\ninterface IGlobalCanvas extends Omit<Props, 'children'> {\n  children?: ReactNode | ((globalChildren: ReactNode) => ReactNode)\n  as?: any\n  orthographic?: boolean\n  onError?: (props: any) => void\n  camera?: any\n  // state\n  debug?: boolean\n  scaleMultiplier?: number\n  globalRender?: boolean\n  globalPriority?: number\n  globalClearDepth?: boolean\n}\n\nconst GlobalCanvasImpl = ({\n  children,\n  as = Canvas,\n  gl,\n  style,\n  orthographic,\n  camera,\n  debug,\n  scaleMultiplier = config.DEFAULT_SCALE_MULTIPLIER,\n  globalRender = true,\n  globalPriority = config.PRIORITY_GLOBAL,\n  globalClearDepth = false,\n  ...props\n}: Omit<IGlobalCanvas, 'onError'>) => {\n  const useGlobalRenderer = useCanvasStore((state) => state.globalRender)\n\n  // enable debug mode\n  useLayoutEffect(() => {\n    if (typeof window !== 'undefined') {\n      // @ts-ignore\n      window.__r3f_scroll_rig = version\n    }\n\n    // Querystring overridess\n    const qs = parse(window.location.search)\n\n    // show debug statements\n    if (debug || typeof qs.debug !== 'undefined') {\n      useCanvasStore.setState({ debug: true })\n      console.info('@14islands/r3f-scroll-rig@' + version)\n    }\n  }, [debug])\n\n  // update state\n  useLayoutEffect(() => {\n    useCanvasStore.setState({\n      scaleMultiplier,\n      globalRender,\n      globalPriority,\n      globalClearDepth,\n    })\n  }, [scaleMultiplier, globalPriority, globalRender, globalClearDepth])\n\n  const As = as\n\n  return (\n    <As\n      id=\"ScrollRig-canvas\"\n      // use our own default camera\n      camera={{\n        manual: true,\n      }}\n      // Some sane defaults\n      gl={{\n        // https://blog.tojicode.com/2013/12/failifmajorperformancecaveat-with-great.html\n        failIfMajorPerformanceCaveat: true, // skip webgl if slow device\n        ...gl,\n      }}\n      // polyfill old iOS safari\n      resize={{ scroll: false, debounce: 0, polyfill }}\n      // default styles\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        height: '100vh', // use 100vh to avoid resize on iOS when url bar goes away\n        ...style,\n      }}\n      // allow to override anything of the above\n      {...props}\n    >\n      {/* @ts-ignore */}\n      {!orthographic && <PerspectiveCamera manual makeDefault {...camera} />}\n      {/* @ts-ignore */}\n      {orthographic && <OrthographicCamera manual makeDefault {...camera} />}\n\n      {useGlobalRenderer && <GlobalRenderer />}\n\n      {typeof children === 'function' ? children(<GlobalChildren />) : <GlobalChildren>{children}</GlobalChildren>}\n\n      <ResizeManager />\n    </As>\n  )\n}\n\nexport const GlobalCanvas = ({ children, onError, ...props }: IGlobalCanvas) => {\n  useLayoutEffect(() => {\n    document.documentElement.classList.add('js-has-global-canvas')\n  }, [])\n\n  return (\n    // @ts-ignore\n    <CanvasErrorBoundary\n      onError={(err: any) => {\n        onError && onError(err)\n        useCanvasStore.setState({ isCanvasAvailable: false }) /* WebGL failed to init */\n        document.documentElement.classList.remove('js-has-global-canvas')\n        document.documentElement.classList.add('js-global-canvas-error')\n      }}\n    >\n      <GlobalCanvasImpl {...props}>{children}</GlobalCanvasImpl>\n      <noscript>\n        <style>\n          {`\n          .ScrollRig-visibilityHidden,\n          .ScrollRig-transparentColor {\n            visibility: unset;\n            color: unset;\n          }\n          `}\n        </style>\n      </noscript>\n    </CanvasErrorBoundary>\n  )\n}\n","import { useEffect } from 'react'\n\nimport type { Scene, Camera } from 'three'\nimport { useCanvasStore } from '../store'\nimport { preloadScene, requestRender, renderScissor, renderViewport } from '../renderer-api'\n\nexport interface ScrollRigState {\n  debug: boolean\n  isCanvasAvailable: boolean\n  hasSmoothScrollbar: boolean\n  scaleMultiplier: number\n  preloadScene: (scene: Scene, camera: Camera, layer?: number, callback?: any) => void\n  requestRender: (layers?: number[]) => void\n  renderScissor: (args: any) => void\n  renderViewport: (args: any) => void\n  reflow: () => void\n}\n\n/**\n * Public interface for ScrollRig\n */\nexport const useScrollRig = () => {\n  const isCanvasAvailable = useCanvasStore((state) => state.isCanvasAvailable)\n  const hasSmoothScrollbar = useCanvasStore((state) => state.hasSmoothScrollbar)\n  const requestReflow = useCanvasStore((state) => state.requestReflow)\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n  const debug = useCanvasStore((state) => state.debug)\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n\n  useEffect(() => {\n    if (debug) {\n      // @ts-ignore\n      window._scrollRig = window._scrollRig || {}\n      // @ts-ignore\n      window._scrollRig.reflow = requestReflow\n    }\n  }, [])\n\n  return {\n    // boolean state\n    debug,\n    isCanvasAvailable,\n    hasSmoothScrollbar,\n    // scale\n    scaleMultiplier,\n    // render API\n    preloadScene,\n    requestRender,\n    renderScissor,\n    renderViewport,\n    // recalc all tracker positions\n    reflow: requestReflow,\n    reflowCompleted: pageReflow,\n  } as ScrollRigState\n}\n","import React, { Fragment, useEffect, ReactNode, cloneElement } from 'react'\nimport { invalidate, useThree } from '@react-three/fiber'\n\nimport { useCanvasStore } from '../store'\nimport { useScrollRig } from '../hooks/useScrollRig'\n\n/**\n * Renders global children from useCanvas hook\n */\nexport const GlobalChildren = ({ children }: { children?: ReactNode }) => {\n  const gl = useThree((s) => s.gl)\n  const canvasChildren = useCanvasStore((state) => state.canvasChildren)\n  const scrollRig = useScrollRig()\n\n  useEffect(() => {\n    // render empty canvas automatically if all children were removed\n    if (!Object.keys(canvasChildren).length) {\n      scrollRig.debug && console.log('GlobalRenderer', 'auto render empty canvas')\n      // clear leftover viewports etc from unmounted components\n      gl.clear()\n      // re-render global scene in case frameloop=\"demand\" to avoid empty canvas\n      scrollRig.requestRender()\n      invalidate()\n    }\n  }, [canvasChildren])\n\n  scrollRig.debug && console.log('GlobalChildren', Object.keys(canvasChildren).length)\n  return (\n    <>\n      {children}\n      {Object.keys(canvasChildren).map((key) => {\n        const { mesh, props } = canvasChildren[key]\n\n        if (typeof mesh === 'function') {\n          return <Fragment key={key}>{mesh({ key, ...scrollRig, ...props })}</Fragment>\n        }\n\n        return cloneElement(mesh, {\n          key,\n          ...props,\n        })\n      })}\n    </>\n  )\n}\n","import { useThree, useFrame, invalidate } from '@react-three/fiber'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { config } from '../config'\nimport { useCanvasStore } from '../store'\nimport { useScrollRig } from '../hooks/useScrollRig'\n\n/**\n * Global render loop to avoid double renders on the same frame\n */\nexport const GlobalRenderer = () => {\n  const gl = useThree((s) => s.gl)\n  const frameloop = useThree((s) => s.frameloop)\n  const globalClearDepth = useCanvasStore((state) => state.globalClearDepth)\n  const globalPriority = useCanvasStore((state) => state.globalPriority)\n  const scrollRig = useScrollRig()\n\n  // https://threejs.org/docs/#api/en/renderers/WebGLRenderer.debug\n  useLayoutEffect(() => {\n    gl.debug.checkShaderErrors = scrollRig.debug\n  }, [scrollRig.debug])\n\n  // PRELOAD RENDER LOOP\n  useFrame(({ camera, scene }) => {\n    if (!config.preloadQueue.length) return\n    // Render preload frames first and clear directly\n    config.preloadQueue.forEach((render) => render(gl, scene, camera))\n    // cleanup\n    gl.clear()\n    config.preloadQueue = []\n    // trigger new frame to get correct visual state after all preloads\n    scrollRig.debug && console.log('GlobalRenderer', 'preload complete. trigger global render')\n    scrollRig.requestRender()\n    invalidate()\n  }, config.PRIORITY_PRELOAD)\n\n  // GLOBAL RENDER LOOP\n  useFrame(({ camera, scene }) => {\n    const globalRenderQueue = useCanvasStore.getState().globalRenderQueue\n\n    // Render if requested or if always on\n    if (frameloop === 'always' || globalRenderQueue) {\n      // render default layer, scene, camera\n      camera.layers.disableAll()\n      if (globalRenderQueue) {\n        // @ts-ignore\n        globalRenderQueue.forEach((layer) => {\n          camera.layers.enable(layer)\n        })\n      } else {\n        camera.layers.enable(0)\n      }\n\n      // render as HUD over any other renders by default\n      globalClearDepth && gl.clearDepth()\n      gl.render(scene, camera)\n    }\n    // cleanup for next frame\n    useCanvasStore.getState().clearGlobalRenderQueue()\n  }, globalPriority) // Take over rendering\n\n  return null\n}\n","// @ts-nocheck\nimport { Component, ReactNode } from 'react'\n\ninterface ICanvasErrorBoundary {\n  children: ReactNode\n  onError: () => void\n}\n\nexport class CanvasErrorBoundary extends Component<{}, ICanvasErrorBoundary> {\n  constructor(props) {\n    super(props)\n    this.state = { error: false }\n    this.props = props\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { error }\n  }\n\n  // componentDidCatch(error, errorInfo) {\n  //   // You can also log the error to an error reporting service\n  //   // logErrorToMyService(error, errorInfo)\n  // }\n\n  render() {\n    if (this.state.error) {\n      this.props.onError && this.props.onError(this.state.error)\n      return null\n    }\n\n    return this.props.children\n  }\n}\n","import React from 'react'\nimport { Color } from 'three'\n\nexport const DebugMesh = ({ scale }: { scale: [x: number, y: number, z: number] }) => (\n  <mesh scale={scale}>\n    <planeGeometry />\n    <shaderMaterial\n      args={[\n        {\n          uniforms: {\n            color: { value: new Color('hotpink') },\n          },\n          vertexShader: `\n            void main() {\n              gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n            }\n          `,\n          fragmentShader: `\n            uniform vec3 color;\n            uniform float opacity;\n            void main() {\n              gl_FragColor.rgba = vec4(color, .5);\n            }\n          `,\n        },\n      ]}\n      transparent\n    />\n  </mesh>\n)\n","import { useState, useEffect } from 'react'\nimport { ResizeObserver as Polyfill } from '@juggle/resize-observer'\nimport pkg from 'debounce'\n\nconst isBrowser = typeof window !== 'undefined'\nexport interface WindowSize {\n  width: number\n  height: number\n}\n\ntype ConfigProps = {\n  debounce?: number\n}\n\n/*\n * Triggers a resize only if the Canvas DOM element changed dimensions - not on window resize event\n *\n * This is to avoid costly re-renders when the URL bar is scrolled away on mobile\n *\n * Based on: https://usehooks.com/useWindowSize/\n */\n\nexport function useWindowSize({ debounce = 0 }: ConfigProps = {}) {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowSize>({\n    width: isBrowser ? window.innerWidth : Infinity,\n    height: isBrowser ? window.innerHeight : Infinity,\n  })\n\n  useEffect(() => {\n    // check if we can find a canvas - if so, base size on canvas instead of window\n    // since 100vh !== window.innerHeight on mobile\n    const canvasEl = document.getElementById('ScrollRig-canvas')\n\n    // Handler to call on window resize\n    function handleResize() {\n      const width = canvasEl ? canvasEl.clientWidth : window.innerWidth\n      const height = canvasEl ? canvasEl.clientHeight : window.innerHeight\n\n      if (width !== windowSize.width || height !== windowSize.height) {\n        // Set window width/height to state\n        setWindowSize({\n          width,\n          height,\n        })\n      }\n    }\n\n    const debouncedResize = pkg.debounce(handleResize, debounce)\n\n    // Add event listener\n    const ResizeObserver = window.ResizeObserver || Polyfill\n    let observer: ResizeObserver\n    if (canvasEl) {\n      observer = new ResizeObserver(debouncedResize)\n      observer.observe(canvasEl)\n    } else {\n      window.addEventListener('resize', debouncedResize)\n    }\n    // Call handler right away so state gets updated with initial window size\n    handleResize()\n    // Remove event listener on cleanup\n    return () => {\n      window.removeEventListener('resize', debouncedResize)\n      observer?.disconnect()\n    }\n  }, [windowSize, setWindowSize])\n\n  return windowSize\n}\n","// Linear mapping from range <a1, a2> to range <b1, b2>\nexport function mapLinear(x: number, a1: number, a2: number, b1: number, b2: number) {\n  return b1 + ((x - a1) * (b2 - b1)) / (a2 - a1)\n}\n","import { useCanvasStore } from '../store'\nimport { ScrollCallback } from './SmoothScrollbarTypes'\n\nexport interface Scroll {\n  y: number\n  x: number\n  limit: number\n  velocity: number\n  progress: number\n  direction: number\n  scrollDirection: string\n}\n\ninterface UseScrollbarProps {\n  enabled: boolean\n  scroll: Scroll\n  scrollTo: (target: any) => void\n  onScroll: (cb: ScrollCallback) => () => void\n}\n\n/**\n * Public interface for ScrollRig\n */\nexport const useScrollbar = () => {\n  const hasSmoothScrollbar = useCanvasStore((state) => state.hasSmoothScrollbar)\n  const scroll = useCanvasStore((state) => state.scroll)\n  const scrollTo = useCanvasStore((state) => state.scrollTo)\n  const onScroll = useCanvasStore((state) => state.onScroll)\n\n  return {\n    enabled: hasSmoothScrollbar,\n    scroll,\n    scrollTo,\n    onScroll,\n  } as UseScrollbarProps\n}\n","// https://www.typescriptlang.org/docs/handbook/modules.html#ambient-modules\n/// <reference path=\"../types/global.ts\" />\n\nimport { useRef, useCallback, useEffect, useMemo, useState, MutableRefObject } from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { useWindowSize } from './useWindowSize'\nimport vecn from 'vecn'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { mapLinear } from '../utils/math'\nimport { useCanvasStore } from '../store'\n\nimport { useScrollbar, Scroll } from '../scrollbar/useScrollbar'\n\nimport type { Rect, Bounds, TrackerOptions, Tracker, ScrollState, UpdateCallback } from './useTrackerTypes'\n\nfunction updateBounds(bounds: Bounds, rect: Rect, scroll: Scroll, size: any) {\n  bounds.top = rect.top - (scroll.y || 0)\n  bounds.bottom = rect.bottom - (scroll.y || 0)\n  bounds.left = rect.left - (scroll.x || 0)\n  bounds.right = rect.right - (scroll.x || 0)\n  bounds.width = rect.width\n  bounds.height = rect.height\n  // move coordinate system so 0,0 is at center of screen\n  bounds.x = bounds.left + rect.width * 0.5 - size.width * 0.5\n  bounds.y = bounds.top + rect.height * 0.5 - size.height * 0.5\n  bounds.positiveYUpBottom = size.height - bounds.bottom // inverse Y\n}\n\nfunction updatePosition(position: vec3, bounds: Bounds, scaleMultiplier: number) {\n  position.x = bounds.x * scaleMultiplier\n  position.y = -1 * bounds.y * scaleMultiplier\n}\n\n/**\n * Returns the current Scene position of the DOM element\n * based on initial getBoundingClientRect and scroll delta from start\n */\nfunction useTracker(track: MutableRefObject<HTMLElement>, options?: TrackerOptions): Tracker {\n  const size = useWindowSize()\n  const { scroll, onScroll } = useScrollbar()\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n  const debug = useCanvasStore((state) => state.debug)\n\n  // extend defaults with optional options\n  const { rootMargin, threshold, autoUpdate, wrapper } = useMemo(() => {\n    const target = { rootMargin: '0%', threshold: 0, autoUpdate: true } as TrackerOptions\n    const opts = options || {}\n    Object.keys(opts).map((key: string, index) => {\n      if (opts[key] !== undefined) target[key] = opts[key]\n    })\n    return target\n  }, [options])\n\n  // check if element is in viewport\n  const { ref, inView: inViewport } = useInView({ rootMargin, threshold })\n\n  // bind useInView ref to current tracking element\n  useLayoutEffect(() => {\n    ref(track.current)\n  }, [track, track?.current])\n\n  // Using state so it's reactive\n  const [scale, setScale] = useState<vec3>(vecn.vec3(0, 0, 0))\n\n  // Using ref because\n  const scrollState: ScrollState = useRef({\n    inViewport: false,\n    progress: -1,\n    visibility: -1,\n    viewport: -1,\n  }).current\n\n  // DOM rect (initial position in pixels offset by scroll value on page load)\n  // Using ref so we can calculate bounds & position without a re-render\n  const rect = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n  }).current\n\n  // expose internal ref as a reactive state as well\n  const [reactiveRect, setReactiveRect] = useState<Rect>(rect)\n\n  // bounding rect in pixels - updated by scroll\n  const bounds = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n    positiveYUpBottom: 0,\n  }).current\n\n  // position in viewport units - updated by scroll\n  const position = useRef(vecn.vec3(0, 0, 0)).current\n\n  // Calculate bounding Rect as soon as it's available\n  useLayoutEffect(() => {\n    const _rect = track.current?.getBoundingClientRect()\n    if (!_rect) return\n    const initialY = wrapper ? (wrapper as HTMLElement).scrollTop : window.scrollY\n    const initialX = wrapper ? (wrapper as HTMLElement).scrollLeft : window.scrollX\n    rect.top = _rect.top + initialY\n    rect.bottom = _rect.bottom + initialY\n    rect.left = _rect.left + initialX\n    rect.right = _rect.right + initialX\n    rect.width = _rect.width\n    rect.height = _rect.height\n    setReactiveRect({ ...rect })\n    setScale(vecn.vec3(rect?.width * scaleMultiplier, rect?.height * scaleMultiplier, 1))\n    debug &&\n      console.log(\n        'useTracker.getBoundingClientRect:',\n        rect,\n        'intialScroll:',\n        { initialY, initialX },\n        'size:',\n        size,\n        'pageReflow:',\n        pageReflow\n      )\n  }, [track, size, pageReflow, scaleMultiplier, debug])\n\n  const update = useCallback(\n    ({ onlyUpdateInViewport = false, scroll: overrideScroll }: UpdateCallback = {}) => {\n      if (!track.current || (onlyUpdateInViewport && !scrollState.inViewport)) {\n        return\n      }\n\n      const _scroll = overrideScroll || scroll\n\n      updateBounds(bounds, rect, _scroll, size)\n      updatePosition(position, bounds, scaleMultiplier)\n\n      // scrollState setup based on scroll direction\n      const isHorizontal = _scroll.scrollDirection === 'horizontal'\n      const sizeProp = isHorizontal ? 'width' : 'height'\n      const startProp = isHorizontal ? 'left' : 'top'\n\n      // calculate progress of passing through viewport (0 = just entered, 1 = just exited)\n      const pxInside = size[sizeProp] - bounds[startProp]\n      scrollState.progress = mapLinear(pxInside, 0, size[sizeProp] + bounds[sizeProp], 0, 1) // percent of total visible distance\n      scrollState.visibility = mapLinear(pxInside, 0, bounds[sizeProp], 0, 1) // percent of item height in view\n      scrollState.viewport = mapLinear(pxInside, 0, size[sizeProp], 0, 1) // percent of window height scrolled since visible\n    },\n    [track, size, scaleMultiplier, scroll]\n  )\n\n  // update scrollState in viewport\n  useLayoutEffect(() => {\n    scrollState.inViewport = inViewport\n    // update once more in case it went out of view\n    update({ onlyUpdateInViewport: false })\n    debug && console.log('useTracker.inViewport:', inViewport, 'update()')\n  }, [inViewport])\n\n  // re-run if the callback updated\n  useLayoutEffect(() => {\n    update({ onlyUpdateInViewport: false })\n    debug && console.log('useTracker.update on resize/reflow')\n  }, [update, pageReflow])\n\n  // auto-update on scroll\n  useEffect(() => {\n    if (autoUpdate) return onScroll((_scroll) => update({ onlyUpdateInViewport: true }))\n  }, [autoUpdate, update, onScroll])\n\n  return {\n    rect: reactiveRect, // Dom rect - doesn't change on scroll - not - reactive\n    bounds, // scrolled bounding rect in pixels - not reactive\n    scale, // reactive scene scale - includes z-axis so it can be spread onto mesh directly\n    position, // scrolled element position in viewport units - not reactive\n    scrollState, // scroll progress stats - not reactive\n    inViewport, // reactive prop for when inside viewport\n    update, // optional manual update\n  }\n}\n\nexport { useTracker }\n","import React, { useState, useCallback, MutableRefObject, ReactNode } from 'react'\nimport { Scene } from 'three'\nimport { useFrame, createPortal } from '@react-three/fiber'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { config } from '../config'\nimport { useCanvasStore } from '../store'\nimport { useScrollRig } from '../hooks/useScrollRig'\nimport { DebugMesh } from './DebugMesh'\nimport { useTracker } from '../hooks/useTracker'\nimport type { ScrollState } from '../hooks/useTrackerTypes'\n\nexport interface ScrollSceneChildProps {\n  track: MutableRefObject<HTMLElement>\n  margin: number\n  priority: number\n  scale: vec3 | undefined\n  scrollState: ScrollState\n  inViewport: boolean\n}\n\ninterface IScrollScene {\n  track: MutableRefObject<HTMLElement>\n  children: (state: ScrollSceneChildProps) => ReactNode\n  margin?: number\n  inViewportMargin?: string\n  inViewportThreshold?: number\n  visible?: boolean\n  hideOffscreen?: boolean\n  scissor?: boolean\n  debug?: boolean\n  as?: string\n  priority?: number\n}\n\n/**\n * Generic THREE.js Scene that tracks the dimensions and position of a DOM element while scrolling\n * Scene is positioned and scaled exactly above DOM element\n *\n * @author david@14islands.com\n */\nfunction ScrollScene({\n  track,\n  children,\n  margin = 0, // Margin outside scissor to avoid clipping vertex displacement (px)\n  inViewportMargin,\n  inViewportThreshold,\n  visible = true,\n  hideOffscreen = true,\n  scissor = false,\n  debug = false,\n  as = 'scene',\n  priority = config.PRIORITY_SCISSORS,\n  ...props\n}: IScrollScene) {\n  const inlineSceneRef = useCallback((node: any) => {\n    if (node !== null) {\n      setScene(node)\n    }\n  }, [])\n\n  const [scene, setScene] = useState<Scene | null>(scissor ? new Scene() : null)\n  const { requestRender, renderScissor } = useScrollRig()\n  const globalRender = useCanvasStore((state) => state.globalRender)\n\n  const { bounds, scale, position, scrollState, inViewport } = useTracker(track, {\n    rootMargin: inViewportMargin,\n    threshold: inViewportThreshold,\n  })\n\n  // Hide scene when outside of viewport if `hideOffscreen` or set to `visible` prop\n  useLayoutEffect(() => {\n    if (scene) scene.visible = hideOffscreen ? inViewport && visible : visible\n  }, [scene, inViewport, hideOffscreen, visible])\n\n  // RENDER FRAME\n  useFrame(\n    ({ gl, camera }) => {\n      if (!scene) return\n\n      if (scene.visible) {\n        // move scene\n        scene.position.y = position.y\n        scene.position.x = position.x\n\n        if (scissor) {\n          renderScissor({\n            gl,\n            scene,\n            camera,\n            left: bounds.left - margin,\n            top: bounds.positiveYUpBottom - margin,\n            width: bounds.width + margin * 2,\n            height: bounds.height + margin * 2,\n          })\n        } else {\n          requestRender()\n        }\n      }\n    },\n    globalRender ? priority : undefined\n  )\n\n  const content = (\n    <>\n      {(!children || debug) && scale && <DebugMesh scale={scale} />}\n      {children &&\n        scene &&\n        scale &&\n        children({\n          // inherited props\n          track,\n          margin,\n          // new props\n          scale,\n          scrollState,\n          inViewport,\n          // useFrame render priority (in case children need to run after)\n          priority: priority,\n          // tunnel the rest\n          ...props,\n        })}\n    </>\n  )\n\n  // portal if scissor or inline nested scene\n  const InlineElement: any = as\n  // @ts-ignore\n  return scissor && scene ? createPortal(content, scene) : <InlineElement ref={inlineSceneRef}>{content}</InlineElement>\n}\n\nexport { ScrollScene }\n","import React, { useEffect, useState, useCallback, MutableRefObject, ReactNode } from 'react'\nimport { Scene } from 'three'\nimport { useFrame, createPortal, useThree } from '@react-three/fiber'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { config } from '../config'\nimport { useScrollRig } from '../hooks/useScrollRig'\nimport { DebugMesh } from './DebugMesh'\nimport { useTracker } from '../hooks/useTracker'\nimport type { Tracker } from '../hooks/useTrackerTypes'\nimport { PerspectiveCamera } from './PerspectiveCamera'\nimport { OrthographicCamera } from './OrthographicCamera'\n\nimport type { ScrollSceneChildProps } from './ScrollScene'\n\ninterface IViewportScrollScene {\n  track: MutableRefObject<HTMLElement>\n  children: (state: ScrollSceneChildProps) => ReactNode\n  margin?: number\n  inViewportMargin?: string\n  inViewportThreshold?: number\n  visible?: boolean\n  hideOffscreen?: boolean\n  debug?: boolean\n  orthographic?: boolean\n  priority?: number\n  hud?: boolean // clear depth to render on top\n  camera?: any\n}\n\n/**\n * Generic THREE.js Scene that tracks the dimensions and position of a DOM element while scrolling\n * Scene is rendered into a GL viewport matching the DOM position for better performance\n *\n * Adapted to @react-three/fiber from https://threejsfundamentals.org/threejs/lessons/threejs-multiple-scenes.html\n * @author david@14islands.com\n */\nconst Viewport = ({\n  track,\n  children,\n  margin = 0, // Margin outside viewport to avoid clipping vertex displacement (px)\n  visible = true,\n  hideOffscreen = true,\n  debug = false,\n  orthographic = false,\n  priority = config.PRIORITY_VIEWPORTS,\n  inViewport,\n  bounds,\n  scale,\n  scrollState,\n  camera,\n  hud,\n  ...props\n}: IViewportScrollScene & Tracker) => {\n  const scene = useThree((s) => s.scene)\n  const get = useThree((state) => state.get)\n  const setEvents = useThree((state) => state.setEvents)\n\n  const { renderViewport } = useScrollRig()\n\n  // Hide scene when outside of viewport if `hideOffscreen` or set to `visible` prop\n  useLayoutEffect(() => {\n    scene.visible = hideOffscreen ? inViewport && visible : visible\n  }, [inViewport, hideOffscreen, visible])\n\n  // From: https://github.com/pmndrs/drei/blob/d22fe0f58fd596c7bfb60a7a543cf6c80da87624/src/web/View.tsx#L80\n  useEffect(() => {\n    // Connect the event layer to the tracking element\n    const old = get().events.connected\n    setEvents({ connected: track.current })\n    return () => setEvents({ connected: old })\n  }, [])\n\n  // RENDER FRAME\n  useFrame(({ gl, scene, camera }) => {\n    // Render scene to viewport using local camera and limit updates using scissor test\n    if (scene.visible) {\n      renderViewport({\n        gl,\n        scene,\n        camera,\n        left: bounds.left - margin,\n        top: bounds.positiveYUpBottom - margin,\n        width: bounds.width + margin * 2,\n        height: bounds.height + margin * 2,\n        clearDepth: !!hud,\n      })\n    }\n  }, priority)\n\n  return (\n    <>\n      {!orthographic && <PerspectiveCamera manual margin={margin} makeDefault {...camera} />}\n      {orthographic && <OrthographicCamera manual margin={margin} makeDefault {...camera} />}\n      {(!children || debug) && scale && <DebugMesh scale={scale} />}\n      {children &&\n        // scene &&\n        scale &&\n        children({\n          // inherited props\n          track,\n          margin,\n          // new props\n          scale,\n          scrollState,\n          inViewport,\n          // useFrame render priority (in case children need to run after)\n          priority,\n          // tunnel the rest\n          ...props,\n        })}\n    </>\n  )\n}\n\nfunction ViewportScrollScene({\n  track,\n  margin = 0, // Margin outside viewport to avoid clipping vertex displacement (px)\n  inViewportMargin,\n  inViewportThreshold,\n  priority,\n  ...props\n}: IViewportScrollScene) {\n  const [scene] = useState(() => new Scene())\n\n  const { bounds, ...trackerProps } = useTracker(track, {\n    rootMargin: inViewportMargin,\n    threshold: inViewportThreshold,\n  })\n\n  // From: https://github.com/pmndrs/drei/blob/d22fe0f58fd596c7bfb60a7a543cf6c80da87624/src/web/View.tsx#L80\n  const compute = useCallback(\n    (event: any, state: any) => {\n      // limit events to DOM element bounds\n      if (track.current && event.target === track.current) {\n        const { width, height, left, top } = bounds\n        const mWidth = width + margin * 2\n        const mHeight = height + margin * 2\n        const x = event.clientX - left + margin\n        const y = event.clientY - top + margin\n        state.pointer.set((x / mWidth) * 2 - 1, -(y / mHeight) * 2 + 1)\n        state.raycaster.setFromCamera(state.pointer, state.camera)\n      }\n    },\n    [bounds]\n  )\n\n  return (\n    bounds &&\n    createPortal(\n      <Viewport track={track} bounds={bounds} priority={priority} margin={margin} {...props} {...trackerProps} />,\n      scene,\n      // @ts-ignore\n      { events: { compute, priority }, size: { width: bounds.width, height: bounds.height } }\n    )\n  )\n}\n\nexport { ViewportScrollScene }\n","import { useEffect, useMemo, useCallback, ReactNode } from 'react'\nimport { MathUtils } from 'three'\n\nimport { useCanvasStore } from '../store'\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\n\nimport { ScrollRigState } from '../hooks/useScrollRig'\n/**\n * Adds THREE.js object to the GlobalCanvas while the component is mounted\n * @param {object} object THREE.js object3d\n */\nfunction useCanvas(\n  object: ReactNode | ((props: ScrollRigState) => ReactNode),\n  props: any = {},\n  { key, dispose = true }: { key?: string; dispose?: boolean } = {}\n) {\n  const updateCanvas = useCanvasStore((state) => state.updateCanvas)\n  const renderToCanvas = useCanvasStore((state) => state.renderToCanvas)\n  const removeFromCanvas = useCanvasStore((state) => state.removeFromCanvas)\n\n  // auto generate uuid v4 key\n  const uniqueKey = useMemo(() => key || MathUtils.generateUUID(), [])\n\n  // render to canvas if not mounted already\n  useLayoutEffect(() => {\n    renderToCanvas(uniqueKey, object, { ...props, inactive: false })\n  }, [uniqueKey])\n\n  // remove from canvas if no usage (after render so new users have time to register)\n  useEffect(() => {\n    return () => {\n      removeFromCanvas(uniqueKey, dispose)\n    }\n  }, [uniqueKey])\n\n  // return function that can set new props on the canvas component\n  const set = useCallback(\n    (props: any) => {\n      updateCanvas(uniqueKey, props)\n    },\n    [updateCanvas, uniqueKey]\n  )\n\n  // auto update props when they change\n  useEffect(() => {\n    set(props)\n  }, [...Object.values(props)])\n\n  return set\n}\n\nexport { useCanvas }\n","import { forwardRef, ReactNode } from 'react'\nimport { useCanvas } from '../hooks/useCanvas'\n\nimport { ScrollRigState } from '../hooks/useScrollRig'\n\ninterface IUseCanvas {\n  children: ReactNode | ((props: ScrollRigState) => ReactNode)\n  id?: string // persistent layout id\n  dispose?: boolean // dispose on unmount\n  [key: string]: any // Any props to reactively tunnel to the child\n}\n\nconst UseCanvas = forwardRef(({ children, id, dispose = true, ...props }: IUseCanvas, ref) => {\n  if (!children) return null\n  // auto update canvas with all props\n  useCanvas(children, { ...props, ref }, { key: id, dispose })\n  return null\n})\n\nexport { UseCanvas }\n","import { useEffect, RefObject, useMemo, useState } from 'react'\nimport { useThree, useLoader } from '@react-three/fiber'\nimport { Texture, CanvasTexture, ImageBitmapLoader, TextureLoader, DefaultLoadingManager } from 'three'\nimport { suspend } from 'suspend-react'\nimport supportsWebP from 'supports-webp'\nimport equal from 'fast-deep-equal'\n\nimport { useWindowSize } from './useWindowSize'\nimport { useCanvasStore } from '../store'\n\n/**\n *  Create Threejs Texture from DOM image tag\n *\n *  - Supports <picture> and `srcset` - uses `currentSrc` to get the responsive image source\n *\n *  - Supports lazy-loading image - suspends until first load event. Warning: the GPU upload can cause jank\n *\n *  - Relies on browser cache to avoid loading image twice. We let the <img> tag load the image and suspend until it's ready.\n *\n *  - NOTE: You must add the `crossOrigin` attribute\n *     <img src=\"\" alt=\"\" crossOrigin=\"anonymous\"/>\n */\n\nlet hasWebpSupport: boolean = false\n// this test is fast - \"should\" run before first image is requested\nsupportsWebP.then((supported) => {\n  hasWebpSupport = supported\n})\n\nfunction useTextureLoader() {\n  // Use an ImageBitmapLoader if imageBitmaps are supported. Moves much of the\n  // expensive work of uploading a texture to the GPU off the main thread.\n  // Copied from: github.com/mrdoob/three.js/blob/master/examples/jsm/loaders/GLTFLoader.js#L2424\n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent) === true\n  const isFirefox = navigator.userAgent.indexOf('Firefox') > -1\n  // @ts-ignore\n  const firefoxVersion = isFirefox ? navigator.userAgent.match(/Firefox\\/([0-9]+)\\./)[1] : -1\n  return typeof createImageBitmap === 'undefined' || isSafari || (isFirefox && Number(firefoxVersion) < 98)\n}\n\nfunction useImageAsTexture(\n  imgRef: RefObject<HTMLImageElement>,\n  { initTexture = true, premultiplyAlpha = 'default' } = {}\n) {\n  const gl = useThree((s) => s.gl)\n  const size = useWindowSize()\n  const debug = useCanvasStore((state) => state.debug)\n\n  // This is a workaround for detecting lazy loading images\n  // unfortunately the `loadstart` event is not working everywhere: https://bugs.chromium.org/p/chromium/issues/detail?id=458851\n  // So we can't suspend while lazy images are loading - only detect when they finished\n  const [newSrcDetected, setNewSrcDetected] = useState(imgRef.current?.currentSrc)\n  useEffect(() => {\n    const el = imgRef.current\n    const onLoad = () => {\n      setNewSrcDetected(imgRef.current?.currentSrc)\n    }\n    el?.addEventListener('load', onLoad)\n    return () => el?.removeEventListener('load', onLoad)\n  }, [imgRef, newSrcDetected, setNewSrcDetected])\n\n  // suspend until we have currentSrc for this `size`\n  const currentSrc = suspend(\n    () => {\n      DefaultLoadingManager.itemStart('waiting for DOM image')\n      return new Promise((resolve) => {\n        const el = imgRef.current\n\n        function returnResolve() {\n          resolve(el?.currentSrc)\n          DefaultLoadingManager.itemEnd('waiting for DOM image')\n        }\n\n        // respond to future load event if not cached\n        el?.addEventListener('load', returnResolve, { once: true })\n\n        // detect if loaded from browser cache\n        if (el?.complete) {\n          el?.removeEventListener('load', returnResolve)\n          returnResolve()\n        }\n      })\n    },\n    [imgRef, size, imgRef.current?.currentSrc, newSrcDetected],\n    { equal } // use deep-equal since size ref seems to update on route change\n  ) as string\n\n  const LoaderProto = useTextureLoader() ? TextureLoader : ImageBitmapLoader\n\n  // @ts-ignore\n  const result: any = useLoader(LoaderProto, currentSrc, (loader) => {\n    if (loader instanceof ImageBitmapLoader) {\n      loader.setOptions({\n        colorSpaceConversion: 'none',\n        premultiplyAlpha, // \"none\" increases blocking time in lighthouse\n        imageOrientation: 'flipY',\n      })\n      // Add webp to Accept header if supported\n      // TODO: add check for AVIF\n      loader.setRequestHeader({\n        Accept: `${hasWebpSupport ? 'image/webp,' : ''}*/*`,\n      })\n    }\n  })\n\n  const texture = useMemo(() => {\n    if (result instanceof Texture) {\n      return result\n    }\n    if (result instanceof ImageBitmap) {\n      return new CanvasTexture(result)\n    }\n  }, [result]) as Texture\n\n  // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n  useEffect(\n    function uploadTextureToGPU() {\n      initTexture && gl.initTexture(texture)\n      debug && console.log('useImageAsTexture', 'initTexture()')\n    },\n    [gl, texture, initTexture]\n  )\n\n  return texture\n}\n\nexport { useImageAsTexture }\n","import { useEffect, useRef, useCallback, ReactElement, forwardRef, useImperativeHandle } from 'react'\nimport Lenis from '@studio-freight/lenis'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { useCanvasStore } from '../store'\nimport { ISmoothScrollbar, ScrollCallback, ScrollToTarget, ScrollToConfig } from './SmoothScrollbarTypes'\n\nconst POINTER_EVENTS_ENABLE_VELOCITY = 1\nconst POINTER_EVENTS_DISABLE_VELOCITY = 1.5\n\nconst SmoothScrollbarImpl = (\n  {\n    children,\n    enabled = true,\n    locked = false,\n    scrollRestoration = 'auto',\n    disablePointerOnScroll = true,\n    horizontal = false,\n    scrollInContainer = false,\n    updateGlobalState = true,\n    onScroll,\n    config = {},\n    invalidate = () => {},\n    addEffect,\n  }: ISmoothScrollbar,\n  ref: any\n) => {\n  const innerRef = useRef<HTMLElement>()\n  const lenis = useRef<Lenis>()\n  const preventPointer = useRef(false)\n  const globalScrollState = useCanvasStore((s) => s.scroll)\n\n  // Expose lenis imperative API\n  useImperativeHandle(ref, () => ({\n    start: () => lenis.current?.start(),\n    stop: () => lenis.current?.stop(),\n    on: (event: string, cb: ScrollCallback) => lenis.current?.on(event, cb),\n    notify: () => lenis.current?.emit(), // backwards compatible\n    emit: () => lenis.current?.emit(),\n    scrollTo: (target: ScrollToTarget, props: ScrollToConfig) => lenis.current?.scrollTo(target, props),\n    raf: (time: number) => lenis.current?.raf(time),\n    __lenis: lenis.current,\n  }))\n\n  // disable pointer events while scrolling to avoid slow event handlers\n  const preventPointerEvents = useCallback(\n    (prevent: boolean) => {\n      if (!disablePointerOnScroll) return\n      if (innerRef.current && preventPointer.current !== prevent) {\n        preventPointer.current = prevent\n        innerRef.current.style.pointerEvents = prevent ? 'none' : 'auto'\n      }\n    },\n    [disablePointerOnScroll, innerRef, preventPointer]\n  )\n\n  // apply chosen scroll restoration\n  useLayoutEffect(() => {\n    if ('scrollRestoration' in window.history) {\n      window.history.scrollRestoration = scrollRestoration\n    }\n  }, [])\n\n  // INIT LENIS\n  useLayoutEffect(() => {\n    // Set up scroll containers - allows scrolling without resizing window on iOS/mobile\n    const html = document.documentElement\n    const wrapper = document.body\n    const content = document.body.firstElementChild\n\n    html.classList.toggle('ScrollRig-scrollHtml', scrollInContainer)\n    wrapper.classList.toggle('ScrollRig-scrollWrapper', scrollInContainer)\n\n    if (scrollInContainer) {\n      Object.assign(config, {\n        smoothTouch: true,\n        wrapper,\n        content,\n      })\n    }\n\n    lenis.current = new Lenis({\n      orientation: horizontal ? 'horizontal' : 'vertical',\n      ...config,\n    })\n\n    // let r3f drive the frameloop\n    let removeEffect: () => void\n    if (addEffect) {\n      removeEffect = addEffect((time: number) => lenis.current?.raf(time))\n    } else {\n      // manual animation frame\n      // TODO use framer motion / popmotion render loop?\n      let _raf: number\n      function raf(time: number) {\n        lenis.current?.raf(time)\n        _raf = requestAnimationFrame(raf)\n      }\n      _raf = requestAnimationFrame(raf)\n      removeEffect = () => cancelAnimationFrame(_raf)\n    }\n\n    return () => {\n      removeEffect()\n      lenis.current?.destroy()\n    }\n  }, [])\n\n  // BIND TO LENIS SCROLL EVENT\n  useLayoutEffect(() => {\n    const _onScroll = ({ scroll, limit, velocity, direction, progress }: any) => {\n      const y = !horizontal ? scroll : 0\n      const x = horizontal ? scroll : 0\n\n      // update global scroll store\n      if (updateGlobalState) {\n        globalScrollState.y = y\n        globalScrollState.x = x\n        globalScrollState.limit = limit\n        globalScrollState.velocity = velocity\n        globalScrollState.direction = direction\n        globalScrollState.progress = progress || 0 // avoid NaN from Lenis\n      }\n\n      if (Math.abs(velocity) > POINTER_EVENTS_DISABLE_VELOCITY) {\n        preventPointerEvents(true)\n      }\n      if (Math.abs(velocity) < POINTER_EVENTS_ENABLE_VELOCITY) {\n        preventPointerEvents(false)\n      }\n\n      onScroll && onScroll({ scroll, limit, velocity, direction, progress })\n\n      invalidate() // demand a R3F frame on scroll\n    }\n\n    lenis.current?.on('scroll', _onScroll)\n\n    // update global state\n    if (updateGlobalState) {\n      globalScrollState.scrollDirection = horizontal ? 'horizontal' : 'vertical'\n\n      // expose global scrollTo and onScroll function to subscribe to scroll events\n      useCanvasStore.setState({\n        scrollTo: (...args) => {\n          lenis.current?.scrollTo(...args)\n        },\n        onScroll: (cb: ScrollCallback) => {\n          lenis.current?.on('scroll', cb)\n          lenis.current?.emit() // send current scroll to new subscriber\n          return () => lenis.current?.off('scroll', cb)\n        },\n      })\n\n      // Set current scroll position on load in case reloaded further down\n      useCanvasStore.getState().scroll.y = window.scrollY\n      useCanvasStore.getState().scroll.x = window.scrollX\n    }\n\n    // fire our internal scroll callback to update globalState\n    lenis.current?.emit()\n    return () => {\n      lenis.current?.off('scroll', _onScroll)\n      // reset global store\n      if (updateGlobalState)\n        useCanvasStore.setState({\n          onScroll: () => () => {},\n          scrollTo: () => {},\n        })\n    }\n  }, [])\n\n  // Interaction events - invalidate R3F loop and enable pointer events\n  useLayoutEffect(() => {\n    const invalidateOnWheelEvent = () => invalidate()\n    const onPointerInteraction = () => preventPointerEvents(false)\n    window.addEventListener('pointermove', onPointerInteraction)\n    window.addEventListener('pointerdown', onPointerInteraction)\n    window.addEventListener('wheel', invalidateOnWheelEvent)\n    return () => {\n      window.removeEventListener('pointermove', onPointerInteraction)\n      window.removeEventListener('pointerdown', onPointerInteraction)\n      window.removeEventListener('wheel', invalidateOnWheelEvent)\n    }\n  }, [])\n\n  // Mark as enabled in global state\n  useEffect(() => {\n    if (updateGlobalState) {\n      document.documentElement.classList.toggle('js-smooth-scrollbar-enabled', enabled)\n      document.documentElement.classList.toggle('js-smooth-scrollbar-disabled', !enabled)\n      useCanvasStore.setState({ hasSmoothScrollbar: enabled })\n    }\n  }, [enabled])\n\n  useEffect(() => {\n    locked ? lenis.current?.stop() : lenis.current?.start()\n  }, [locked])\n\n  {\n    /* Use function child so we can spread props\n    - for instance disable pointer events while scrolling */\n  }\n  return children({ ref: innerRef })\n}\n\nexport const SmoothScrollbar = forwardRef<any, ISmoothScrollbar>(SmoothScrollbarImpl)\n","import React, { forwardRef } from 'react'\nimport { SmoothScrollbar } from '../scrollbar/SmoothScrollbar'\nimport { ISmoothScrollbar } from '../scrollbar/SmoothScrollbarTypes'\nimport { addEffect, invalidate } from '@react-three/fiber'\n\nfunction R3FSmoothScrollbar(props: ISmoothScrollbar, ref: any) {\n  return <SmoothScrollbar ref={ref} invalidate={invalidate} addEffect={addEffect} {...props} />\n}\n\nexport default forwardRef<any, ISmoothScrollbar>(R3FSmoothScrollbar)\n","import './styles/index.css'\n\n// Components\nexport { GlobalCanvas } from './components/GlobalCanvas'\nexport { ScrollScene } from './components/ScrollScene'\nexport { ViewportScrollScene } from './components/ViewportScrollScene'\nexport { UseCanvas } from './components/UseCanvas'\n\n// Hooks\nexport { useScrollRig } from './hooks/useScrollRig'\nexport { useCanvas } from './hooks/useCanvas'\nexport { useScrollbar } from './scrollbar/useScrollbar'\nexport { useTracker } from './hooks/useTracker'\n\n// Utils hooks\nexport { useImageAsTexture } from './hooks/useImageAsTexture'\n\n// Scrollbar\nexport { default as SmoothScrollbar } from './components/R3FSmoothScrollbar'\n\n// CSS class names for hiding stuff\n// Matching css styles can be imported from @14islands/r3f-scrollr-rig/css\nexport const styles = {\n  hidden: 'ScrollRig-visibilityHidden',\n  hiddenWhenSmooth: 'ScrollRig-visibilityHidden ScrollRig-hiddenIfSmooth',\n  transparentColor: 'ScrollRig-transparentColor',\n  transparentColorWhenSmooth: 'ScrollRig-transparentColor ScrollRig-hiddenIfSmooth',\n}\n\n// Private-ish\n// ----------------------------------\nexport { useCanvasStore } from './store'\n\n// Types\nexport type { ScrollState } from './hooks/useTrackerTypes'\n"],"names":["useLayoutEffect","window","vanillaUseLayoutEffect","useEffect","config","PRIORITY_PRELOAD","PRIORITY_SCISSORS","PRIORITY_VIEWPORTS","PRIORITY_GLOBAL","DEFAULT_SCALE_MULTIPLIER","preloadQueue","useCanvasStore","create","set","debug","scaleMultiplier","globalRender","globalPriority","globalClearDepth","globalRenderQueue","clearGlobalRenderQueue","isCanvasAvailable","hasSmoothScrollbar","canvasChildren","renderToCanvas","key","mesh","props","_ref","_extends2","Object","getOwnPropertyDescriptor","instances","inactive","_extends","updateCanvas","newProps","_ref2","_extends3","_canvasChildren$key","removeFromCanvas","dispose","_ref3","_canvasChildren$key2","_objectWithoutPropertiesLoose","map","_toPropertyKey","pageReflow","requestReflow","state","scroll","y","x","limit","velocity","progress","direction","scrollDirection","undefined","scrollTo","onScroll","ResizeManager","observer","ResizeObserver","Polyfill","console","log","observe","document","body","disconnect","_excluded","PerspectiveCamera","forwardRef","ref","_ref$makeDefault","makeDefault","_ref$margin","margin","useThree","camera","size","viewport","cameraRef","useRef","useImperativeHandle","current","_useMemo","useMemo","_props$position","height","aspect","width","fov","distance","position","Math","PI","atan","tan","lookAt","updateProjectionMatrix","updateMatrixWorld","getCurrentViewport","oldCam","React","onUpdate","self","near","far","OrthographicCamera","max","left","right","top","bottom","setAllCulled","obj","overrideCulled","wasFrustumCulled","frustumCulled","wasVisible","visible","children","forEach","child","polyfill","viewportSize","Vector2","requestRender","layers","getState","concat","renderScissor","gl","scene","_ref$layer","layer","_ref$autoClear","autoClear","_ref$clearDepth","clearDepth","setScissor","setScissorTest","render","renderViewport","_ref2$layer","_ref2$scissor","scissor","_ref2$autoClear","_ref2$clearDepth","getSize","setViewport","preloadScene","callback","push","globalScene","globalCamera","invalidate","useScrollRig","_scrollRig","reflow","reflowCompleted","GlobalChildren","s","scrollRig","keys","length","clear","createElement","Fragment","cloneElement","GlobalRenderer","frameloop","checkShaderErrors","useFrame","disableAll","enable","CanvasErrorBoundary","_Component","_this","call","this","error","getDerivedStateFromError","prototype","onError","Component","_excluded2","GlobalCanvasImpl","_ref$as","as","Canvas","style","orthographic","_ref$scaleMultiplier","_ref$globalRender","_ref$globalPriority","_ref$globalClearDepth","useGlobalRenderer","__r3f_scroll_rig","version","qs","parse","location","search","setState","info","id","manual","failIfMajorPerformanceCaveat","resize","debounce","GlobalCanvas","documentElement","classList","add","err","remove","DebugMesh","scale","args","uniforms","color","value","Color","vertexShader","fragmentShader","transparent","isBrowser","useWindowSize","_temp","_ref$debounce","_useState","useState","innerWidth","Infinity","innerHeight","windowSize","setWindowSize","canvasEl","getElementById","handleResize","clientWidth","clientHeight","debouncedResize","pkg","addEventListener","_observer","removeEventListener","mapLinear","a1","a2","b1","b2","useScrollbar","enabled","useTracker","track","options","_useScrollbar","target","rootMargin","threshold","autoUpdate","opts","index","wrapper","_useInView","useInView","inViewport","inView","vecn","vec3","setScale","scrollState","visibility","rect","_useState2","reactiveRect","setReactiveRect","bounds","positiveYUpBottom","_track$current","_rect","getBoundingClientRect","initialY","scrollTop","scrollY","initialX","scrollLeft","scrollX","update","useCallback","_ref$onlyUpdateInView","onlyUpdateInViewport","_scroll","updateBounds","updatePosition","isHorizontal","sizeProp","pxInside","ScrollScene","inViewportMargin","inViewportThreshold","_ref$visible","_ref$hideOffscreen","hideOffscreen","_ref$scissor","_ref$debug","_ref$priority","priority","inlineSceneRef","node","setScene","Scene","_useScrollRig","_useTracker","content","InlineElement","createPortal","Viewport","_ref$orthographic","hud","get","setEvents","old","events","connected","ViewportScrollScene","_ref3$margin","trackerProps","_excluded3","compute","event","pointer","clientX","clientY","raycaster","setFromCamera","useCanvas","object","_ref$dispose","uniqueKey","MathUtils","generateUUID","values","UseCanvas","hasWebpSupport","useImageAsTexture","imgRef","_imgRef$current","_imgRef$current3","_ref$initTexture","initTexture","_ref$premultiplyAlpha","premultiplyAlpha","currentSrc","newSrcDetected","setNewSrcDetected","el","onLoad","_imgRef$current2","isSafari","isFirefox","firefoxVersion","suspend","DefaultLoadingManager","itemStart","Promise","resolve","returnResolve","itemEnd","once","complete","equal","LoaderProto","test","navigator","userAgent","indexOf","match","createImageBitmap","Number","TextureLoader","ImageBitmapLoader","result","useLoader","loader","setOptions","colorSpaceConversion","imageOrientation","setRequestHeader","Accept","texture","Texture","ImageBitmap","CanvasTexture","supportsWebP","then","supported","SmoothScrollbar","_ref$enabled","_ref$locked","locked","_ref$scrollRestoratio","scrollRestoration","_ref$disablePointerOn","disablePointerOnScroll","_ref$horizontal","horizontal","_ref$scrollInContaine","scrollInContainer","_ref$updateGlobalStat","updateGlobalState","_ref$config","_ref$invalidate","addEffect","innerRef","lenis","preventPointer","globalScrollState","start","_lenis$current","stop","_lenis$current2","on","cb","_lenis$current3","notify","_lenis$current4","emit","_lenis$current5","_lenis$current6","raf","time","_lenis$current7","__lenis","preventPointerEvents","prevent","pointerEvents","history","removeEffect","_raf","html","firstElementChild","toggle","assign","smoothTouch","Lenis","orientation","_lenis$current8","requestAnimationFrame","_lenis$current9","cancelAnimationFrame","_lenis$current10","destroy","_lenis$current11","_lenis$current16","_onScroll","abs","_lenis$current12","apply","slice","arguments","_lenis$current13","_lenis$current14","_lenis$current15","off","_lenis$current17","invalidateOnWheelEvent","onPointerInteraction","_lenis$current18","_lenis$current19","styles","hidden","hiddenWhenSmooth","transparentColor","transparentColorWhenSmooth"],"mappings":"2mDAEa,IAEAA,EAF8B,oBAAXC,OAEWC,EAAyBC,ECCvDC,EAAS,CAEpBC,iBAAkB,EAClBC,kBAAmB,EACnBC,mBAAoB,EACpBC,gBAAiB,IAEjBC,yBAA0B,EAG1BC,aAAc,ICmBVC,EAAiBC,EAAuB,SAACC,GAAS,MAAA,CAItDC,OAAO,EACPC,gBAAiBX,EAAOK,yBAExBO,cAAc,EACdC,eAAgBb,EAAOI,gBACvBU,kBAAkB,EAElBC,mBAAmB,EACnBC,uBAAwB,WAAM,OAAAP,EAAI,WAAO,MAAA,CAAEM,mBAAmB,EAAO,EAAE,EAGvEE,mBAAmB,EAGnBC,oBAAoB,EAGpBC,eAAgB,CAAE,EAGlBC,eAAgB,SAACC,EAAKC,EAAMC,GAC1B,YAD+B,IAALA,IAAAA,EAAQ,CAAA,GAClCd,EAAI,SAAAe,GAAuB,IAOlBC,EAPFN,EAAcK,EAAdL,eAEL,OAAIO,OAAOC,yBAAyBR,EAAgBE,IAElDF,EAAeE,GAAKO,WAAa,EACjCT,EAAeE,GAAKE,MAAMM,UAAW,EAC9B,CAAEV,eAAAA,IAIF,CAAEA,eADAW,EAAQX,CAAAA,EAAAA,IAAcM,EAAAA,IAAGJ,GAAM,CAAEC,KAAAA,EAAMC,MAAAA,EAAOK,UAAW,GAAGH,IAGzE,EAAE,EAGJM,aAAc,SAACV,EAAKW,GAAQ,OAE1BvB,EAAI,SAAAwB,GAAuBC,IAAAA,EAApBf,EAAcc,EAAdd,eACL,GAAKA,EAAeE,GAApB,CACA,IAAAc,EAEIhB,EADDE,GAAqBO,EAASO,EAATP,UAOxB,MAAO,CAAET,eALAW,EACJX,CAAAA,EAAAA,IAAce,EAAAA,CAAAA,GAChBb,GAAM,CAAEC,KAJIa,EAAJb,KAIMC,MAAKO,EAAA,CAAA,EAJAK,EAALZ,MAIsBS,GAAYJ,UAAAA,GAAWM,IAL9D,CASF,EAAE,EAGJE,iBAAkB,SAACf,EAAKgB,GAAc,YAAP,IAAPA,IAAAA,GAAU,GAChC5B,EAAI,SAAA6B,GAAuBC,IAAAA,EAApBpB,EAAcmB,EAAdnB,eAEL,OAAIoB,OAAAA,EAAApB,EAAeE,SAAfkB,EAAAA,EAAqBX,WAAY,GAEnCT,EAAeE,GAAKO,WAAa,EAC1B,CAAET,eAAAA,IAELkB,EAGK,CAAElB,eADmBqB,EAAKrB,EAAc,CAAtCE,GAAGoB,IAAAC,MAIZvB,EAAeE,GAAKO,UAAY,EAChCT,EAAeE,GAAKE,MAAMM,UAAW,EAC9B,CAAEV,eAAcW,EAAOX,CAAAA,EAAAA,IAGpC,EAAE,EAGJwB,WAAY,EACZC,cAAe,WACbnC,EAAI,SAACoC,GACH,MAAO,CAAEF,WAAYE,EAAMF,WAAa,EAC1C,EACF,EAGAG,OAAQ,CACNC,EAAG,EACHC,EAAG,EACHC,MAAO,EACPC,SAAU,EACVC,SAAU,EACVC,UAAW,EACXC,qBAAiBC,GAEnBC,SAAU,WAAQ,EAClBC,SAAU,WAAA,kBAAc,CAAA,EACzB,GC3HYC,EAAgB,WAC3B,IAAMb,EAAgBrC,EAAe,SAACsC,GAAU,OAAAA,EAAMD,aAAa,GAC7DlC,EAAQH,EAAe,SAACsC,GAAK,OAAKA,EAAMnC,KAAK,GAiBnD,OAdAX,EAAU,WACR,IAGI2D,EAAW,IAHQ7D,OAAO8D,gBAAkBC,GAGd,WAChChB,IACAlC,GAASmD,QAAQC,IAAI,gBAAiB,+BACxC,GAEA,OADAJ,EAASK,QAAQC,SAASC,MACd,WACF,MAARP,GAAAA,EAAUQ,YACZ,CACF,EAAG,IAEI,IACT,EC5BAC,EAAA,CAAA,cAAA,UAcaC,EAAoBC,EAAW,SAAA7C,EAAuD8C,OAAOC,EAAA/C,EAA3DgD,YAAAA,OAAW,IAAAD,GAAQA,EAAAE,EAAAjD,EAAEkD,OAAAA,OAAS,IAAHD,EAAG,EAACA,EAAKlD,EAAKiB,EAAAhB,EAAA2C,GAChF1D,EAAMkE,EAAS,SAAC9B,GAAU,OAAAA,EAAMpC,GAAG,GACnCmE,EAASD,EAAS,SAAC9B,GAAU,OAAAA,EAAM+B,MAAM,GACzCC,EAAOF,EAAS,SAAC9B,GAAU,OAAAA,EAAMgC,IAAI,GACrCC,EAAWH,EAAS,SAAC9B,GAAU,OAAAA,EAAMiC,QAAQ,GAC7CC,EAAYC,EAA8B,MAChDC,EAAoBX,EAAK,WAAA,OAAMS,EAAUG,OAAO,GAEhD,IAAMvC,EAAapC,EAAe,SAACsC,GAAK,OAAKA,EAAMF,UAAU,GACvDhC,EAAkBJ,EAAe,SAACsC,GAAK,OAAKA,EAAMlC,eAAe,GAGvEwE,EAAkCC,EAAQ,eAAKC,EAEvCC,GAAUT,EAAKS,OAAkB,EAATZ,GAAc/D,EACtC4E,GAFSV,EAAKW,MAAiB,EAATd,GAAc/D,EAEnB2E,EAGnBG,EAAMlE,EAAMkE,KApBA,GAqBZC,EAAiBL,MAAL9D,GAA4B,OAAvB8D,EAAL9D,EAAOoE,eAAFN,EAALA,EAA+B,GAY/C,OATIK,EAEFD,EAAW,IAAMG,KAAKC,GAAhB,EAAsBD,KAAKE,KAAKR,GAAU,EAAII,IAIpDA,EAAWJ,GAD+C,EAA5CM,KAAKG,IAAMN,EAAM,EAAOG,KAAKC,GAAM,MAI5C,CAAEJ,IAAAA,EAAKC,SAAAA,EAAUH,OAAAA,EAC1B,EAAG,CAACV,EAAMlE,EAAiBgC,IApBnB8C,EAAGN,EAAHM,IAAKC,EAAQP,EAARO,SAAUH,EAAMJ,EAANI,OA2CvB,OApBA3F,EAAgB,WACdmF,EAAUG,QAAQc,OAAO,EAAG,EAAG,GAC/BjB,EAAUG,QAAQe,yBAGlBlB,EAAUG,QAAQgB,oBAElBzF,EAAI,SAACoC,GAAK,MAAM,CAAEiC,SAAQhD,EAAA,CAAA,EAAOe,EAAMiC,SAAaA,EAASqB,mBAAmBvB,IAAW,EAC7F,EAAG,CAACC,EAAMlE,EAAiBgC,IAE3B/C,EAAgB,WACd,GAAI4E,EAAa,CACf,IAAM4B,EAASxB,EAEf,OADAnE,EAAI,WAAA,MAAO,CAAEmE,OAAQG,EAAUG,QAAU,GAC5B,WAAA,OAAAzE,EAAI,WAAO,MAAA,CAAEmE,OAAQwB,EAAQ,EAAE,CAC7C,CAGH,EAAG,CAACrB,EAAWP,EAAa/D,IAG1B4F,sCACE/B,CAAAA,IAAKS,EACLY,SAAU,CAAC,EAAG,EAAGD,GACjBY,SAAU,SAACC,GAAI,OAAKA,EAAKN,wBAAwB,EACjDO,KAAM,GACNjB,OAAQA,EACRE,IAAKA,EACLgB,IAAgB,EAAXf,GACDnE,GAGV,8BCtEamF,EAAqBrC,EAAW,SAAA7C,EAAuD8C,GAAOC,IAAAA,EAAA/C,EAA3DgD,YAAAA,OAAW,IAAAD,GAAQA,EAAAE,EAAAjD,EAAEkD,OAAAA,WAAMD,EAAG,EAACA,EAAKlD,EAAKiB,EAAAhB,EAAA2C,GACjF1D,EAAMkE,EAAS,SAAC9B,GAAK,OAAKA,EAAMpC,GAAG,GACnCmE,EAASD,EAAS,SAAC9B,GAAU,OAAAA,EAAM+B,MAAM,GACzCC,EAAOF,EAAS,SAAC9B,GAAU,OAAAA,EAAMgC,IAAI,GAErClC,EAAapC,EAAe,SAACsC,UAAUA,EAAMF,UAAU,GACvDhC,EAAkBJ,EAAe,SAACsC,GAAK,OAAKA,EAAMlC,eAAe,GAEjE+E,EAAWN,EAAQ,WAGvB,OAAOQ,KAAKe,IAFE9B,EAAKW,MAAQ7E,EACZkE,EAAKS,OAAS3E,EAE/B,EAAG,CAACkE,EAAMlC,EAAYhC,IAEhBoE,EAAYC,EAA+B,MAoBjD,OAnBAC,EAAoBX,EAAK,WAAM,OAAAS,EAAUG,OAAO,GAChDtF,EAAgB,WACdmF,EAAUG,QAAQc,OAAO,EAAG,EAAG,GAC/BjB,EAAUG,QAAQe,yBAGlBlB,EAAUG,QAAQgB,mBACpB,EAAG,CAACR,EAAUb,IAEdjF,EAAgB,WACd,GAAI4E,EAAa,CACf,IAAM4B,EAASxB,EAEf,OADAnE,EAAI,iBAAO,CAAEmE,OAAQG,EAAUG,QAAU,GAClC,WAAA,OAAMzE,EAAI,iBAAO,CAAEmE,OAAQwB,EAAQ,EAAE,CAC7C,CAGH,EAAG,CAACrB,EAAWP,EAAa/D,IAG1B4F,wCACEO,KAAO/B,EAAKW,MAAQ7E,GAAoB,EAAI+D,EAAS/D,EACrDkG,MAAQhC,EAAKW,MAAQ7E,EAAmB,EAAI+D,EAAS/D,EACrDmG,IAAMjC,EAAKS,OAAS3E,EAAmB,EAAI+D,EAAS/D,EACpDoG,OAASlC,EAAKS,OAAS3E,GAAoB,EAAI+D,EAAS/D,EACxD8F,IAAgB,EAAXf,EACLC,SAAU,CAAC,EAAG,EAAGD,GACjBc,KAAM,KACNlC,IAAKS,EACLuB,SAAU,SAACC,GAAI,OAAKA,EAAKN,wBAAwB,GAC7C1E,GAGV,YCnDgByF,EAAaC,EAAmBC,GACzCD,KACkB,IAAnBC,GACFD,EAAIE,iBAAmBF,EAAIG,cAC3BH,EAAII,WAAaJ,EAAIK,QACrBL,EAAIK,SAAU,EACdL,EAAIG,eAAgB,IAEpBH,EAAIK,UAAYL,EAAII,WACpBJ,EAAIG,gBAAkBH,EAAIE,kBAE5BF,EAAIM,SAASC,QAAQ,SAACC,GAAK,OAAKT,EAAaS,EAAOP,EAAe,GACrE,CCbA,ICWIQ,EDXEC,EAAe,IAAIC,EAGZC,EAAgB,SAACC,QAAM,IAANA,IAAAA,EAAS,CAAC,IACtCvH,EAAewH,WAAWhH,kBAAoBR,EAAewH,WAAWhH,mBAAqB,CAAC,GAC9FR,EAAewH,WAAWhH,kBAAiB,GAAAiH,OAAQzH,EAAewH,WAAWhH,mBAAqB,GAAQ+G,EAC5G,EAEaG,GAAgB,SAAHzG,GAWhB,IAVR0G,EAAE1G,EAAF0G,GACAC,EAAK3G,EAAL2G,MACAvD,EAAMpD,EAANoD,OACAgC,EAAIpF,EAAJoF,KACAE,EAAGtF,EAAHsF,IACAtB,EAAKhE,EAALgE,MACAF,EAAM9D,EAAN8D,OAAM8C,EAAA5G,EACN6G,MAAAA,OAAK,IAAAD,EAAG,EAACA,EAAAE,EAAA9G,EACT+G,UAAiBC,EAAAhH,EACjBiH,WAAAA,OAAa,IAAHD,GAAQA,EAEbL,GAAUvD,IACfsD,EAAGK,eAJS,IAAHD,GAAQA,EAKjBJ,EAAGQ,WAAW9B,EAAME,EAAKtB,EAAOF,GAChC4C,EAAGS,gBAAe,GAClB/D,EAAOkD,OAAOrH,IAAI4H,GAClBI,GAAcP,EAAGO,aACjBP,EAAGU,OAAOT,EAAOvD,GACjBsD,EAAGS,gBAAe,GACpB,EAEaE,GAAiB,SAAH5G,GAYjB,IAXRiG,EAAEjG,EAAFiG,GACAC,EAAKlG,EAALkG,MACAvD,EAAM3C,EAAN2C,OACAgC,EAAI3E,EAAJ2E,KACAE,EAAG7E,EAAH6E,IACAtB,EAAKvD,EAALuD,MACAF,EAAMrD,EAANqD,OAAMwD,EAAA7G,EACNoG,MAAAA,OAAK,IAAAS,EAAG,EAACA,EAAAC,EAAA9G,EACT+G,QAAAA,OAAO,IAAAD,GAAOA,EAAAE,EAAAhH,EACdsG,UAAAA,OAAY,IAAHU,GAAQA,EAAAC,EAAAjH,EACjBwG,WAAAA,OAAU,IAAAS,GAAQA,EAEbf,GAAUvD,IACfsD,EAAGiB,QAAQxB,GACXO,EAAGK,UAAYA,EACfL,EAAGkB,YAAYxC,EAAME,EAAKtB,EAAOF,GACjC4C,EAAGQ,WAAW9B,EAAME,EAAKtB,EAAOF,GAChC4C,EAAGS,eAAeK,GAClBpE,EAAOkD,OAAOrH,IAAI4H,GAClBI,GAAcP,EAAGO,aACjBP,EAAGU,OAAOT,EAAOvD,GACjBsD,EAAGS,gBAAe,GAClBT,EAAGkB,YAAY,EAAG,EAAGzB,EAAa3E,EAAG2E,EAAa5E,GACpD,EAEasG,GAAe,SAAClB,EAAcvD,EAAgByD,EAAWiB,QAAXjB,IAAAA,IAAAA,EAAQ,GACjErI,EAAOM,aAAaiJ,KAAK,SAACrB,EAAmBsB,EAAoBC,GAC/DvB,EAAGS,gBAAe,GAClB3B,EAAamB,GAASqB,GAAa,GACnC5E,EAAOkD,OAAOrH,IAAI4H,GAClBH,EAAGU,OAAOT,GAASqB,EAAa5E,GAAU6E,GAC1CzC,EAAamB,GAASqB,GAAa,GACnCF,GAAYA,GACd,GAEAI,GACF,EErDaC,GAAe,WAC1B,IAAM1I,EAAoBV,EAAe,SAACsC,GAAK,OAAKA,EAAM5B,iBAAiB,GACrEC,EAAqBX,EAAe,SAACsC,GAAU,OAAAA,EAAM3B,kBAAkB,GACvE0B,EAAgBrC,EAAe,SAACsC,GAAK,OAAKA,EAAMD,aAAa,GAC7DD,EAAapC,EAAe,SAACsC,UAAUA,EAAMF,UAAU,GACvDjC,EAAQH,EAAe,SAACsC,GAAK,OAAKA,EAAMnC,KAAK,GAC7CC,EAAkBJ,EAAe,SAACsC,GAAK,OAAKA,EAAMlC,eAAe,GAWvE,OATAZ,EAAU,WACJW,IAEFb,OAAO+J,WAAa/J,OAAO+J,YAAc,CAAE,EAE3C/J,OAAO+J,WAAWC,OAASjH,EAE/B,EAAG,IAEI,CAELlC,MAAAA,EACAO,kBAAAA,EACAC,mBAAAA,EAEAP,gBAAAA,EAEA0I,aAAAA,GACAxB,cAAAA,EACAI,cAAAA,GACAY,eAAAA,GAEAgB,OAAQjH,EACRkH,gBAAiBnH,EAErB,EC7CaoH,GAAiB,SAAHvI,GAA8C,IAAxC+F,EAAQ/F,EAAR+F,SACzBW,EAAKvD,EAAS,SAACqF,GAAC,OAAKA,EAAE9B,EAAE,GACzB/G,EAAiBZ,EAAe,SAACsC,GAAU,OAAAA,EAAM1B,cAAc,GAC/D8I,EAAYN,KAelB,OAbA5J,EAAU,WAEH2B,OAAOwI,KAAK/I,GAAgBgJ,SAC/BF,EAAUvJ,OAASmD,QAAQC,IAAI,iBAAkB,4BAEjDoE,EAAGkC,QAEHH,EAAUpC,gBACV6B,IAEJ,EAAG,CAACvI,IAEJ8I,EAAUvJ,OAASmD,QAAQC,IAAI,iBAAkBpC,OAAOwI,KAAK/I,GAAgBgJ,QAE3E9D,EAAAgE,cAAAhE,EAAAiE,SAAA,KACG/C,EACA7F,OAAOwI,KAAK/I,GAAgBsB,IAAI,SAACpB,GAChC,IAAAc,EAAwBhB,EAAeE,GAA/BC,EAAIa,EAAJb,KAAMC,EAAKY,EAALZ,MAEd,MAAoB,mBAATD,EACF+E,EAAAgE,cAACC,EAAS,CAAAjJ,IAAKA,GAAMC,EAAIQ,EAAA,CAAGT,IAAAA,GAAQ4I,EAAc1I,KAGpDgJ,EAAajJ,EAAIQ,EAAA,CACtBT,IAAAA,GACGE,GAEP,GAGN,EClCaiJ,GAAiB,WAC5B,IAAMtC,EAAKvD,EAAS,SAACqF,GAAC,OAAKA,EAAE9B,EAAE,GACzBuC,EAAY9F,EAAS,SAACqF,GAAC,OAAKA,EAAES,SAAS,GACvC3J,EAAmBP,EAAe,SAACsC,GAAU,OAAAA,EAAM/B,gBAAgB,GACnED,EAAiBN,EAAe,SAACsC,GAAU,OAAAA,EAAMhC,cAAc,GAC/DoJ,EAAYN,KA8ClB,OA3CA/J,EAAgB,WACdsI,EAAGxH,MAAMgK,kBAAoBT,EAAUvJ,KACzC,EAAG,CAACuJ,EAAUvJ,QAGdiK,EAAS,SAAAnJ,GAAG,IAAAoD,EAAMpD,EAANoD,OAAQuD,EAAK3G,EAAL2G,MACbnI,EAAOM,aAAa6J,SAEzBnK,EAAOM,aAAakH,QAAQ,SAACoB,GAAW,OAAAA,EAAOV,EAAIC,EAAOvD,EAAO,GAEjEsD,EAAGkC,QACHpK,EAAOM,aAAe,GAEtB2J,EAAUvJ,OAASmD,QAAQC,IAAI,iBAAkB,2CACjDmG,EAAUpC,gBACV6B,IACF,EAAG1J,EAAOC,kBAGV0K,EAAS,SAAA1I,OAAG2C,EAAM3C,EAAN2C,OAAQuD,EAAKlG,EAALkG,MACZpH,EAAoBR,EAAewH,WAAWhH,mBAGlC,WAAd0J,GAA0B1J,KAE5B6D,EAAOkD,OAAO8C,aACV7J,EAEFA,EAAkByG,QAAQ,SAACa,GACzBzD,EAAOkD,OAAO+C,OAAOxC,EACvB,GAEAzD,EAAOkD,OAAO+C,OAAO,GAIvB/J,GAAoBoH,EAAGO,aACvBP,EAAGU,OAAOT,EAAOvD,IAGnBrE,EAAewH,WAAW/G,wBAC5B,EAAGH,OAGL,ECtDaiK,gBAAoBC,SAAAA,WAC/B,SAAAD,EAAYvJ,GAAK,IAAAyJ,EAGG,OAFlBA,EAAAD,EAAAE,KAAAC,KAAM3J,IACNyJ,MAAKnI,MAAQ,CAAEsI,OAAO,GACtBH,EAAKzJ,MAAQA,EAAKyJ,CACpB,CAmBC,SAxB8BD,KAAAD,yEAK9BA,EAEMM,yBAAP,SAAgCD,GAE9B,MAAO,CAAEA,MAAAA,EACX,EAACL,EAAAO,UAODzC,OAAA,WACE,OAAIsC,KAAKrI,MAAMsI,OACbD,KAAK3J,MAAM+J,SAAWJ,KAAK3J,MAAM+J,QAAQJ,KAAKrI,MAAMsI,OAErD,MAEMD,KAAK3J,MAAMgG,QACpB,EAACuD,CAAA,CAxB8BC,CAAQQ,eJRzCpH,GAAA,CAAA,WAAA,KAAA,KAAA,QAAA,eAAA,SAAA,QAAA,kBAAA,eAAA,iBAAA,oBAAAqH,GAAA,CAAA,WAAA,WAmBsB,oBAAX3L,SACT6H,EAAW7H,OAAO8D,gBAAkBC,GAiBtC,IAAM6H,GAAmB,SAAHjK,GAae,IAZnC+F,EAAQ/F,EAAR+F,SAAQmE,EAAAlK,EACRmK,GAAAA,WAAED,EAAGE,EAAMF,EACXxD,EAAE1G,EAAF0G,GACA2D,EAAKrK,EAALqK,MACAC,EAAYtK,EAAZsK,aACAlH,EAAMpD,EAANoD,OACAlE,EAAKc,EAALd,MAAKqL,EAAAvK,EACLb,gBAAAA,OAAe,IAAAoL,EAAG/L,EAAOK,yBAAwB0L,EAAAC,EAAAxK,EACjDZ,aAAAA,WAAYoL,GAAOA,EAAAC,EAAAzK,EACnBX,eAAAA,OAAiBb,IAAHiM,EAAGjM,EAAOI,gBAAe6L,EAAAC,EAAA1K,EACvCV,iBAAAA,OAAmB,IAAHoL,GAAQA,EACrB3K,EAAKiB,EAAAhB,EAAA2C,IAEFgI,EAAoB5L,EAAe,SAACsC,GAAU,OAAAA,EAAMjC,YAAY,GA+BtE,OA5BAhB,EAAgB,WACQ,oBAAXC,SAETA,OAAOuM,iBAAmBC,IAI5B,IAAMC,EAAKC,EAAM1M,OAAO2M,SAASC,SAG7B/L,QAA6B,IAAb4L,EAAG5L,SACrBH,EAAemM,SAAS,CAAEhM,OAAO,IACjCmD,QAAQ8I,KAAK,6BAA+BN,IAEhD,EAAG,CAAC3L,IAGJd,EAAgB,WACdW,EAAemM,SAAS,CACtB/L,gBAAAA,EACAC,aAAAA,EACAC,eAAAA,EACAC,iBAAAA,GAEJ,EAAG,CAACH,EAAiBE,EAAgBD,EAAcE,IAKjDuF,EAACgE,cAHQsB,EAGN7J,EAAA,CACD8K,GAAG,mBAEHhI,OAAQ,CACNiI,QAAQ,GAGV3E,GAAEpG,EAAA,CAEAgL,8BAA8B,GAC3B5E,GAGL6E,OAAQ,CAAEjK,QAAQ,EAAOkK,SAAU,EAAGtF,SAAAA,GAEtCmE,MAAK/J,EACH6D,CAAAA,SAAU,QACVmB,IAAK,EACLF,KAAM,EACNC,MAAO,EACPvB,OAAQ,SACLuG,IAGDtK,IAGFuK,GAAgBzF,EAAAgE,cAACjG,EAAiBtC,EAAA,CAAC+K,QAAO,EAAArI,aAAgB,GAAAI,IAE3DkH,GAAgBzF,gBAACK,EAAkB5E,EAAA,CAAC+K,QAAO,EAAArI,aAAgB,GAAAI,IAE3DuH,GAAqB9F,EAACgE,cAAAG,GAAiB,MAEnB,mBAAbjD,EAA0BA,EAASlB,EAAAgE,cAACN,GAAiB,OAAI1D,gBAAC0D,GAAc,KAAExC,GAElFlB,EAAAgE,cAAC5G,EAAa,MAGpB,EAEawJ,GAAe,SAAHhL,OAAMsF,EAAQtF,EAARsF,SAAU+D,EAAOrJ,EAAPqJ,QAAY/J,EAAKiB,EAAAP,EAAAuJ,IAKxD,OAJA5L,EAAgB,WACdoE,SAASkJ,gBAAgBC,UAAUC,IAAI,uBACzC,EAAG,IAID/G,EAAAgE,cAACS,GACC,CAAAQ,QAAS,SAAC+B,GACR/B,GAAWA,EAAQ+B,GACnB9M,EAAemM,SAAS,CAAEzL,mBAAmB,IAC7C+C,SAASkJ,gBAAgBC,UAAUG,OAAO,wBAC1CtJ,SAASkJ,gBAAgBC,UAAUC,IAAI,yBACzC,GAEA/G,EAAAgE,cAACoB,GAAgB3J,EAAKP,GAAAA,GAAQgG,GAC9BlB,EAAAgE,cAAA,WAAA,KACEhE,EACGgE,cAAA,QAAA,KAOK,0KAIhB,EKrJakD,GAAY,SAAH/L,GAAW,OAC/B6E,EAAMgE,cAAA,OAAA,CAAAmD,MADyBhM,EAALgM,OAExBnH,EAAiBgE,cAAA,gBAAA,MACjBhE,EAAAgE,cAAA,iBAAA,CACEoD,KAAM,CACJ,CACEC,SAAU,CACRC,MAAO,CAAEC,MAAO,IAAIC,EAAM,aAE5BC,6JAKAC,mMASJC,aAAW,IAER,ECxBHC,GAA8B,oBAAXpO,OAkBnB,SAAUqO,GAAaC,GAAmC,IAAAC,QAAA,IAAAD,EAAF,CAAA,EAAEA,GAAhCnB,SAAAA,OAAQ,IAAAoB,EAAG,EAACA,EAG1CC,EAAoCC,EAAqB,CACvD9I,MAAOyI,GAAYpO,OAAO0O,WAAaC,SACvClJ,OAAQ2I,GAAYpO,OAAO4O,YAAcD,WAFpCE,EAAUL,EAAA,GAAEM,EAAaN,EAAA,GA4ChC,OAvCAtO,EAAU,WAGR,IAAM6O,EAAW5K,SAAS6K,eAAe,oBAGzC,SAASC,IACP,IAAMtJ,EAAQoJ,EAAWA,EAASG,YAAclP,OAAO0O,WACjDjJ,EAASsJ,EAAWA,EAASI,aAAenP,OAAO4O,YAErDjJ,IAAUkJ,EAAWlJ,OAASF,IAAWoJ,EAAWpJ,QAEtDqJ,EAAc,CACZnJ,MAAAA,EACAF,OAAAA,GAGN,CAEA,IAII5B,EAJEuL,EAAkBC,EAAIlC,SAAS8B,EAAc9B,GAG7CrJ,EAAiB9D,OAAO8D,gBAAkBC,EAWhD,OATIgL,GACFlL,EAAW,IAAIC,EAAesL,IACrBlL,QAAQ6K,GAEjB/O,OAAOsP,iBAAiB,SAAUF,GAGpCH,IAEO,WAAKM,IAAAA,EACVvP,OAAOwP,oBAAoB,SAAUJ,GAC7B,OAARG,EAAA1L,IAAA0L,EAAUlL,YACZ,CACF,EAAG,CAACwK,EAAYC,IAETD,CACT,CCrEgB,SAAAY,GAAUtM,EAAWuM,EAAYC,EAAYC,EAAYC,GACvE,OAAOD,GAAOzM,EAAIuM,IAAOG,EAAKD,IAAQD,EAAKD,EAC7C,CCoBa,IAAAI,GAAe,WAM1B,MAAO,CACLC,QANyBrP,EAAe,SAACsC,GAAU,OAAAA,EAAM3B,kBAAkB,GAO3E4B,OANavC,EAAe,SAACsC,GAAU,OAAAA,EAAMC,MAAM,GAOnDS,SANehD,EAAe,SAACsC,GAAU,OAAAA,EAAMU,QAAQ,GAOvDC,SANejD,EAAe,SAACsC,GAAU,OAAAA,EAAMW,QAAQ,GAQ3D,ECGA,SAASqM,GAAWC,EAAsCC,GACxD,IAAMlL,EAAOqJ,KACb8B,EAA6BL,KAArB7M,EAAMkN,EAANlN,OAAQU,EAAQwM,EAARxM,SACV7C,EAAkBJ,EAAe,SAACsC,GAAK,OAAKA,EAAMlC,eAAe,GACjEgC,EAAapC,EAAe,SAACsC,UAAUA,EAAMF,UAAU,GACvDjC,EAAQH,EAAe,SAACsC,GAAU,OAAAA,EAAMnC,KAAK,GAGnDyE,EAAuDC,EAAQ,WAC7D,IAAM6K,EAAS,CAAEC,WAAY,KAAMC,UAAW,EAAGC,YAAY,GACvDC,EAAON,GAAW,CAAA,EAIxB,OAHArO,OAAOwI,KAAKmG,GAAM5N,IAAI,SAACpB,EAAaiP,QAChBhN,IAAd+M,EAAKhP,KAAoB4O,EAAO5O,GAAOgP,EAAKhP,GAClD,GACO4O,CACT,EAAG,CAACF,IAP2BK,EAAUjL,EAAViL,WAAYG,EAAOpL,EAAPoL,QAU3CC,EAAoCC,EAAU,CAAEP,WAV9B/K,EAAV+K,WAUoDC,UAV/BhL,EAATgL,YAUZ7L,EAAGkM,EAAHlM,IAAaoM,EAAUF,EAAlBG,OAGb/Q,EAAgB,WACd0E,EAAIwL,EAAM5K,QACZ,EAAG,CAAC4K,EAAOA,MAAAA,OAAAA,EAAAA,EAAO5K,UAGlB,IAAAmJ,EAA0BC,EAAesC,EAAKC,KAAK,EAAG,EAAG,IAAlDrD,EAAKa,EAAEyC,GAAAA,EAAQzC,EAGtB,GAAM0C,EAA2B/L,EAAO,CACtC0L,YAAY,EACZvN,UAAW,EACX6N,YAAa,EACblM,UAAW,IACVI,QAIG+L,EAAOjM,EAAO,CAClB8B,IAAK,EACLC,OAAQ,EACRH,KAAM,EACNC,MAAO,EACPrB,MAAO,EACPF,OAAQ,IACPJ,QAGHgM,EAAwC5C,EAAe2C,GAAhDE,EAAYD,KAAEE,EAAeF,EAAA,GAG9BG,EAASrM,EAAO,CACpB8B,IAAK,EACLC,OAAQ,EACRH,KAAM,EACNC,MAAO,EACPrB,MAAO,EACPF,OAAQ,EACRtC,EAAG,EACHD,EAAG,EACHuO,kBAAmB,IAClBpM,QAGGS,EAAWX,EAAO4L,EAAKC,KAAK,EAAG,EAAG,IAAI3L,QAG5CtF,EAAgB,WAAK,IAAA2R,EACbC,EAAQD,OAAHA,EAAGzB,EAAM5K,cAANqM,EAAAA,EAAeE,wBAC7B,GAAKD,EAAL,CACA,IAAME,EAAWnB,EAAWA,EAAwBoB,UAAY9R,OAAO+R,QACjEC,EAAWtB,EAAWA,EAAwBuB,WAAajS,OAAOkS,QACxEd,EAAKnK,IAAM0K,EAAM1K,IAAM4K,EACvBT,EAAKlK,OAASyK,EAAMzK,OAAS2K,EAC7BT,EAAKrK,KAAO4K,EAAM5K,KAAOiL,EACzBZ,EAAKpK,MAAQ2K,EAAM3K,MAAQgL,EAC3BZ,EAAKzL,MAAQgM,EAAMhM,MACnByL,EAAK3L,OAASkM,EAAMlM,OACpB8L,EAAetP,EAAMmP,CAAAA,EAAAA,IACrBH,EAASF,EAAKC,MAAS,MAAJI,OAAI,EAAJA,EAAMzL,OAAQ7E,GAAqB,MAAJsQ,OAAI,EAAJA,EAAM3L,QAAS3E,EAAiB,IAClFD,GACEmD,QAAQC,IACN,oCACAmN,EACA,gBACA,CAAES,SAAAA,EAAUG,SAAAA,GACZ,QACAhN,EACA,cACAlC,EAnBJ,CAqBF,EAAG,CAACmN,EAAOjL,EAAMlC,EAAYhC,EAAiBD,IAE9C,IAAMsR,EAASC,EACb,SAAA9D,GAAkF,IAAA3M,OAAN,IAAM2M,EAAN,CAAE,EAAAA,EAAA+D,EAAA1Q,EAA3E2Q,qBACD,GAAKrC,EAAM5K,mBADUgN,IAAQA,GACmBnB,EAAYL,YAA5D,CAIA,IAAM0B,EAL+C5Q,EAAtBsB,QAKGA,GAzHxC,SAAsBuO,EAAgBJ,EAAYnO,EAAgB+B,GAChEwM,EAAOvK,IAAMmK,EAAKnK,KAAOhE,EAAOC,GAAK,GACrCsO,EAAOtK,OAASkK,EAAKlK,QAAUjE,EAAOC,GAAK,GAC3CsO,EAAOzK,KAAOqK,EAAKrK,MAAQ9D,EAAOE,GAAK,GACvCqO,EAAOxK,MAAQoK,EAAKpK,OAAS/D,EAAOE,GAAK,GACzCqO,EAAO7L,MAAQyL,EAAKzL,MACpB6L,EAAO/L,OAAS2L,EAAK3L,OAErB+L,EAAOrO,EAAIqO,EAAOzK,KAAoB,GAAbqK,EAAKzL,MAA2B,GAAbX,EAAKW,MACjD6L,EAAOtO,EAAIsO,EAAOvK,IAAoB,GAAdmK,EAAK3L,OAA6B,GAAdT,EAAKS,OACjD+L,EAAOC,kBAAoBzM,EAAKS,OAAS+L,EAAOtK,MAClD,CAgHMsL,CAAahB,EAAQJ,EAAMmB,EAASvN,GA9G1C,SAAwBc,EAAgB0L,EAAgB1Q,GACtDgF,EAAS3C,EAAIqO,EAAOrO,EAAIrC,EACxBgF,EAAS5C,GAAK,EAAIsO,EAAOtO,EAAIpC,CAC/B,CA4GM2R,CAAe3M,EAAU0L,EAAQ1Q,GAGjC,IAAM4R,EAA2C,eAA5BH,EAAQ/O,gBACvBmP,EAAWD,EAAe,QAAU,SAIpCE,EAAW5N,EAAK2N,GAAYnB,EAHhBkB,EAAe,OAAS,OAI1CxB,EAAY5N,SAAWmM,GAAUmD,EAAU,EAAG5N,EAAK2N,GAAYnB,EAAOmB,GAAW,EAAG,GACpFzB,EAAYC,WAAa1B,GAAUmD,EAAU,EAAGpB,EAAOmB,GAAW,EAAG,GACrEzB,EAAYjM,SAAWwK,GAAUmD,EAAU,EAAG5N,EAAK2N,GAAW,EAAG,EAhBhE,CAiBH,EACA,CAAC1C,EAAOjL,EAAMlE,EAAiBmC,IAsBjC,OAlBAlD,EAAgB,WACdmR,EAAYL,WAAaA,EAEzBsB,EAAO,CAAEG,sBAAsB,IAC/BzR,GAASmD,QAAQC,IAAI,yBAA0B4M,EAAY,WAC7D,EAAG,CAACA,IAGJ9Q,EAAgB,WACdoS,EAAO,CAAEG,sBAAsB,IAC/BzR,GAASmD,QAAQC,IAAI,qCACvB,EAAG,CAACkO,EAAQrP,IAGZ5C,EAAU,WACR,GAAIqQ,EAAY,OAAO5M,EAAS,SAAC4O,GAAO,OAAKJ,EAAO,CAAEG,sBAAsB,GAAO,EACrF,EAAG,CAAC/B,EAAY4B,EAAQxO,IAEjB,CACLyN,KAAME,EACNE,OAAAA,EACA7D,MAAAA,EACA7H,SAAAA,EACAoL,YAAAA,EACAL,WAAAA,EACAsB,OAAAA,EAEJ,CCxLA,IAAA7N,GAAA,CAAA,QAAA,WAAA,SAAA,mBAAA,sBAAA,UAAA,gBAAA,UAAA,QAAA,KAAA,YAyCA,SAASuO,GAAWlR,GAaL,IAZbsO,EAAKtO,EAALsO,MACAvI,EAAQ/F,EAAR+F,SAAQ9C,EAAAjD,EACRkD,OAAAA,OAAS,IAAHD,EAAG,EAACA,EACVkO,EAAgBnR,EAAhBmR,iBACAC,EAAmBpR,EAAnBoR,oBAAmBC,EAAArR,EACnB8F,QAAAA,OAAO,IAAAuL,GAAOA,EAAAC,EAAAtR,EACduR,cAAAA,OAAgB,IAAHD,GAAOA,EAAAE,EAAAxR,EACpBwH,QAAAA,OAAU,IAAHgK,GAAQA,EAAAC,EAAAzR,EACfd,MAAAA,OAAQ,IAAHuS,GAAQA,EAAAvH,EAAAlK,EACbmK,GAAAA,OAAK,IAAHD,EAAG,QAAOA,EAAAwH,EAAA1R,EACZ2R,SAAAA,OAAQ,IAAAD,EAAGlT,EAAOE,kBAAiBgT,EAChC3R,EAAKiB,EAAAhB,EAAA2C,IAEFiP,EAAiBnB,EAAY,SAACoB,GACrB,OAATA,GACFC,EAASD,EAEb,EAAG,IAEHhF,EAA0BC,EAAuBtF,EAAU,IAAIuK,EAAU,MAAlEpL,EAAKkG,EAAA,GAAEiF,EAAQjF,EAAA,GACtBmF,EAAyC7J,KAAjC9B,EAAa2L,EAAb3L,cAAeI,EAAauL,EAAbvL,cACjBrH,EAAeL,EAAe,SAACsC,GAAK,OAAKA,EAAMjC,YAAY,GAEjE6S,EAA6D5D,GAAWC,EAAO,CAC7EI,WAAYyC,EACZxC,UAAWyC,IAFLvB,EAAMoC,EAANpC,OAAQ7D,EAAKiG,EAALjG,MAAO7H,EAAQ8N,EAAR9N,SAAUoL,EAAW0C,EAAX1C,YAAaL,EAAU+C,EAAV/C,WAM9C9Q,EAAgB,WACVuI,IAAOA,EAAMb,QAAUyL,EAAgBrC,GAAcpJ,EAAUA,EACrE,EAAG,CAACa,EAAOuI,EAAYqC,EAAezL,IAGtCqD,EACE,SAAA1I,GAAG,IAAAiG,EAAEjG,EAAFiG,GAAItD,EAAM3C,EAAN2C,OACAuD,GAEDA,EAAMb,UAERa,EAAMxC,SAAS5C,EAAI4C,EAAS5C,EAC5BoF,EAAMxC,SAAS3C,EAAI2C,EAAS3C,EAExBgG,EACFf,EAAc,CACZC,GAAAA,EACAC,MAAAA,EACAvD,OAAAA,EACAgC,KAAMyK,EAAOzK,KAAOlC,EACpBoC,IAAKuK,EAAOC,kBAAoB5M,EAChCc,MAAO6L,EAAO7L,MAAiB,EAATd,EACtBY,OAAQ+L,EAAO/L,OAAkB,EAATZ,IAG1BmD,IAGN,EACAjH,EAAeuS,OAAW7P,GAG5B,IAAMoQ,EACJrN,EAAAgE,cAAAhE,EAAAiE,SAAA,OACK/C,GAAY7G,IAAU8M,GAASnH,EAAAgE,cAACkD,GAAS,CAACC,MAAOA,IACnDjG,GACCY,GACAqF,GACAjG,EAAQzF,EAAA,CAENgO,MAAAA,EACApL,OAAAA,EAEA8I,MAAAA,EACAuD,YAAAA,EACAL,WAAAA,EAEAyC,SAAUA,GAEP5R,KAMLoS,EAAqBhI,EAE3B,OAAO3C,GAAWb,EAAQyL,EAAaF,EAASvL,GAAS9B,EAACgE,cAAAsJ,EAAc,CAAArP,IAAK8O,GAAiBM,EAChG,qPC5FMG,GAAW,SAAHrS,GACZ,IAAAsO,EAAKtO,EAALsO,MACAvI,EAAQ/F,EAAR+F,SAAQ9C,EAAAjD,EACRkD,OAAAA,WAAMD,EAAG,EAACA,EAAAoO,EAAArR,EACV8F,QAAAA,WAAOuL,GAAOA,EAAAC,EAAAtR,EACduR,cAAAA,OAAgB,IAAHD,GAAOA,EAAAG,EAAAzR,EACpBd,MAAAA,OAAQ,IAAHuS,GAAQA,EAAAa,EAAAtS,EACbsK,aAAAA,OAAY,IAAAgI,GAAQA,EAAAZ,EAAA1R,EACpB2R,SAAAA,OAAQ,IAAAD,EAAGlT,EAAOG,mBAAkB+S,EACpCxC,EAAUlP,EAAVkP,WACAW,EAAM7P,EAAN6P,OACA7D,EAAKhM,EAALgM,MACAuD,EAAWvP,EAAXuP,YACAnM,EAAMpD,EAANoD,OACAmP,EAAGvS,EAAHuS,IACGxS,EAAKiB,EAAAhB,EAAA2C,IAEFgE,EAAQxD,EAAS,SAACqF,UAAMA,EAAE7B,KAAK,GAC/B6L,EAAMrP,EAAS,SAAC9B,GAAU,OAAAA,EAAMmR,GAAG,GACnCC,EAAYtP,EAAS,SAAC9B,GAAU,OAAAA,EAAMoR,SAAS,GAE7CpL,EAAmBc,KAAnBd,eAgCR,OA7BAjJ,EAAgB,WACduI,EAAMb,QAAUyL,EAAgBrC,GAAcpJ,EAAUA,CAC1D,EAAG,CAACoJ,EAAYqC,EAAezL,IAG/BvH,EAAU,WAER,IAAMmU,EAAMF,IAAMG,OAAOC,UAEzB,OADAH,EAAU,CAAEG,UAAWtE,EAAM5K,UACtB,WAAA,OAAM+O,EAAU,CAAEG,UAAWF,GAAM,CAC5C,EAAG,IAGHvJ,EAAS,SAAA1I,OAAOkG,EAAKlG,EAALkG,MAEVA,EAAMb,SACRuB,EAAe,CACbX,GAJQjG,EAAFiG,GAKNC,MAAAA,EACAvD,OANuB3C,EAAN2C,OAOjBgC,KAAMyK,EAAOzK,KAAOlC,EACpBoC,IAAKuK,EAAOC,kBAAoB5M,EAChCc,MAAO6L,EAAO7L,MAAiB,EAATd,EACtBY,OAAQ+L,EAAO/L,OAAkB,EAATZ,EACxB+D,aAAcsL,GAGpB,EAAGZ,GAGD9M,EAAAgE,cAAAhE,EAAAiE,SAAA,MACIwB,GAAgBzF,EAACgE,cAAAjG,EAAiBtC,EAAC+K,CAAAA,QAAM,EAACnI,OAAQA,EAAQF,aAAW,GAAKI,IAC3EkH,GAAgBzF,EAAAgE,cAAC3D,EAAkB5E,EAAC+K,CAAAA,QAAM,EAACnI,OAAQA,EAAQF,aAAW,GAAKI,MACzE2C,GAAY7G,IAAU8M,GAASnH,EAAAgE,cAACkD,GAAS,CAACC,MAAOA,IACnDjG,GAECiG,GACAjG,EAAQzF,EAAA,CAENgO,MAAAA,EACApL,OAAAA,EAEA8I,MAAAA,EACAuD,YAAAA,EACAL,WAAAA,EAEAyC,SAAAA,GAEG5R,IAIb,EAEA,SAAS8S,GAAmB/R,GAOL,IANrBwN,EAAKxN,EAALwN,MAAKwE,EAAAhS,EACLoC,OAAAA,OAAS,IAAH4P,EAAG,EAACA,EACV3B,EAAgBrQ,EAAhBqQ,iBACAC,EAAmBtQ,EAAnBsQ,oBACAO,EAAQ7Q,EAAR6Q,SACG5R,EAAKiB,EAAAF,EAAAkJ,IAEDrD,EAASmG,EAAS,WAAM,OAAA,IAAIiF,CAAO,MAE1CE,EAAoC5D,GAAWC,EAAO,CACpDI,WAAYyC,EACZxC,UAAWyC,IAFLvB,EAAMoC,EAANpC,OAAWkD,EAAY/R,EAAAiR,EAAAe,IAMzBC,EAAUxC,EACd,SAACyC,EAAY7R,GAEPiN,EAAM5K,SAAWwP,EAAMzE,SAAWH,EAAM5K,UAM1CrC,EAAM8R,QAAQlU,KAFJiU,EAAME,QAHqBvD,EAAdzK,KAGUlC,IAHI2M,EAA7B7L,MACwB,EAATd,GAIU,EAAI,IAD3BgQ,EAAMG,QAJqBxD,EAARvK,IAIGpC,IAJK2M,EAAtB/L,OAEmB,EAATZ,GAGgC,EAAI,GAC7D7B,EAAMiS,UAAUC,cAAclS,EAAM8R,QAAS9R,EAAM+B,QAEvD,EACA,CAACyM,IAGH,OACEA,GACAuC,EACEvN,EAACgE,cAAAwJ,GAAQ/R,EAAA,CAACgO,MAAOA,EAAOuB,OAAQA,EAAQ8B,SAAUA,EAAUzO,OAAQA,GAAYnD,EAAWgT,IAC3FpM,EAEA,CAAEgM,OAAQ,CAAEM,QAAAA,EAAStB,SAAAA,GAAYtO,KAAM,CAAEW,MAAO6L,EAAO7L,MAAOF,OAAQ+L,EAAO/L,SAGnF,CCjJA,SAAS0P,GACPC,EACA1T,UAAAA,IAAAA,IAAAA,EAAa,CAAA,GAAE,IAAAC,OACgD,IADhD2M,EACgD,CAAA,EAAEA,EAA/D9M,EAAGG,EAAHH,IAAG6T,EAAA1T,EAAEa,QAAAA,OAAO,IAAA6S,GAAOA,EAEfnT,EAAexB,EAAe,SAACsC,GAAK,OAAKA,EAAMd,YAAY,GAC3DX,EAAiBb,EAAe,SAACsC,GAAU,OAAAA,EAAMzB,cAAc,GAC/DgB,EAAmB7B,EAAe,SAACsC,GAAU,OAAAA,EAAMT,gBAAgB,GAGnE+S,EAAY/P,EAAQ,kBAAM/D,GAAO+T,EAAUC,cAAc,EAAE,IAGjEzV,EAAgB,WACdwB,EAAe+T,EAAWF,EAAMnT,EAAOP,CAAAA,EAAAA,EAAOM,CAAAA,UAAU,IAC1D,EAAG,CAACsT,IAGJpV,EAAU,WACR,OAAO,WACLqC,EAAiB+S,EAAW9S,EAC9B,CACF,EAAG,CAAC8S,IAGJ,IAAM1U,EAAMwR,EACV,SAAC1Q,GACCQ,EAAaoT,EAAW5T,EAC1B,EACA,CAACQ,EAAcoT,IAQjB,OAJApV,EAAU,WACRU,EAAIc,EACN,EAAC,GAAAyG,OAAMtG,OAAO4T,OAAO/T,KAEdd,CACT,oCCrCM8U,GAAYlR,EAAW,SAAA7C,EAAyD8C,GAAtD,IAAAiD,EAAQ/F,EAAR+F,SAAUqF,EAAEpL,EAAFoL,GAAEsI,EAAA1T,EAAEa,QAAAA,WAAO6S,GAAOA,EAAK3T,EAAKiB,EAAAhB,EAAA2C,IACpE,OAAKoD,GAELyN,GAAUzN,EAAQzF,EAAOP,GAAAA,GAAO+C,IAAAA,IAAO,CAAEjD,IAAKuL,EAAIvK,QAAAA,IAC3C,UACT,GCMImT,IAA0B,EAiB9B,SAASC,GACPC,EAAmCvH,GACsBwH,IAAAA,EAAAC,EAAApU,OAAA,IAAA2M,EAAF,CAAE,EAAAA,EAAA0H,EAAArU,EAAvDsU,YAAAA,WAAWD,GAAOA,EAAAE,EAAAvU,EAAEwU,iBAAAA,WAAgBD,EAAG,UAASA,EAE5C7N,EAAKvD,EAAS,SAACqF,GAAM,OAAAA,EAAE9B,EAAE,GACzBrD,EAAOqJ,KACPxN,EAAQH,EAAe,SAACsC,GAAU,OAAAA,EAAMnC,KAAK,GAKnD2N,EAA4CC,EAASqH,OAADA,EAACD,EAAOxQ,cAAPyQ,EAAAA,EAAgBM,YAA9DC,EAAc7H,EAAE8H,GAAAA,EAAiB9H,EAAA,GACxCtO,EAAU,WACR,IAAMqW,EAAKV,EAAOxQ,QACZmR,EAAS,eAAKC,EAClBH,SAAiBG,EAACZ,EAAOxQ,gBAAPoR,EAAgBL,WACpC,EAEA,OADAG,MAAAA,GAAAA,EAAIjH,iBAAiB,OAAQkH,qBAChBD,MAAAA,OAAAA,EAAAA,EAAI/G,oBAAoB,OAAQgH,EAAO,CACtD,EAAG,CAACX,EAAQQ,EAAgBC,IAG5B,IA7BMI,EACAC,EAEAC,EA0BAR,EAAaS,EACjB,WAEE,OADAC,EAAsBC,UAAU,yBACzB,IAAIC,QAAQ,SAACC,GAClB,IAAMV,EAAKV,EAAOxQ,QAElB,SAAS6R,IACPD,EAAU,MAAFV,OAAE,EAAFA,EAAIH,YACZU,EAAsBK,QAAQ,wBAChC,CAGE,MAAFZ,GAAAA,EAAIjH,iBAAiB,OAAQ4H,EAAe,CAAEE,MAAM,IAGhDb,MAAAA,GAAAA,EAAIc,WACNd,MAAAA,GAAAA,EAAI/G,oBAAoB,OAAQ0H,GAChCA,IAEJ,EACF,EACA,CAACrB,EAAQ7Q,EAAM+Q,OAAFA,EAAEF,EAAOxQ,cAAP0Q,EAAAA,EAAgBK,WAAYC,GAC3C,CAAEiB,MAAAA,IAGEC,GAtDAb,GAA0E,IAA/D,iCAAiCc,KAAKC,UAAUC,WAG3Dd,GAFAD,EAAYc,UAAUC,UAAUC,QAAQ,YAAc,GAEzBF,UAAUC,UAAUE,MAAM,uBAAuB,IAAM,EACtD,oBAAtBC,mBAAqCnB,GAAaC,GAAamB,OAAOlB,GAAkB,GAkD7DmB,EAAgBC,GAGnDC,EAAcC,EAAUX,EAAanB,EAAY,SAAC+B,GAClDA,aAAkBH,IACpBG,EAAOC,WAAW,CAChBC,qBAAsB,OACtBlC,iBAAAA,EACAmC,iBAAkB,UAIpBH,EAAOI,iBAAiB,CACtBC,QAAW7C,GAAiB,cAAgB,IAAE,QAGpD,GAEM8C,EAAUlT,EAAQ,WACtB,OAAI0S,aAAkBS,EACbT,EAELA,aAAkBU,YACb,IAAIC,EAAcX,QAD3B,CAGF,EAAG,CAACA,IAYJ,OARA/X,EACE,WACE+V,GAAe5N,EAAG4N,YAAYwC,GAC9B5X,GAASmD,QAAQC,IAAI,oBAAqB,gBAC5C,EACA,CAACoE,EAAIoQ,EAASxC,IAGTwC,CACT,CApGAI,EAAaC,KAAK,SAACC,GACjBpD,GAAiBoD,CACnB,GCpBA,IAuMaC,GAAkBxU,EApMH,SAAH7C,EAevB8C,GACE,IAdAiD,EAAQ/F,EAAR+F,SAAQuR,EAAAtX,EACRoO,QAAAA,OAAO,IAAAkJ,GAAOA,EAAAC,EAAAvX,EACdwX,OAAAA,OAAM,IAAAD,GAAQA,EAAAE,EAAAzX,EACd0X,kBAAAA,OAAoB,IAAHD,EAAG,OAAMA,EAAAE,EAAA3X,EAC1B4X,uBAAAA,WAAsBD,GAAOA,EAAAE,EAAA7X,EAC7B8X,WAAAA,OAAU,IAAAD,GAAQA,EAAAE,EAAA/X,EAClBgY,kBAAAA,OAAoB,IAAHD,GAAQA,EAAAE,EAAAjY,EACzBkY,kBAAAA,OAAiB,IAAAD,GAAOA,EACxBjW,EAAQhC,EAARgC,SAAQmW,EAAAnY,EACRxB,OAAAA,OAAS,IAAH2Z,EAAG,GAAEA,EAAAC,EAAApY,EACXkI,WAAAA,OAAa,IAAHkQ,EAAG,WAAQ,EAAAA,EACrBC,EAASrY,EAATqY,UAIIC,EAAW9U,IACX+U,EAAQ/U,IACRgV,EAAiBhV,GAAO,GACxBiV,EAAoB1Z,EAAe,SAACyJ,UAAMA,EAAElH,MAAM,GAGxDmC,EAAoBX,EAAK,iBAAO,CAC9B4V,MAAO,WAAAC,IAAAA,EAAAA,OAAmB,OAAnBA,EAAMJ,EAAM7U,cAAO,EAAbiV,EAAeD,OAAO,EACnCE,KAAM,WAAA,IAAAC,EAAAA,OAAmB,OAAnBA,EAAMN,EAAM7U,cAAO,EAAbmV,EAAeD,MAAM,EACjCE,GAAI,SAAC5F,EAAe6F,GAAkB,IAAAC,EAAAA,OAAkB,OAAlBA,EAAKT,EAAM7U,cAAO,EAAbsV,EAAeF,GAAG5F,EAAO6F,EAAG,EACvEE,OAAQ,WAAAC,IAAAA,EAAAA,OAAMA,OAANA,EAAMX,EAAM7U,cAANwV,EAAAA,EAAeC,MAAM,EACnCA,KAAM,WAAAC,IAAAA,SAAMA,OAANA,EAAMb,EAAM7U,cAAN0V,EAAAA,EAAeD,MAAM,EACjCpX,SAAU,SAAC0M,EAAwB1O,GAAqB,IAAAsZ,EAAAA,OAAkB,OAAlBA,EAAKd,EAAM7U,cAAO,EAAb2V,EAAetX,SAAS0M,EAAQ1O,EAAM,EACnGuZ,IAAK,SAACC,GAAY,IAAAC,EAAA,cAAAA,EAAKjB,EAAM7U,gBAAN8V,EAAeF,IAAIC,EAAK,EAC/CE,QAASlB,EAAM7U,QAChB,GAGD,IAAMgW,EAAuBjJ,EAC3B,SAACkJ,GACM/B,GACDU,EAAS5U,SAAW8U,EAAe9U,UAAYiW,IACjDnB,EAAe9U,QAAUiW,EACzBrB,EAAS5U,QAAQ2G,MAAMuP,cAAgBD,EAAU,OAAS,OAE9D,EACA,CAAC/B,EAAwBU,EAAUE,IAsJrC,OAlJApa,EAAgB,WACV,sBAAuBC,OAAOwb,UAChCxb,OAAOwb,QAAQnC,kBAAoBA,EAEvC,EAAG,IAGHtZ,EAAgB,WAEd,IAqBI0b,EAMEC,EA3BAC,EAAOxX,SAASkJ,gBAChBqD,EAAUvM,SAASC,KACnByP,EAAU1P,SAASC,KAAKwX,kBAkC9B,OAhCAD,EAAKrO,UAAUuO,OAAO,uBAAwBlC,GAC9CjJ,EAAQpD,UAAUuO,OAAO,0BAA2BlC,GAEhDA,GACF9X,OAAOia,OAAO3b,EAAQ,CACpB4b,aAAa,EACbrL,QAAAA,EACAmD,QAAAA,IAIJqG,EAAM7U,QAAU,IAAI2W,EAAK/Z,EAAA,CACvBga,YAAaxC,EAAa,aAAe,YACtCtZ,IAKD6Z,EACFyB,EAAezB,EAAU,SAACkB,OAAYgB,EAAA,cAAAA,EAAKhC,EAAM7U,gBAAN6W,EAAejB,IAAIC,EAAK,IASnEQ,EAAOS,sBAJP,SAASlB,EAAIC,GAAY,IAAAkB,EACvBA,OAAAA,EAAAlC,EAAM7U,UAAN+W,EAAenB,IAAIC,GACnBQ,EAAOS,sBAAsBlB,EAC/B,GAEAQ,EAAe,WAAM,OAAAY,qBAAqBX,EAAK,cAGrCY,IAAAA,EACVb,IACAa,OAAAA,EAAApC,EAAM7U,UAANiX,EAAeC,SACjB,CACF,EAAG,IAGHxc,EAAgB,WAAK,IAAAyc,EAAAC,EACbC,EAAY,SAAHta,GAA6D,IAAvDa,EAAMb,EAANa,OAAQG,EAAKhB,EAALgB,MAAOC,EAAQjB,EAARiB,SAAUE,EAASnB,EAATmB,UAAWD,EAAQlB,EAARkB,SAEjDH,EAAIsW,EAAaxW,EAAS,EAG5B4W,IACFO,EAAkBlX,EALTuW,EAAsB,EAATxW,EAMtBmX,EAAkBjX,EAAIA,EACtBiX,EAAkBhX,MAAQA,EAC1BgX,EAAkB/W,SAAWA,EAC7B+W,EAAkB7W,UAAYA,EAC9B6W,EAAkB9W,SAAWA,GAAY,GAGvCyC,KAAK4W,IAAItZ,GApHqB,KAqHhCgY,GAAqB,GAEnBtV,KAAK4W,IAAItZ,GAxHoB,GAyH/BgY,GAAqB,GAGvB1X,GAAYA,EAAS,CAAEV,OAAAA,EAAQG,MAAAA,EAAOC,SAAAA,EAAUE,UAAAA,EAAWD,SAAAA,IAE3DuG,GACF,EA2BA,OAzBa,OAAb2S,EAAAtC,EAAM7U,UAANmX,EAAe/B,GAAG,SAAUiC,GAGxB7C,IACFO,EAAkB5W,gBAAkBiW,EAAa,aAAe,WAGhE/Y,EAAemM,SAAS,CACtBnJ,SAAU,WAAY,IAAAkZ,EACpBA,OAAAA,EAAA1C,EAAM7U,UAANuX,EAAelZ,SAAQmZ,MAAAD,EAAAE,GAAAA,MAAA1R,KAAA2R,WACzB,EACApZ,SAAU,SAAC+W,GAAsBsC,IAAAA,EAAAC,EAG/B,OAFa,OAAbD,EAAA9C,EAAM7U,UAAN2X,EAAevC,GAAG,SAAUC,GACf,OAAbuC,EAAA/C,EAAM7U,UAAN4X,EAAenC,OACRoC,WAAAA,IAAAA,EAAAA,OAAmB,OAAnBA,EAAMhD,EAAM7U,cAAO,EAAb6X,EAAeC,IAAI,SAAUzC,EAAG,CAC/C,IAIFha,EAAewH,WAAWjF,OAAOC,EAAIlD,OAAO+R,QAC5CrR,EAAewH,WAAWjF,OAAOE,EAAInD,OAAOkS,gBAI9CuK,EAAAvC,EAAM7U,UAANoX,EAAe3B,OACR,WAAKsC,IAAAA,EACG,OAAbA,EAAAlD,EAAM7U,UAAN+X,EAAeD,IAAI,SAAUT,GAEzB7C,GACFnZ,EAAemM,SAAS,CACtBlJ,SAAU,WAAM,OAAA,WAAQ,CAAA,EACxBD,SAAU,WACX,GACL,CACF,EAAG,IAGH3D,EAAgB,WACd,IAAMsd,EAAyB,kBAAMxT,GAAY,EAC3CyT,EAAuB,WAAM,OAAAjC,GAAqB,EAAM,EAI9D,OAHArb,OAAOsP,iBAAiB,cAAegO,GACvCtd,OAAOsP,iBAAiB,cAAegO,GACvCtd,OAAOsP,iBAAiB,QAAS+N,GAC1B,WACLrd,OAAOwP,oBAAoB,cAAe8N,GAC1Ctd,OAAOwP,oBAAoB,cAAe8N,GAC1Ctd,OAAOwP,oBAAoB,QAAS6N,EACtC,CACF,EAAG,IAGHnd,EAAU,WACJ2Z,IACF1V,SAASkJ,gBAAgBC,UAAUuO,OAAO,8BAA+B9L,GACzE5L,SAASkJ,gBAAgBC,UAAUuO,OAAO,gCAAiC9L,GAC3ErP,EAAemM,SAAS,CAAExL,mBAAoB0O,IAElD,EAAG,CAACA,IAEJ7P,EAAU,WAAKqd,IAAAA,EAAAC,EACbrE,SAAMoE,EAAGrD,EAAM7U,UAANkY,EAAehD,OAASiD,OAAHA,EAAGtD,EAAM7U,UAANmY,EAAenD,OAClD,EAAG,CAAClB,IAMGzR,EAAS,CAAEjD,IAAKwV,GACzB,MCnMezV,EAJf,SAA4B9C,EAAyB+C,GACnD,OAAO+B,gBAACwS,GAAe/W,EAAA,CAACwC,IAAKA,EAAKoF,WAAYA,EAAYmQ,UAAWA,GAAetY,GACtF,GCea+b,GAAS,CACpBC,OAAQ,6BACRC,iBAAkB,sDAClBC,iBAAkB,6BAClBC,2BAA4B"}