{"version":3,"file":"scrollrig.modern.js","sources":["../src/hooks/useIsomorphicLayoutEffect.ts","../src/config.ts","../src/store.ts","../src/components/ResizeManager.ts","../src/components/PerspectiveCamera.tsx","../src/components/OrthographicCamera.tsx","../src/utils/helpers.ts","../src/renderer-api.ts","../src/hooks/useScrollRig.ts","../src/components/GlobalChildren.tsx","../src/components/GlobalRenderer.tsx","../src/components/CanvasErrorBoundary.tsx","../src/components/GlobalCanvas.tsx","../src/components/DebugMesh.tsx","../src/hooks/useWindowSize.ts","../src/utils/math.ts","../src/scrollbar/useScrollbar.ts","../src/hooks/useTracker.ts","../src/components/ScrollScene.tsx","../src/components/ViewportScrollScene.tsx","../src/hooks/useCanvas.ts","../src/components/UseCanvas.tsx","../src/hooks/useImageAsTexture.ts","../src/scrollbar/SmoothScrollbar.tsx","../src/components/R3FSmoothScrollbar.tsx","../src/index.ts"],"sourcesContent":["import { useEffect, useLayoutEffect as vanillaUseLayoutEffect } from 'react'\n\nexport const isBrowser = typeof window !== 'undefined'\n\nexport const useLayoutEffect = isBrowser ? vanillaUseLayoutEffect : useEffect\n","// Global config\nimport type { Scene, Camera, WebGLRenderer } from 'three'\n\ntype PreloadCallback = (gl: WebGLRenderer, scene: Scene, camera: Camera) => void\n\nexport const config = {\n  // Execution order for useFrames (highest = last render)\n  PRIORITY_PRELOAD: 0,\n  PRIORITY_SCISSORS: 1,\n  PRIORITY_VIEWPORTS: 1,\n  PRIORITY_GLOBAL: 1000,\n\n  DEFAULT_SCALE_MULTIPLIER: 1,\n\n  // Global rendering props\n  preloadQueue: [] as PreloadCallback[],\n}\n","import create from 'zustand'\nimport { config } from './config'\n\nimport { ScrollCallback } from './scrollbar/SmoothScrollbar.d'\n\ninterface ScrollRigStore {\n  debug: boolean\n  scaleMultiplier: number\n  globalRender: boolean\n  globalPriority: number\n  globalClearDepth: boolean\n  globalRenderQueue: false | any[]\n  clearGlobalRenderQueue: () => void\n  isCanvasAvailable: boolean\n  hasSmoothScrollbar: boolean\n  canvasChildren: Record<string, any | undefined>\n  updateCanvas: (key: string, newProps: any) => void\n  renderToCanvas: (key: string, mesh: any, props: any) => void\n  removeFromCanvas: (key: string, dispose: boolean) => void\n  pageReflow: number\n  requestReflow: () => void\n  scroll: {\n    y: number\n    x: number\n    limit: number\n    velocity: number\n    progress: number\n    direction: number\n    scrollDirection?: 'vertical' | 'horizontal'\n  }\n  scrollTo: (target: any) => void\n  onScroll: (cb: ScrollCallback) => () => void\n}\n\nconst useCanvasStore = create<ScrollRigStore>((set) => ({\n  // //////////////////////////////////////////////////////////////////////////\n  // GLOBAL ScrollRig STATE\n  // //////////////////////////////////////////////////////////////////////////\n  debug: false,\n  scaleMultiplier: config.DEFAULT_SCALE_MULTIPLIER,\n\n  globalRender: true,\n  globalPriority: config.PRIORITY_GLOBAL,\n  globalClearDepth: false,\n\n  globalRenderQueue: false,\n  clearGlobalRenderQueue: () => set(() => ({ globalRenderQueue: false })),\n\n  // true if WebGL initialized without errors\n  isCanvasAvailable: true,\n\n  // true if <VirtualScrollbar> is currently enabled\n  hasSmoothScrollbar: false,\n\n  // map of all components to render on the global canvas\n  canvasChildren: {},\n\n  // add component to canvas\n  renderToCanvas: (key, mesh, props = {}) =>\n    set(({ canvasChildren }) => {\n      // check if already mounted\n      if (Object.getOwnPropertyDescriptor(canvasChildren, key)) {\n        // increase usage count\n        canvasChildren[key].instances += 1\n        canvasChildren[key].props.inactive = false\n        return { canvasChildren }\n      } else {\n        // otherwise mount it\n        const obj = { ...canvasChildren, [key]: { mesh, props, instances: 1 } }\n        return { canvasChildren: obj }\n      }\n    }),\n\n  // pass new props to a canvas component\n  updateCanvas: (key, newProps) =>\n    // @ts-ignore\n    set(({ canvasChildren }) => {\n      if (!canvasChildren[key]) return\n      const {\n        [key]: { mesh, props, instances },\n      } = canvasChildren\n      const obj = {\n        ...canvasChildren,\n        [key]: { mesh, props: { ...props, ...newProps }, instances },\n      }\n      // console.log('updateCanvas', key, { ...props, ...newProps })\n      return { canvasChildren: obj }\n    }),\n\n  // remove component from canvas\n  removeFromCanvas: (key, dispose = true) =>\n    set(({ canvasChildren }) => {\n      // check if remove or reduce instances\n      if (canvasChildren[key]?.instances > 1) {\n        // reduce usage count\n        canvasChildren[key].instances -= 1\n        return { canvasChildren }\n      } else {\n        if (dispose) {\n          // unmount since no longer used\n          const { [key]: _omit, ...obj } = canvasChildren // make a separate copy of the obj and omit\n          return { canvasChildren: obj }\n        } else {\n          // or tell it that it is \"inactive\"\n          canvasChildren[key].instances = 0\n          canvasChildren[key].props.inactive = true\n          return { canvasChildren: { ...canvasChildren } }\n        }\n      }\n    }),\n\n  // Used to ask components to re-calculate their positions after a layout reflow\n  pageReflow: 0,\n  requestReflow: () => {\n    set((state) => {\n      return { pageReflow: state.pageReflow + 1 }\n    })\n  },\n\n  // keep track of scrollbar\n  scroll: {\n    y: 0,\n    x: 0,\n    limit: 0,\n    velocity: 0,\n    progress: 0,\n    direction: 0,\n    scrollDirection: undefined,\n  },\n  scrollTo: () => {},\n  onScroll: () => () => {},\n}))\n\nexport { useCanvasStore }\n","import { useEffect } from 'react'\nimport { ResizeObserver as Polyfill } from '@juggle/resize-observer'\n\nimport { useCanvasStore } from '../store'\n\n/**\n * Trigger reflow when WebFonts loaded\n */\nexport const ResizeManager = () => {\n  const requestReflow = useCanvasStore((state) => state.requestReflow)\n  const debug = useCanvasStore((state) => state.debug)\n\n  // reflow on webfont loaded to prevent misalignments\n  useEffect(() => {\n    const ResizeObserver = window.ResizeObserver || Polyfill\n\n    // watch out for any random height change\n    let observer = new ResizeObserver(() => {\n      requestReflow()\n      debug && console.log('ResizeManager', 'document.body height changed')\n    })\n    observer.observe(document.body)\n    return () => {\n      observer?.disconnect()\n    }\n  }, [])\n\n  return null\n}\n","import React, { useRef, forwardRef, useMemo, useImperativeHandle } from 'react'\nimport { useThree } from '@react-three/fiber'\nimport { PerspectiveCamera as PerspectiveCameraImpl } from 'three'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { useCanvasStore } from '../store'\n\ntype Props = JSX.IntrinsicElements['perspectiveCamera'] & {\n  makeDefault?: boolean\n  margin?: number\n}\n\nconst DEFAULT_FOV = 50\n\nexport const PerspectiveCamera = forwardRef(({ makeDefault = false, margin = 0, ...props }: Props, ref) => {\n  const set = useThree((state) => state.set)\n  const camera = useThree((state) => state.camera)\n  const size = useThree((state) => state.size)\n  const viewport = useThree((state) => state.viewport)\n  const cameraRef = useRef<PerspectiveCameraImpl>(null!)\n  useImperativeHandle(ref, () => cameraRef.current)\n\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n\n  // Calculate FoV or distance to match DOM size\n  const { fov, distance, aspect } = useMemo(() => {\n    const width = (size.width + margin * 2) * scaleMultiplier\n    const height = (size.height + margin * 2) * scaleMultiplier\n    const aspect = width / height\n\n    // check props vs defaults\n    let fov = props.fov || DEFAULT_FOV\n    let distance = (props?.position as number[])?.[2]\n\n    // calculate either FoV or distance to match scale\n    if (distance) {\n      // calculate FoV based on distance\n      fov = 2 * (180 / Math.PI) * Math.atan(height / (2 * distance))\n    } else {\n      // calculate distance for specified FoV\n      const ratio = Math.tan(((fov / 2.0) * Math.PI) / 180.0) * 2.0\n      distance = height / ratio\n    }\n\n    return { fov, distance, aspect }\n  }, [size, scaleMultiplier, pageReflow])\n\n  // Update camera projection and R3F viewport\n  useLayoutEffect(() => {\n    cameraRef.current.lookAt(0, 0, 0)\n    cameraRef.current.updateProjectionMatrix()\n    // https://github.com/react-spring/@react-three/fiber/issues/178\n    // Update matrix world since the renderer is a frame late\n    cameraRef.current.updateMatrixWorld()\n    // update r3f viewport which is lagging on resize\n    set((state) => ({ viewport: { ...state.viewport, ...viewport.getCurrentViewport(camera) } }))\n  }, [size, scaleMultiplier, pageReflow])\n\n  useLayoutEffect(() => {\n    if (makeDefault) {\n      const oldCam = camera\n      set(() => ({ camera: cameraRef.current! }))\n      return () => set(() => ({ camera: oldCam }))\n    }\n    // The camera should not be part of the dependency list because this components camera is a stable reference\n    // that must exchange the default, and clean up after itself on unmount.\n  }, [cameraRef, makeDefault, set])\n\n  return (\n    <perspectiveCamera\n      ref={cameraRef}\n      position={[0, 0, distance]}\n      onUpdate={(self) => self.updateProjectionMatrix()}\n      near={0.1}\n      aspect={aspect}\n      fov={fov}\n      far={distance * 2}\n      {...props}\n    />\n  )\n})\n","import React, { useRef, forwardRef, useMemo, useImperativeHandle } from 'react'\nimport { OrthographicCamera as OrthographicCameraImpl } from 'three'\nimport { useThree } from '@react-three/fiber'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { useCanvasStore } from '../store'\n\ntype Props = JSX.IntrinsicElements['orthographicCamera'] & {\n  makeDefault?: boolean\n  margin?: number\n}\nexport const OrthographicCamera = forwardRef(({ makeDefault = false, margin = 0, ...props }: Props, ref) => {\n  const set = useThree((state) => state.set)\n  const camera = useThree((state) => state.camera)\n  const size = useThree((state) => state.size)\n\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n\n  const distance = useMemo(() => {\n    const width = size.width * scaleMultiplier\n    const height = size.height * scaleMultiplier\n    return Math.max(width, height)\n  }, [size, pageReflow, scaleMultiplier])\n\n  const cameraRef = useRef<OrthographicCameraImpl>(null!)\n  useImperativeHandle(ref, () => cameraRef.current)\n  useLayoutEffect(() => {\n    cameraRef.current.lookAt(0, 0, 0)\n    cameraRef.current.updateProjectionMatrix()\n    // https://github.com/react-spring/@react-three/fiber/issues/178\n    // Update matrix world since the renderer is a frame late\n    cameraRef.current.updateMatrixWorld()\n  }, [distance, size])\n\n  useLayoutEffect(() => {\n    if (makeDefault) {\n      const oldCam = camera\n      set(() => ({ camera: cameraRef.current! }))\n      return () => set(() => ({ camera: oldCam }))\n    }\n    // The camera should not be part of the dependency list because this components camera is a stable reference\n    // that must exchange the default, and clean up after itself on unmount.\n  }, [cameraRef, makeDefault, set])\n\n  return (\n    <orthographicCamera\n      left={(size.width * scaleMultiplier) / -2 - margin * scaleMultiplier}\n      right={(size.width * scaleMultiplier) / 2 + margin * scaleMultiplier}\n      top={(size.height * scaleMultiplier) / 2 + margin * scaleMultiplier}\n      bottom={(size.height * scaleMultiplier) / -2 - margin * scaleMultiplier}\n      far={distance * 2}\n      position={[0, 0, distance]}\n      near={0.001}\n      ref={cameraRef}\n      onUpdate={(self) => self.updateProjectionMatrix()}\n      {...props}\n    />\n  )\n})\n","import { Object3D } from 'three'\n\ntype CulledObject = {\n  wasFrustumCulled?: boolean\n  wasVisible?: boolean\n} & Object3D\n\n// Use to override Frustum temporarily to pre-upload textures to GPU\nexport function setAllCulled(obj: CulledObject, overrideCulled: boolean) {\n  if (!obj) return\n  if (overrideCulled === false) {\n    obj.wasFrustumCulled = obj.frustumCulled\n    obj.wasVisible = obj.visible\n    obj.visible = true\n    obj.frustumCulled = false\n  } else {\n    obj.visible = !!obj.wasVisible\n    obj.frustumCulled = !!obj.wasFrustumCulled\n  }\n  obj.children.forEach((child) => setAllCulled(child, overrideCulled))\n}\n","import { config } from './config'\nimport { Vector2, WebGLRenderer, Scene, Camera } from 'three'\nimport { invalidate } from '@react-three/fiber'\n\nimport { setAllCulled } from './utils/helpers'\nimport { useCanvasStore } from './store'\n\nconst viewportSize = new Vector2()\n\n// Flag that we need global rendering (full screen)\nexport const requestRender = (layers = [0]) => {\n  useCanvasStore.getState().globalRenderQueue = useCanvasStore.getState().globalRenderQueue || [0]\n  useCanvasStore.getState().globalRenderQueue = [...(useCanvasStore.getState().globalRenderQueue || []), ...layers]\n}\n\nexport const renderScissor = ({\n  gl,\n  scene,\n  camera,\n  left,\n  top,\n  width,\n  height,\n  layer = 0,\n  autoClear = false,\n  clearDepth = false,\n}: any) => {\n  if (!scene || !camera) return\n  gl.autoClear = autoClear\n  gl.setScissor(left, top, width, height)\n  gl.setScissorTest(true)\n  camera.layers.set(layer)\n  clearDepth && gl.clearDepth()\n  gl.render(scene, camera)\n  gl.setScissorTest(false)\n}\n\nexport const renderViewport = ({\n  gl,\n  scene,\n  camera,\n  left,\n  top,\n  width,\n  height,\n  layer = 0,\n  scissor = true,\n  autoClear = false,\n  clearDepth = false,\n}: any) => {\n  if (!scene || !camera) return\n  gl.getSize(viewportSize)\n  gl.autoClear = autoClear\n  gl.setViewport(left, top, width, height)\n  gl.setScissor(left, top, width, height)\n  gl.setScissorTest(scissor)\n  camera.layers.set(layer)\n  clearDepth && gl.clearDepth()\n  gl.render(scene, camera)\n  gl.setScissorTest(false)\n  gl.setViewport(0, 0, viewportSize.x, viewportSize.y)\n}\n\nexport const preloadScene = (scene: Scene, camera: Camera, layer = 0, callback?: () => void) => {\n  config.preloadQueue.push((gl: WebGLRenderer, globalScene: Scene, globalCamera: Camera) => {\n    gl.setScissorTest(false)\n    setAllCulled(scene || globalScene, false)\n    camera.layers.set(layer)\n    gl.render(scene || globalScene, camera || globalCamera)\n    setAllCulled(scene || globalScene, true)\n    callback && callback()\n  })\n  // auto trigger a new frame for the preload\n  invalidate()\n}\n","import { useEffect } from 'react'\n\nimport type { Scene, Camera } from 'three'\nimport { useCanvasStore } from '../store'\nimport { preloadScene, requestRender, renderScissor, renderViewport } from '../renderer-api'\n\nexport interface ScrollRigState {\n  debug: boolean\n  isCanvasAvailable: boolean\n  hasSmoothScrollbar: boolean\n  scaleMultiplier: number\n  preloadScene: (scene: Scene, camera: Camera, layer?: number, callback?: any) => void\n  requestRender: (layers?: number[]) => void\n  renderScissor: (args: any) => void\n  renderViewport: (args: any) => void\n  reflow: () => void\n}\n\n/**\n * Public interface for ScrollRig\n */\nexport const useScrollRig = () => {\n  const isCanvasAvailable = useCanvasStore((state) => state.isCanvasAvailable)\n  const hasSmoothScrollbar = useCanvasStore((state) => state.hasSmoothScrollbar)\n  const requestReflow = useCanvasStore((state) => state.requestReflow)\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n  const debug = useCanvasStore((state) => state.debug)\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n\n  useEffect(() => {\n    if (debug) {\n      // @ts-ignore\n      window._scrollRig = window._scrollRig || {}\n      // @ts-ignore\n      window._scrollRig.reflow = requestReflow\n    }\n  }, [])\n\n  return {\n    // boolean state\n    debug,\n    isCanvasAvailable,\n    hasSmoothScrollbar,\n    // scale\n    scaleMultiplier,\n    // render API\n    preloadScene,\n    requestRender,\n    renderScissor,\n    renderViewport,\n    // recalc all tracker positions\n    reflow: requestReflow,\n    reflowCompleted: pageReflow,\n  } as ScrollRigState\n}\n","import React, { Fragment, useEffect, ReactNode, cloneElement } from 'react'\nimport { invalidate, useThree } from '@react-three/fiber'\n\nimport { useCanvasStore } from '../store'\nimport { useScrollRig } from '../hooks/useScrollRig'\n\n/**\n * Renders global children from useCanvas hook\n */\nexport const GlobalChildren = ({ children }: { children?: ReactNode }) => {\n  const gl = useThree((s) => s.gl)\n  const canvasChildren = useCanvasStore((state) => state.canvasChildren)\n  const scrollRig = useScrollRig()\n\n  useEffect(() => {\n    // render empty canvas automatically if all children were removed\n    if (!Object.keys(canvasChildren).length) {\n      scrollRig.debug && console.log('GlobalRenderer', 'auto render empty canvas')\n      // clear leftover viewports etc from unmounted components\n      gl.clear()\n      // re-render global scene in case frameloop=\"demand\" to avoid empty canvas\n      scrollRig.requestRender()\n      invalidate()\n    }\n  }, [canvasChildren])\n\n  scrollRig.debug && console.log('GlobalChildren', Object.keys(canvasChildren).length)\n  return (\n    <>\n      {children}\n      {Object.keys(canvasChildren).map((key) => {\n        const { mesh, props } = canvasChildren[key]\n\n        if (typeof mesh === 'function') {\n          return <Fragment key={key}>{mesh({ key, ...scrollRig, ...props })}</Fragment>\n        }\n\n        return cloneElement(mesh, {\n          key,\n          ...props,\n        })\n      })}\n    </>\n  )\n}\n","import { useThree, useFrame, invalidate } from '@react-three/fiber'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { config } from '../config'\nimport { useCanvasStore } from '../store'\nimport { useScrollRig } from '../hooks/useScrollRig'\n\n/**\n * Global render loop to avoid double renders on the same frame\n */\nexport const GlobalRenderer = () => {\n  const gl = useThree((s) => s.gl)\n  const frameloop = useThree((s) => s.frameloop)\n  const globalClearDepth = useCanvasStore((state) => state.globalClearDepth)\n  const globalPriority = useCanvasStore((state) => state.globalPriority)\n  const scrollRig = useScrollRig()\n\n  // https://threejs.org/docs/#api/en/renderers/WebGLRenderer.debug\n  useLayoutEffect(() => {\n    gl.debug.checkShaderErrors = scrollRig.debug\n  }, [scrollRig.debug])\n\n  // PRELOAD RENDER LOOP\n  useFrame(({ camera, scene }) => {\n    if (!config.preloadQueue.length) return\n    // Render preload frames first and clear directly\n    config.preloadQueue.forEach((render) => render(gl, scene, camera))\n    // cleanup\n    gl.clear()\n    config.preloadQueue = []\n    // trigger new frame to get correct visual state after all preloads\n    scrollRig.debug && console.log('GlobalRenderer', 'preload complete. trigger global render')\n    scrollRig.requestRender()\n    invalidate()\n  }, config.PRIORITY_PRELOAD)\n\n  // GLOBAL RENDER LOOP\n  useFrame(({ camera, scene }) => {\n    const globalRenderQueue = useCanvasStore.getState().globalRenderQueue\n\n    // Render if requested or if always on\n    if (frameloop === 'always' || globalRenderQueue) {\n      // render default layer, scene, camera\n      camera.layers.disableAll()\n      if (globalRenderQueue) {\n        // @ts-ignore\n        globalRenderQueue.forEach((layer) => {\n          camera.layers.enable(layer)\n        })\n      } else {\n        camera.layers.enable(0)\n      }\n\n      // render as HUD over any other renders by default\n      globalClearDepth && gl.clearDepth()\n      gl.render(scene, camera)\n    }\n    // cleanup for next frame\n    useCanvasStore.getState().clearGlobalRenderQueue()\n  }, globalPriority) // Take over rendering\n\n  return null\n}\n","// @ts-nocheck\nimport { Component, ReactNode } from 'react'\n\ninterface ICanvasErrorBoundary {\n  children: ReactNode\n  onError: () => void\n}\n\nexport class CanvasErrorBoundary extends Component<{}, ICanvasErrorBoundary> {\n  constructor(props) {\n    super(props)\n    this.state = { error: false }\n    this.props = props\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { error }\n  }\n\n  // componentDidCatch(error, errorInfo) {\n  //   // You can also log the error to an error reporting service\n  //   // logErrorToMyService(error, errorInfo)\n  // }\n\n  render() {\n    if (this.state.error) {\n      this.props.onError && this.props.onError(this.state.error)\n      return null\n    }\n\n    return this.props.children\n  }\n}\n","import React, { ReactNode, ReactElement } from 'react'\nimport { Canvas, Props } from '@react-three/fiber'\nimport { ResizeObserver as Polyfill } from '@juggle/resize-observer'\nimport { parse } from 'query-string'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { useCanvasStore } from '../store'\nimport { ResizeManager } from './ResizeManager'\nimport { PerspectiveCamera } from './PerspectiveCamera'\nimport { OrthographicCamera } from './OrthographicCamera'\n\nimport { GlobalChildren } from './GlobalChildren'\nimport { GlobalRenderer } from './GlobalRenderer'\nimport { CanvasErrorBoundary } from './CanvasErrorBoundary'\n\nimport { config } from '../config'\nimport { version } from '../../package.json'\n\nlet polyfill: new (callback: ResizeObserverCallback) => ResizeObserver\nif (typeof window !== 'undefined') {\n  polyfill = window.ResizeObserver || Polyfill\n}\n\ninterface IGlobalCanvas extends Omit<Props, 'children'> {\n  children?: ReactNode | ((globalChildren: ReactNode) => ReactNode)\n  as?: any\n  orthographic?: boolean\n  onError?: (props: any) => void\n  camera?: any\n  // state\n  debug?: boolean\n  scaleMultiplier?: number\n  globalRender?: boolean\n  globalPriority?: number\n  globalClearDepth?: boolean\n}\n\nconst GlobalCanvasImpl = ({\n  children,\n  as = Canvas,\n  gl,\n  style,\n  orthographic,\n  camera,\n  debug,\n  scaleMultiplier = config.DEFAULT_SCALE_MULTIPLIER,\n  globalRender = true,\n  globalPriority = config.PRIORITY_GLOBAL,\n  globalClearDepth = false,\n  ...props\n}: Omit<IGlobalCanvas, 'onError'>) => {\n  const useGlobalRenderer = useCanvasStore((state) => state.globalRender)\n\n  // enable debug mode\n  useLayoutEffect(() => {\n    if (typeof window !== 'undefined') {\n      // @ts-ignore\n      window.__r3f_scroll_rig = version\n    }\n\n    // Querystring overridess\n    const qs = parse(window.location.search)\n\n    // show debug statements\n    if (debug || typeof qs.debug !== 'undefined') {\n      useCanvasStore.setState({ debug: true })\n      console.info('@14islands/r3f-scroll-rig@' + version)\n    }\n  }, [debug])\n\n  // update state\n  useLayoutEffect(() => {\n    useCanvasStore.setState({\n      scaleMultiplier,\n      globalRender,\n      globalPriority,\n      globalClearDepth,\n    })\n  }, [scaleMultiplier, globalPriority, globalRender, globalClearDepth])\n\n  const As = as\n\n  return (\n    <As\n      id=\"ScrollRig-canvas\"\n      // use our own default camera\n      camera={{\n        manual: true,\n      }}\n      // Some sane defaults\n      gl={{\n        // https://blog.tojicode.com/2013/12/failifmajorperformancecaveat-with-great.html\n        failIfMajorPerformanceCaveat: true, // skip webgl if slow device\n        ...gl,\n      }}\n      // polyfill old iOS safari\n      resize={{ scroll: false, debounce: 0, polyfill }}\n      // default styles\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        height: '100vh', // use 100vh to avoid resize on iOS when url bar goes away\n        ...style,\n      }}\n      // allow to override anything of the above\n      {...props}\n    >\n      {/* @ts-ignore */}\n      {!orthographic && <PerspectiveCamera manual makeDefault {...camera} />}\n      {/* @ts-ignore */}\n      {orthographic && <OrthographicCamera manual makeDefault {...camera} />}\n\n      {useGlobalRenderer && <GlobalRenderer />}\n\n      {typeof children === 'function' ? children(<GlobalChildren />) : <GlobalChildren>{children}</GlobalChildren>}\n\n      <ResizeManager />\n    </As>\n  )\n}\n\nexport const GlobalCanvas = ({ children, onError, ...props }: IGlobalCanvas) => {\n  useLayoutEffect(() => {\n    document.documentElement.classList.add('js-has-global-canvas')\n  }, [])\n\n  return (\n    // @ts-ignore\n    <CanvasErrorBoundary\n      onError={(err: any) => {\n        onError && onError(err)\n        useCanvasStore.setState({ isCanvasAvailable: false }) /* WebGL failed to init */\n        document.documentElement.classList.remove('js-has-global-canvas')\n        document.documentElement.classList.add('js-global-canvas-error')\n      }}\n    >\n      <GlobalCanvasImpl {...props}>{children}</GlobalCanvasImpl>\n      <noscript>\n        <style>\n          {`\n          .ScrollRig-visibilityHidden,\n          .ScrollRig-transparentColor {\n            visibility: unset;\n            color: unset;\n          }\n          `}\n        </style>\n      </noscript>\n    </CanvasErrorBoundary>\n  )\n}\n","import React from 'react'\nimport { Color } from 'three'\n\nexport const DebugMesh = ({ scale }: { scale: [x: number, y: number, z: number] }) => (\n  <mesh scale={scale}>\n    <planeGeometry />\n    <shaderMaterial\n      args={[\n        {\n          uniforms: {\n            color: { value: new Color('hotpink') },\n          },\n          vertexShader: `\n            void main() {\n              gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n            }\n          `,\n          fragmentShader: `\n            uniform vec3 color;\n            uniform float opacity;\n            void main() {\n              gl_FragColor.rgba = vec4(color, .5);\n            }\n          `,\n        },\n      ]}\n      transparent\n    />\n  </mesh>\n)\n","import { useState, useEffect } from 'react'\nimport { ResizeObserver as Polyfill } from '@juggle/resize-observer'\nimport pkg from 'debounce'\n\nconst isBrowser = typeof window !== 'undefined'\nexport interface WindowSize {\n  width: number\n  height: number\n}\n\ntype ConfigProps = {\n  debounce?: number\n}\n\n/*\n * Triggers a resize only if the Canvas DOM element changed dimensions - not on window resize event\n *\n * This is to avoid costly re-renders when the URL bar is scrolled away on mobile\n *\n * Based on: https://usehooks.com/useWindowSize/\n */\n\nexport function useWindowSize({ debounce = 0 }: ConfigProps = {}) {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowSize>({\n    width: isBrowser ? window.innerWidth : Infinity,\n    height: isBrowser ? window.innerHeight : Infinity,\n  })\n\n  useEffect(() => {\n    // check if we can find a canvas - if so, base size on canvas instead of window\n    // since 100vh !== window.innerHeight on mobile\n    const canvasEl = document.getElementById('ScrollRig-canvas')\n\n    // Handler to call on window resize\n    function handleResize() {\n      const width = canvasEl ? canvasEl.clientWidth : window.innerWidth\n      const height = canvasEl ? canvasEl.clientHeight : window.innerHeight\n\n      if (width !== windowSize.width || height !== windowSize.height) {\n        // Set window width/height to state\n        setWindowSize({\n          width,\n          height,\n        })\n      }\n    }\n\n    const debouncedResize = pkg.debounce(handleResize, debounce)\n\n    // Add event listener\n    const ResizeObserver = window.ResizeObserver || Polyfill\n    let observer: ResizeObserver\n    if (canvasEl) {\n      observer = new ResizeObserver(debouncedResize)\n      observer.observe(canvasEl)\n    } else {\n      window.addEventListener('resize', debouncedResize)\n    }\n    // Call handler right away so state gets updated with initial window size\n    handleResize()\n    // Remove event listener on cleanup\n    return () => {\n      window.removeEventListener('resize', debouncedResize)\n      observer?.disconnect()\n    }\n  }, [windowSize, setWindowSize])\n\n  return windowSize\n}\n","// Linear mapping from range <a1, a2> to range <b1, b2>\nexport function mapLinear(x: number, a1: number, a2: number, b1: number, b2: number) {\n  return b1 + ((x - a1) * (b2 - b1)) / (a2 - a1)\n}\n","import { useCanvasStore } from '../store'\nimport { ScrollCallback } from './SmoothScrollbar.d'\n\nexport interface Scroll {\n  y: number\n  x: number\n  limit: number\n  velocity: number\n  progress: number\n  direction: number\n  scrollDirection: string\n}\n\ninterface UseScrollbarProps {\n  enabled: boolean\n  scroll: Scroll\n  scrollTo: (target: any) => void\n  onScroll: (cb: ScrollCallback) => () => void\n}\n\n/**\n * Public interface for ScrollRig\n */\nexport const useScrollbar = () => {\n  const hasSmoothScrollbar = useCanvasStore((state) => state.hasSmoothScrollbar)\n  const scroll = useCanvasStore((state) => state.scroll)\n  const scrollTo = useCanvasStore((state) => state.scrollTo)\n  const onScroll = useCanvasStore((state) => state.onScroll)\n\n  return {\n    enabled: hasSmoothScrollbar,\n    scroll,\n    scrollTo,\n    onScroll,\n  } as UseScrollbarProps\n}\n","import { useRef, useCallback, useEffect, useMemo, useState, MutableRefObject } from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { useWindowSize } from './useWindowSize'\nimport vecn from 'vecn'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { mapLinear } from '../utils/math'\nimport { useCanvasStore } from '../store'\n\nimport { useScrollbar, Scroll } from '../scrollbar/useScrollbar'\n\nimport type { Rect, Bounds, TrackerOptions, Tracker, ScrollState, UpdateCallback } from './useTracker.d'\n\nfunction updateBounds(bounds: Bounds, rect: Rect, scroll: Scroll, size: any) {\n  bounds.top = rect.top - (scroll.y || 0)\n  bounds.bottom = rect.bottom - (scroll.y || 0)\n  bounds.left = rect.left - (scroll.x || 0)\n  bounds.right = rect.right - (scroll.x || 0)\n  bounds.width = rect.width\n  bounds.height = rect.height\n  // move coordinate system so 0,0 is at center of screen\n  bounds.x = bounds.left + rect.width * 0.5 - size.width * 0.5\n  bounds.y = bounds.top + rect.height * 0.5 - size.height * 0.5\n  bounds.positiveYUpBottom = size.height - bounds.bottom // inverse Y\n}\n\nfunction updatePosition(position: vec3, bounds: Bounds, scaleMultiplier: number) {\n  position.x = bounds.x * scaleMultiplier\n  position.y = -1 * bounds.y * scaleMultiplier\n}\n\n/**\n * Returns the current Scene position of the DOM element\n * based on initial getBoundingClientRect and scroll delta from start\n */\nfunction useTracker(track: MutableRefObject<HTMLElement>, options?: TrackerOptions): Tracker {\n  const size = useWindowSize()\n  const { scroll, onScroll } = useScrollbar()\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n  const debug = useCanvasStore((state) => state.debug)\n\n  // extend defaults with optional options\n  const { rootMargin, threshold, autoUpdate, wrapper } = useMemo(() => {\n    const target = { rootMargin: '0%', threshold: 0, autoUpdate: true } as TrackerOptions\n    const opts = options || {}\n    Object.keys(opts).map((key: string, index) => {\n      if (opts[key] !== undefined) target[key] = opts[key]\n    })\n    return target\n  }, [options])\n\n  // check if element is in viewport\n  const { ref, inView: inViewport } = useInView({ rootMargin, threshold })\n\n  // bind useInView ref to current tracking element\n  useLayoutEffect(() => {\n    ref(track.current)\n  }, [track, track.current])\n\n  // Using state so it's reactive\n  const [scale, setScale] = useState<vec3>(vecn.vec3(0, 0, 0))\n\n  // Using ref because\n  const scrollState: ScrollState = useRef({\n    inViewport: false,\n    progress: -1,\n    visibility: -1,\n    viewport: -1,\n  }).current\n\n  // DOM rect (initial position in pixels offset by scroll value on page load)\n  // Using ref so we can calculate bounds & position without a re-render\n  const rect = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n  }).current\n\n  // expose internal ref as a reactive state as well\n  const [reactiveRect, setReactiveRect] = useState<Rect>(rect)\n\n  // bounding rect in pixels - updated by scroll\n  const bounds = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n    positiveYUpBottom: 0,\n  }).current\n\n  // position in viewport units - updated by scroll\n  const position = useRef(vecn.vec3(0, 0, 0)).current\n\n  // Calculate bounding Rect as soon as it's available\n  useLayoutEffect(() => {\n    const _rect = track.current?.getBoundingClientRect()\n    if (!_rect) return\n    const initialY = wrapper ? (wrapper as HTMLElement).scrollTop : window.scrollY\n    const initialX = wrapper ? (wrapper as HTMLElement).scrollLeft : window.scrollX\n    rect.top = _rect.top + initialY\n    rect.bottom = _rect.bottom + initialY\n    rect.left = _rect.left + initialX\n    rect.right = _rect.right + initialX\n    rect.width = _rect.width\n    rect.height = _rect.height\n    setReactiveRect({ ...rect })\n    setScale(vecn.vec3(rect?.width * scaleMultiplier, rect?.height * scaleMultiplier, 1))\n    debug &&\n      console.log(\n        'useTracker.getBoundingClientRect:',\n        rect,\n        'intialScroll:',\n        { initialY, initialX },\n        'size:',\n        size,\n        'pageReflow:',\n        pageReflow\n      )\n  }, [track, size, pageReflow, scaleMultiplier, debug])\n\n  const update = useCallback(\n    ({ onlyUpdateInViewport = false, scroll: overrideScroll }: UpdateCallback = {}) => {\n      if (!track.current || (onlyUpdateInViewport && !scrollState.inViewport)) {\n        return\n      }\n\n      const _scroll = overrideScroll || scroll\n\n      updateBounds(bounds, rect, _scroll, size)\n      updatePosition(position, bounds, scaleMultiplier)\n\n      // scrollState setup based on scroll direction\n      const isHorizontal = _scroll.scrollDirection === 'horizontal'\n      const sizeProp = isHorizontal ? 'width' : 'height'\n      const startProp = isHorizontal ? 'left' : 'top'\n\n      // calculate progress of passing through viewport (0 = just entered, 1 = just exited)\n      const pxInside = size[sizeProp] - bounds[startProp]\n      scrollState.progress = mapLinear(pxInside, 0, size[sizeProp] + bounds[sizeProp], 0, 1) // percent of total visible distance\n      scrollState.visibility = mapLinear(pxInside, 0, bounds[sizeProp], 0, 1) // percent of item height in view\n      scrollState.viewport = mapLinear(pxInside, 0, size[sizeProp], 0, 1) // percent of window height scrolled since visible\n    },\n    [track, size, scaleMultiplier, scroll]\n  )\n\n  // update scrollState in viewport\n  useLayoutEffect(() => {\n    scrollState.inViewport = inViewport\n    // update once more in case it went out of view\n    update({ onlyUpdateInViewport: false })\n    debug && console.log('useTracker.inViewport:', inViewport, 'update()')\n  }, [inViewport])\n\n  // re-run if the callback updated\n  useLayoutEffect(() => {\n    update({ onlyUpdateInViewport: false })\n    debug && console.log('useTracker.update on resize/reflow')\n  }, [update, pageReflow])\n\n  // auto-update on scroll\n  useEffect(() => {\n    if (autoUpdate) return onScroll((_scroll) => update({ onlyUpdateInViewport: true }))\n  }, [autoUpdate, update, onScroll])\n\n  return {\n    rect: reactiveRect, // Dom rect - doesn't change on scroll - not - reactive\n    bounds, // scrolled bounding rect in pixels - not reactive\n    scale, // reactive scene scale - includes z-axis so it can be spread onto mesh directly\n    position, // scrolled element position in viewport units - not reactive\n    scrollState, // scroll progress stats - not reactive\n    inViewport, // reactive prop for when inside viewport\n    update, // optional manual update\n  }\n}\n\nexport { useTracker }\n","import React, { memo, useState, useCallback, MutableRefObject, ReactNode } from 'react'\nimport { Scene } from 'three'\nimport { useFrame, createPortal } from '@react-three/fiber'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { config } from '../config'\nimport { useCanvasStore } from '../store'\nimport { useScrollRig } from '../hooks/useScrollRig'\nimport { DebugMesh } from './DebugMesh'\nimport { useTracker } from '../hooks/useTracker'\nimport type { ScrollState } from '../hooks/useTracker.d'\n\nexport interface ScrollSceneChildProps {\n  track: MutableRefObject<HTMLElement>\n  margin: number\n  priority: number\n  scale: vec3 | undefined\n  scrollState: ScrollState\n  inViewport: boolean\n}\n\ninterface ScrollScene {\n  track: MutableRefObject<HTMLElement>\n  children: (state: ScrollSceneChildProps) => ReactNode\n  margin?: number\n  inViewportMargin?: string\n  inViewportThreshold?: number\n  visible?: boolean\n  hideOffscreen?: boolean\n  scissor?: boolean\n  debug?: boolean\n  as?: string\n  priority?: number\n}\n\n/**\n * Generic THREE.js Scene that tracks the dimensions and position of a DOM element while scrolling\n * Scene is positioned and scaled exactly above DOM element\n *\n * @author david@14islands.com\n */\nconst ScrollSceneImpl = ({\n  track,\n  children,\n  margin = 0, // Margin outside scissor to avoid clipping vertex displacement (px)\n  inViewportMargin,\n  inViewportThreshold,\n  visible = true,\n  hideOffscreen = true,\n  scissor = false,\n  debug = false,\n  as = 'scene',\n  priority = config.PRIORITY_SCISSORS,\n  ...props\n}: ScrollScene) => {\n  const inlineSceneRef = useCallback((node: any) => {\n    if (node !== null) {\n      setScene(node)\n    }\n  }, [])\n\n  const [scene, setScene] = useState<Scene | null>(scissor ? new Scene() : null)\n  const { requestRender, renderScissor } = useScrollRig()\n  const globalRender = useCanvasStore((state) => state.globalRender)\n\n  const { bounds, scale, position, scrollState, inViewport } = useTracker(track, {\n    rootMargin: inViewportMargin,\n    threshold: inViewportThreshold,\n  })\n\n  // Hide scene when outside of viewport if `hideOffscreen` or set to `visible` prop\n  useLayoutEffect(() => {\n    if (scene) scene.visible = hideOffscreen ? inViewport && visible : visible\n  }, [scene, inViewport, hideOffscreen, visible])\n\n  // RENDER FRAME\n  useFrame(\n    ({ gl, camera }) => {\n      if (!scene) return\n\n      if (scene.visible) {\n        // move scene\n        scene.position.y = position.y\n        scene.position.x = position.x\n\n        if (scissor) {\n          renderScissor({\n            gl,\n            scene,\n            camera,\n            left: bounds.left - margin,\n            top: bounds.positiveYUpBottom - margin,\n            width: bounds.width + margin * 2,\n            height: bounds.height + margin * 2,\n          })\n        } else {\n          requestRender()\n        }\n      }\n    },\n    globalRender ? priority : undefined\n  )\n\n  const content = (\n    <>\n      {(!children || debug) && scale && <DebugMesh scale={scale} />}\n      {children &&\n        scene &&\n        scale &&\n        children({\n          // inherited props\n          track,\n          margin,\n          // new props\n          scale,\n          scrollState,\n          inViewport,\n          // useFrame render priority (in case children need to run after)\n          priority: priority,\n          // tunnel the rest\n          ...props,\n        })}\n    </>\n  )\n\n  // portal if scissor or inline nested scene\n  const InlineElement: any = as\n  // @ts-ignore\n  return scissor && scene ? createPortal(content, scene) : <InlineElement ref={inlineSceneRef}>{content}</InlineElement>\n}\n\nconst ScrollScene = memo(ScrollSceneImpl)\n\nexport { ScrollScene }\n","import React, { memo, useEffect, useState, useCallback, MutableRefObject, ReactNode } from 'react'\nimport { Scene } from 'three'\nimport { useFrame, createPortal, useThree } from '@react-three/fiber'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { config } from '../config'\nimport { useScrollRig } from '../hooks/useScrollRig'\nimport { DebugMesh } from './DebugMesh'\nimport { useTracker } from '../hooks/useTracker'\nimport type { Tracker } from '../hooks/useTracker.d'\nimport { PerspectiveCamera } from './PerspectiveCamera'\nimport { OrthographicCamera } from './OrthographicCamera'\n\nimport type { ScrollSceneChildProps } from './ScrollScene'\n\ninterface ViewportScrollScene {\n  track: MutableRefObject<HTMLElement>\n  children: (state: ScrollSceneChildProps) => ReactNode\n  margin?: number\n  inViewportMargin?: string\n  inViewportThreshold?: number\n  visible?: boolean\n  hideOffscreen?: boolean\n  debug?: boolean\n  orthographic?: boolean\n  priority?: number\n  hud?: boolean // clear depth to render on top\n  camera?: any\n}\n\n/**\n * Generic THREE.js Scene that tracks the dimensions and position of a DOM element while scrolling\n * Scene is rendered into a GL viewport matching the DOM position for better performance\n *\n * Adapted to @react-three/fiber from https://threejsfundamentals.org/threejs/lessons/threejs-multiple-scenes.html\n * @author david@14islands.com\n */\nconst Viewport = ({\n  track,\n  children,\n  margin = 0, // Margin outside viewport to avoid clipping vertex displacement (px)\n  visible = true,\n  hideOffscreen = true,\n  debug = false,\n  orthographic = false,\n  priority = config.PRIORITY_VIEWPORTS,\n  inViewport,\n  bounds,\n  scale,\n  scrollState,\n  camera,\n  hud,\n  ...props\n}: ViewportScrollScene & Tracker) => {\n  const scene = useThree((s) => s.scene)\n  const get = useThree((state) => state.get)\n  const setEvents = useThree((state) => state.setEvents)\n\n  const { renderViewport } = useScrollRig()\n\n  // Hide scene when outside of viewport if `hideOffscreen` or set to `visible` prop\n  useLayoutEffect(() => {\n    scene.visible = hideOffscreen ? inViewport && visible : visible\n  }, [inViewport, hideOffscreen, visible])\n\n  // From: https://github.com/pmndrs/drei/blob/d22fe0f58fd596c7bfb60a7a543cf6c80da87624/src/web/View.tsx#L80\n  useEffect(() => {\n    // Connect the event layer to the tracking element\n    const old = get().events.connected\n    setEvents({ connected: track.current })\n    return () => setEvents({ connected: old })\n  }, [])\n\n  // RENDER FRAME\n  useFrame(({ gl, scene, camera }) => {\n    // Render scene to viewport using local camera and limit updates using scissor test\n    if (scene.visible) {\n      renderViewport({\n        gl,\n        scene,\n        camera,\n        left: bounds.left - margin,\n        top: bounds.positiveYUpBottom - margin,\n        width: bounds.width + margin * 2,\n        height: bounds.height + margin * 2,\n        clearDepth: !!hud,\n      })\n    }\n  }, priority)\n\n  return (\n    <>\n      {!orthographic && <PerspectiveCamera manual margin={margin} makeDefault {...camera} />}\n      {orthographic && <OrthographicCamera manual margin={margin} makeDefault {...camera} />}\n      {(!children || debug) && scale && <DebugMesh scale={scale} />}\n      {children &&\n        // scene &&\n        scale &&\n        children({\n          // inherited props\n          track,\n          margin,\n          // new props\n          scale,\n          scrollState,\n          inViewport,\n          // useFrame render priority (in case children need to run after)\n          priority,\n          // tunnel the rest\n          ...props,\n        })}\n    </>\n  )\n}\n\nfunction ViewportScrollSceneImpl({\n  track,\n  margin = 0, // Margin outside viewport to avoid clipping vertex displacement (px)\n  inViewportMargin,\n  inViewportThreshold,\n  priority,\n  ...props\n}: ViewportScrollScene) {\n  const [scene] = useState(() => new Scene())\n\n  const { bounds, ...trackerProps } = useTracker(track, {\n    rootMargin: inViewportMargin,\n    threshold: inViewportThreshold,\n  })\n\n  // From: https://github.com/pmndrs/drei/blob/d22fe0f58fd596c7bfb60a7a543cf6c80da87624/src/web/View.tsx#L80\n  const compute = useCallback(\n    (event: any, state: any) => {\n      // limit events to DOM element bounds\n      if (track.current && event.target === track.current) {\n        const { width, height, left, top } = bounds\n        const mWidth = width + margin * 2\n        const mHeight = height + margin * 2\n        const x = event.clientX - left + margin\n        const y = event.clientY - top + margin\n        state.pointer.set((x / mWidth) * 2 - 1, -(y / mHeight) * 2 + 1)\n        state.raycaster.setFromCamera(state.pointer, state.camera)\n      }\n    },\n    [bounds]\n  )\n\n  return (\n    bounds &&\n    createPortal(\n      <Viewport track={track} bounds={bounds} priority={priority} margin={margin} {...props} {...trackerProps} />,\n      scene,\n      // @ts-ignore\n      { events: { compute, priority }, size: { width: bounds.width, height: bounds.height } }\n    )\n  )\n}\n\nconst ViewportScrollScene = memo(ViewportScrollSceneImpl)\n\nexport { ViewportScrollScene }\n","import { useEffect, useMemo, useCallback, ReactNode } from 'react'\nimport { MathUtils } from 'three'\n\nimport { useCanvasStore } from '../store'\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\n\nimport { ScrollRigState } from '../hooks/useScrollRig'\n/**\n * Adds THREE.js object to the GlobalCanvas while the component is mounted\n * @param {object} object THREE.js object3d\n */\nfunction useCanvas(\n  object: ReactNode | ((props: ScrollRigState) => ReactNode),\n  deps: any = {},\n  { key, dispose = true }: { key?: string; dispose?: boolean } = {}\n) {\n  const updateCanvas = useCanvasStore((state) => state.updateCanvas)\n  const renderToCanvas = useCanvasStore((state) => state.renderToCanvas)\n  const removeFromCanvas = useCanvasStore((state) => state.removeFromCanvas)\n\n  // auto generate uuid v4 key\n  const uniqueKey = useMemo(() => key || MathUtils.generateUUID(), [])\n\n  // render to canvas if not mounted already\n  useLayoutEffect(() => {\n    renderToCanvas(uniqueKey, object, { inactive: false })\n  }, [uniqueKey])\n\n  // remove from canvas if no usage (after render so new users have time to register)\n  useEffect(() => {\n    return () => {\n      removeFromCanvas(uniqueKey, dispose)\n    }\n  }, [uniqueKey])\n\n  // return function that can set new props on the canvas component\n  const set = useCallback(\n    (props: any) => {\n      updateCanvas(uniqueKey, props)\n    },\n    [updateCanvas, uniqueKey]\n  )\n\n  // auto update props when deps change\n  useEffect(() => {\n    set(deps)\n  }, [...Object.values(deps)])\n\n  return set\n}\n\nexport { useCanvas }\n","import { forwardRef, ReactNode } from 'react'\nimport { useCanvas } from '../hooks/useCanvas'\n\nimport { ScrollRigState } from '../hooks/useScrollRig'\n\ninterface IUseCanvas {\n  children: ReactNode | ((props: ScrollRigState) => ReactNode)\n  id?: string // persistent layout id\n  dispose?: boolean // dispose on unmount\n}\n\nconst UseCanvas = forwardRef(({ children, id, dispose = true, ...props }: IUseCanvas, ref) => {\n  // auto update canvas with all props\n  useCanvas(children, { ...props, ref }, { key: id, dispose })\n  return null\n})\n\nexport { UseCanvas }\n","import { useEffect, RefObject, useMemo, useState } from 'react'\nimport { useThree, useLoader } from '@react-three/fiber'\nimport { Texture, CanvasTexture, ImageBitmapLoader, TextureLoader, DefaultLoadingManager } from 'three'\nimport { suspend } from 'suspend-react'\nimport supportsWebP from 'supports-webp'\nimport equal from 'fast-deep-equal'\n\nimport { useWindowSize } from './useWindowSize'\nimport { useCanvasStore } from '../store'\n\n/**\n *  Create Threejs Texture from DOM image tag\n *\n *  - Supports <picture> and `srcset` - uses `currentSrc` to get the responsive image source\n *\n *  - Supports lazy-loading image - suspends until first load event. Warning: the GPU upload can cause jank\n *\n *  - Relies on browser cache to avoid loading image twice. We let the <img> tag load the image and suspend until it's ready.\n *\n *  - NOTE: You must add the `crossOrigin` attribute\n *     <img src=\"\" alt=\"\" crossOrigin=\"anonymous\"/>\n */\n\nlet hasWebpSupport: boolean = false\n// this test is fast - \"should\" run before first image is requested\nsupportsWebP.then((supported) => {\n  hasWebpSupport = supported\n})\n\nfunction useTextureLoader() {\n  // Use an ImageBitmapLoader if imageBitmaps are supported. Moves much of the\n  // expensive work of uploading a texture to the GPU off the main thread.\n  // Copied from: github.com/mrdoob/three.js/blob/master/examples/jsm/loaders/GLTFLoader.js#L2424\n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent) === true\n  const isFirefox = navigator.userAgent.indexOf('Firefox') > -1\n  // @ts-ignore\n  const firefoxVersion = isFirefox ? navigator.userAgent.match(/Firefox\\/([0-9]+)\\./)[1] : -1\n  return typeof createImageBitmap === 'undefined' || isSafari || (isFirefox && firefoxVersion < 98)\n}\n\nfunction useImageAsTexture(\n  imgRef: RefObject<HTMLImageElement>,\n  { initTexture = true, premultiplyAlpha = 'default' } = {}\n) {\n  const gl = useThree((s) => s.gl)\n  const size = useWindowSize()\n  const debug = useCanvasStore((state) => state.debug)\n\n  // This is a workaround for detecting lazy loading images\n  // unfortunately the `loadstart` event is not working everywhere: https://bugs.chromium.org/p/chromium/issues/detail?id=458851\n  // So we can't suspend while lazy images are loading - only detect when they finished\n  const [newSrcDetected, setNewSrcDetected] = useState(imgRef.current?.currentSrc)\n  useEffect(() => {\n    const el = imgRef.current\n    const onLoad = () => {\n      setNewSrcDetected(imgRef.current?.currentSrc)\n    }\n    el?.addEventListener('load', onLoad)\n    return () => el?.removeEventListener('load', onLoad)\n  }, [imgRef, newSrcDetected, setNewSrcDetected])\n\n  // suspend until we have currentSrc for this `size`\n  const currentSrc = suspend(\n    () => {\n      DefaultLoadingManager.itemStart('waiting for DOM image')\n      return new Promise((resolve) => {\n        const el = imgRef.current\n\n        function returnResolve() {\n          resolve(el?.currentSrc)\n          DefaultLoadingManager.itemEnd('waiting for DOM image')\n        }\n\n        // respond to future load event if not cached\n        el?.addEventListener('load', returnResolve, { once: true })\n\n        // detect if loaded from browser cache\n        if (el?.complete) {\n          el?.removeEventListener('load', returnResolve)\n          returnResolve()\n        }\n      })\n    },\n    [imgRef, size, imgRef.current?.currentSrc, newSrcDetected],\n    { equal } // use deep-equal since size ref seems to update on route change\n  ) as string\n\n  const LoaderProto = useTextureLoader() ? TextureLoader : ImageBitmapLoader\n\n  // @ts-ignore\n  const result: any = useLoader(LoaderProto, currentSrc, (loader) => {\n    if (loader instanceof ImageBitmapLoader) {\n      loader.setOptions({\n        colorSpaceConversion: 'none',\n        premultiplyAlpha, // \"none\" increases blocking time in lighthouse\n        imageOrientation: 'flipY',\n      })\n      // Add webp to Accept header if supported\n      // TODO: add check for AVIF\n      loader.setRequestHeader({\n        Accept: `${hasWebpSupport ? 'image/webp,' : ''}*/*`,\n      })\n    }\n  })\n\n  const texture = useMemo(() => {\n    if (result instanceof Texture) {\n      return result\n    }\n    if (result instanceof ImageBitmap) {\n      return new CanvasTexture(result)\n    }\n  }, [result]) as Texture\n\n  // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n  useEffect(\n    function uploadTextureToGPU() {\n      initTexture && gl.initTexture(texture)\n      debug && console.log('useImageAsTexture', 'initTexture()')\n    },\n    [gl, texture, initTexture]\n  )\n\n  return texture\n}\n\nexport { useImageAsTexture }\n","import { useEffect, useRef, useCallback, ReactElement, forwardRef, useImperativeHandle } from 'react'\nimport Lenis from '@studio-freight/lenis'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { useCanvasStore } from '../store'\nimport { ISmoothScrollbar, ScrollCallback, ScrollToTarget, ScrollToConfig } from './SmoothScrollbar.d'\n\nconst POINTER_EVENTS_ENABLE_VELOCITY = 1\nconst POINTER_EVENTS_DISABLE_VELOCITY = 1.5\n\nconst SmoothScrollbarImpl = (\n  {\n    children,\n    enabled = true,\n    locked = false,\n    scrollRestoration = 'auto',\n    disablePointerOnScroll = true,\n    horizontal = false,\n    scrollInContainer = false,\n    updateGlobalState = true,\n    onScroll,\n    config = {},\n    invalidate = () => {},\n    addEffect,\n  }: ISmoothScrollbar,\n  ref: any\n) => {\n  const innerRef = useRef<HTMLElement>()\n  const lenis = useRef<Lenis>()\n  const preventPointer = useRef(false)\n  const globalScrollState = useCanvasStore((s) => s.scroll)\n\n  // Expose lenis imperative API\n  useImperativeHandle(ref, () => ({\n    start: () => lenis.current?.start(),\n    stop: () => lenis.current?.stop(),\n    on: (event: string, cb: ScrollCallback) => lenis.current?.on(event, cb),\n    notify: () => lenis.current?.emit(), // backwards compatible\n    emit: () => lenis.current?.emit(),\n    scrollTo: (target: ScrollToTarget, props: ScrollToConfig) => lenis.current?.scrollTo(target, props),\n    raf: (time: number) => lenis.current?.raf(time),\n    __lenis: lenis.current,\n  }))\n\n  // disable pointer events while scrolling to avoid slow event handlers\n  const preventPointerEvents = useCallback(\n    (prevent: boolean) => {\n      if (!disablePointerOnScroll) return\n      if (innerRef.current && preventPointer.current !== prevent) {\n        preventPointer.current = prevent\n        innerRef.current.style.pointerEvents = prevent ? 'none' : 'auto'\n      }\n    },\n    [disablePointerOnScroll, innerRef, preventPointer]\n  )\n\n  // apply chosen scroll restoration\n  useLayoutEffect(() => {\n    if ('scrollRestoration' in window.history) {\n      window.history.scrollRestoration = scrollRestoration\n    }\n  }, [])\n\n  // INIT LENIS\n  useLayoutEffect(() => {\n    // Set up scroll containers - allows scrolling without resizing window on iOS/mobile\n    const html = document.documentElement\n    const wrapper = document.body\n    const content = document.body.firstElementChild\n\n    html.classList.toggle('ScrollRig-scrollHtml', scrollInContainer)\n    wrapper.classList.toggle('ScrollRig-scrollWrapper', scrollInContainer)\n\n    if (scrollInContainer) {\n      Object.assign(config, {\n        smoothTouch: true,\n        wrapper,\n        content,\n      })\n    }\n\n    lenis.current = new Lenis({\n      orientation: horizontal ? 'horizontal' : 'vertical',\n      ...config,\n    })\n\n    // let r3f drive the frameloop\n    let removeEffect: () => void\n    if (addEffect) {\n      removeEffect = addEffect((time: number) => lenis.current?.raf(time))\n    } else {\n      // manual animation frame\n      // TODO use framer motion / popmotion render loop?\n      let _raf: number\n      function raf(time: number) {\n        lenis.current?.raf(time)\n        _raf = requestAnimationFrame(raf)\n      }\n      _raf = requestAnimationFrame(raf)\n      removeEffect = () => cancelAnimationFrame(_raf)\n    }\n\n    return () => {\n      removeEffect()\n      lenis.current?.destroy()\n    }\n  }, [])\n\n  // BIND TO LENIS SCROLL EVENT\n  useLayoutEffect(() => {\n    const _onScroll = ({ scroll, limit, velocity, direction, progress }: any) => {\n      const y = !horizontal ? scroll : 0\n      const x = horizontal ? scroll : 0\n\n      // update global scroll store\n      if (updateGlobalState) {\n        globalScrollState.y = y\n        globalScrollState.x = x\n        globalScrollState.limit = limit\n        globalScrollState.velocity = velocity\n        globalScrollState.direction = direction\n        globalScrollState.progress = progress || 0 // avoid NaN from Lenis\n      }\n\n      if (Math.abs(velocity) > POINTER_EVENTS_DISABLE_VELOCITY) {\n        preventPointerEvents(true)\n      }\n      if (Math.abs(velocity) < POINTER_EVENTS_ENABLE_VELOCITY) {\n        preventPointerEvents(false)\n      }\n\n      onScroll && onScroll({ scroll, limit, velocity, direction, progress })\n\n      invalidate() // demand a R3F frame on scroll\n    }\n\n    lenis.current?.on('scroll', _onScroll)\n\n    // update global state\n    if (updateGlobalState) {\n      globalScrollState.scrollDirection = horizontal ? 'horizontal' : 'vertical'\n\n      // expose global scrollTo and onScroll function to subscribe to scroll events\n      useCanvasStore.setState({\n        scrollTo: (...args) => {\n          lenis.current?.scrollTo(...args)\n        },\n        onScroll: (cb: ScrollCallback) => {\n          lenis.current?.on('scroll', cb)\n          lenis.current?.emit() // send current scroll to new subscriber\n          return () => lenis.current?.off('scroll', cb)\n        },\n      })\n\n      // Set current scroll position on load in case reloaded further down\n      useCanvasStore.getState().scroll.y = window.scrollY\n      useCanvasStore.getState().scroll.x = window.scrollX\n    }\n\n    // fire our internal scroll callback to update globalState\n    lenis.current?.emit()\n    return () => {\n      lenis.current?.off('scroll', _onScroll)\n      // reset store\n      useCanvasStore.setState({\n        onScroll: () => () => {},\n        scrollTo: () => {},\n      })\n    }\n  }, [])\n\n  // Interaction events - invalidate R3F loop and enable pointer events\n  useLayoutEffect(() => {\n    const invalidateOnWheelEvent = () => invalidate()\n    const onPointerInteraction = () => preventPointerEvents(false)\n    window.addEventListener('pointermove', onPointerInteraction)\n    window.addEventListener('pointerdown', onPointerInteraction)\n    window.addEventListener('wheel', invalidateOnWheelEvent)\n    return () => {\n      window.removeEventListener('pointermove', onPointerInteraction)\n      window.removeEventListener('pointerdown', onPointerInteraction)\n      window.removeEventListener('wheel', invalidateOnWheelEvent)\n    }\n  }, [])\n\n  // Mark as enabled in global state\n  useEffect(() => {\n    if (updateGlobalState) {\n      document.documentElement.classList.toggle('js-smooth-scrollbar-enabled', enabled)\n      document.documentElement.classList.toggle('js-smooth-scrollbar-disabled', !enabled)\n      useCanvasStore.setState({ hasSmoothScrollbar: enabled })\n    }\n  }, [enabled])\n\n  useEffect(() => {\n    locked ? lenis.current?.stop() : lenis.current?.start()\n  }, [locked])\n\n  {\n    /* Use function child so we can spread props\n    - for instance disable pointer events while scrolling */\n  }\n  return children({ ref: innerRef })\n}\n\nexport const SmoothScrollbar = forwardRef<any, ISmoothScrollbar>(SmoothScrollbarImpl)\n","import React, { forwardRef } from 'react'\nimport { SmoothScrollbar } from '../scrollbar/SmoothScrollbar'\nimport { ISmoothScrollbar } from '../scrollbar/SmoothScrollbar.d'\nimport { addEffect, invalidate } from '@react-three/fiber'\n\nfunction R3FSmoothScrollbar(props: ISmoothScrollbar, ref: any) {\n  return <SmoothScrollbar ref={ref} invalidate={invalidate} addEffect={addEffect} {...props} />\n}\n\nexport default forwardRef<any, ISmoothScrollbar>(R3FSmoothScrollbar)\n","import './styles/index.css'\n\n// Components\nexport { GlobalCanvas } from './components/GlobalCanvas'\nexport { ScrollScene } from './components/ScrollScene'\nexport { ViewportScrollScene } from './components/ViewportScrollScene'\nexport { UseCanvas } from './components/UseCanvas'\n\n// Hooks\nexport { useScrollRig } from './hooks/useScrollRig'\nexport { useCanvas } from './hooks/useCanvas'\nexport { useScrollbar } from './scrollbar/useScrollbar'\nexport { useTracker } from './hooks/useTracker'\n\n// Utils hooks\nexport { useImageAsTexture } from './hooks/useImageAsTexture'\n\n// Scrollbar\nexport { default as SmoothScrollbar } from './components/R3FSmoothScrollbar'\n\n// CSS class names for hiding stuff\n// Matching css styles can be imported from @14islands/r3f-scrollr-rig/css\nexport const styles = {\n  hidden: 'ScrollRig-visibilityHidden',\n  hiddenWhenSmooth: 'ScrollRig-visibilityHidden ScrollRig-hiddenIfSmooth',\n  transparentColor: 'ScrollRig-transparentColor',\n  transparentColorWhenSmooth: 'ScrollRig-transparentColor ScrollRig-hiddenIfSmooth',\n}\n\n// Private-ish\n// ----------------------------------\nexport { useCanvasStore } from './store'\n\n// Types\nexport type { ScrollState } from './hooks/useTracker.d'\n"],"names":["useLayoutEffect","window","vanillaUseLayoutEffect","useEffect","config","PRIORITY_PRELOAD","PRIORITY_SCISSORS","PRIORITY_VIEWPORTS","PRIORITY_GLOBAL","DEFAULT_SCALE_MULTIPLIER","preloadQueue","useCanvasStore","create","set","debug","scaleMultiplier","globalRender","globalPriority","globalClearDepth","globalRenderQueue","clearGlobalRenderQueue","isCanvasAvailable","hasSmoothScrollbar","canvasChildren","renderToCanvas","key","mesh","props","Object","getOwnPropertyDescriptor","instances","inactive","_extends","updateCanvas","newProps","removeFromCanvas","dispose","_canvasChildren$key","_objectWithoutPropertiesLoose","map","_toPropertyKey","pageReflow","requestReflow","state","scroll","y","x","limit","velocity","progress","direction","scrollDirection","undefined","scrollTo","onScroll","ResizeManager","observer","ResizeObserver","Polyfill","console","log","observe","document","body","disconnect","PerspectiveCamera","forwardRef","_ref","ref","makeDefault","margin","_excluded","useThree","camera","size","viewport","cameraRef","useRef","useImperativeHandle","current","fov","distance","aspect","useMemo","_props$position","height","width","position","Math","PI","atan","tan","lookAt","updateProjectionMatrix","updateMatrixWorld","getCurrentViewport","oldCam","React","onUpdate","self","near","far","OrthographicCamera","max","left","right","top","bottom","setAllCulled","obj","overrideCulled","wasFrustumCulled","frustumCulled","wasVisible","visible","children","forEach","child","viewportSize","Vector2","requestRender","layers","getState","renderScissor","gl","scene","layer","autoClear","clearDepth","setScissor","setScissorTest","render","renderViewport","scissor","getSize","setViewport","preloadScene","callback","push","globalScene","globalCamera","invalidate","useScrollRig","_scrollRig","reflow","reflowCompleted","GlobalChildren","s","scrollRig","keys","length","clear","createElement","Fragment","cloneElement","GlobalRenderer","frameloop","checkShaderErrors","useFrame","disableAll","enable","CanvasErrorBoundary","Component","constructor","super","this","error","static","onError","_excluded2","polyfill","GlobalCanvasImpl","as","Canvas","style","orthographic","useGlobalRenderer","__r3f_scroll_rig","version","qs","parse","location","search","setState","info","id","manual","failIfMajorPerformanceCaveat","resize","debounce","GlobalCanvas","_ref2","documentElement","classList","add","err","remove","DebugMesh","scale","args","uniforms","color","value","Color","vertexShader","fragmentShader","transparent","isBrowser","useWindowSize","windowSize","setWindowSize","useState","innerWidth","Infinity","innerHeight","canvasEl","getElementById","handleResize","clientWidth","clientHeight","debouncedResize","pkg","addEventListener","_observer","removeEventListener","mapLinear","a1","a2","b1","b2","useScrollbar","enabled","useTracker","track","options","rootMargin","threshold","autoUpdate","wrapper","target","opts","index","inView","inViewport","useInView","setScale","vecn","vec3","scrollState","visibility","rect","reactiveRect","setReactiveRect","bounds","positiveYUpBottom","_track$current","_rect","getBoundingClientRect","initialY","scrollTop","scrollY","initialX","scrollLeft","scrollX","update","useCallback","onlyUpdateInViewport","overrideScroll","_scroll","updateBounds","updatePosition","isHorizontal","sizeProp","pxInside","ScrollScene","memo","inViewportMargin","inViewportThreshold","hideOffscreen","priority","inlineSceneRef","node","setScene","Scene","content","InlineElement","createPortal","_excluded3","Viewport","hud","get","setEvents","old","events","connected","ViewportScrollScene","_useTracker","trackerProps","compute","event","pointer","clientX","clientY","raycaster","setFromCamera","useCanvas","object","deps","uniqueKey","MathUtils","generateUUID","values","UseCanvas","hasWebpSupport","useImageAsTexture","imgRef","initTexture","premultiplyAlpha","_imgRef$current","_imgRef$current3","newSrcDetected","setNewSrcDetected","currentSrc","el","onLoad","_imgRef$current2","suspend","DefaultLoadingManager","itemStart","Promise","resolve","returnResolve","itemEnd","once","complete","equal","LoaderProto","isSafari","test","navigator","userAgent","isFirefox","indexOf","firefoxVersion","match","createImageBitmap","useTextureLoader","TextureLoader","ImageBitmapLoader","result","useLoader","loader","setOptions","colorSpaceConversion","imageOrientation","setRequestHeader","Accept","texture","Texture","ImageBitmap","CanvasTexture","supportsWebP","then","supported","SmoothScrollbar","SmoothScrollbarImpl","locked","scrollRestoration","disablePointerOnScroll","horizontal","scrollInContainer","updateGlobalState","addEffect","innerRef","lenis","preventPointer","globalScrollState","start","_lenis$current","stop","_lenis$current2","on","cb","_lenis$current3","notify","_lenis$current4","emit","_lenis$current5","_lenis$current6","raf","time","_lenis$current7","__lenis","preventPointerEvents","prevent","pointerEvents","history","html","firstElementChild","removeEffect","toggle","assign","smoothTouch","Lenis","orientation","_lenis$current8","_raf","requestAnimationFrame","_lenis$current9","cancelAnimationFrame","_lenis$current10","destroy","_lenis$current11","_lenis$current16","_onScroll","abs","_lenis$current12","_lenis$current13","_lenis$current14","_lenis$current15","off","_lenis$current17","invalidateOnWheelEvent","onPointerInteraction","_lenis$current18","_lenis$current19","styles","hidden","hiddenWhenSmooth","transparentColor","transparentColorWhenSmooth"],"mappings":"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"}