{"version":3,"file":"scrollbar.modern.js","sources":["../src/config.ts","../src/store.ts","../src/scrollbar/useScrollbar.ts","../src/hooks/useIsomorphicLayoutEffect.ts","../src/scrollbar/SmoothScrollbar.tsx","../src/hooks/useWindowSize.ts","../src/utils/math.ts","../src/utils/helpers.ts","../src/renderer-api.ts","../src/hooks/useTracker.ts","../src/hooks/useScrollRig.ts"],"sourcesContent":["// Global config\n\nimport { Scene, Camera, WebGLRenderer } from 'three'\n\ntype PreloadCallback = (gl: WebGLRenderer, scene: Scene, camera: Camera) => void\n\nexport const config = {\n  // Execution order for useFrames (highest = last render)\n  PRIORITY_PRELOAD: 0,\n  PRIORITY_SCISSORS: 1,\n  PRIORITY_VIEWPORTS: 1,\n  PRIORITY_GLOBAL: 1000,\n\n  DEFAULT_SCALE_MULTIPLIER: 1,\n\n  // Global rendering props\n  preloadQueue: [] as PreloadCallback[],\n}\n","import create from 'zustand'\nimport { config } from './config'\n\nimport { ScrollCallback } from './scrollbar/SmoothScrollbar'\n\ninterface ScrollRigStore {\n  debug: boolean\n  scaleMultiplier: number\n  globalRender: boolean\n  globalPriority: number\n  globalClearDepth: boolean\n  globalRenderQueue: false | any[]\n  clearGlobalRenderQueue: () => void\n  isCanvasAvailable: boolean\n  hasSmoothScrollbar: boolean\n  canvasChildren: Record<string, any | undefined>\n  updateCanvas: (key: string, newProps: any) => void\n  renderToCanvas: (key: string, mesh: any, props: any) => void\n  removeFromCanvas: (key: string, dispose: boolean) => void\n  pageReflow: number\n  requestReflow: () => void\n  scroll: {\n    y: number\n    x: number\n    limit: number\n    velocity: number\n    progress: number\n    direction: number\n    scrollDirection?: 'vertical' | 'horizontal'\n  }\n  scrollTo: (target: any) => void\n  onScroll: (cb: ScrollCallback) => () => void\n}\n\nconst useCanvasStore = create<ScrollRigStore>((set) => ({\n  // //////////////////////////////////////////////////////////////////////////\n  // GLOBAL ScrollRig STATE\n  // //////////////////////////////////////////////////////////////////////////\n  debug: false,\n  scaleMultiplier: config.DEFAULT_SCALE_MULTIPLIER,\n\n  globalRender: true,\n  globalPriority: config.PRIORITY_GLOBAL,\n  globalClearDepth: false,\n\n  globalRenderQueue: false,\n  clearGlobalRenderQueue: () => set(() => ({ globalRenderQueue: false })),\n\n  // true if WebGL initialized without errors\n  isCanvasAvailable: true,\n\n  // true if <VirtualScrollbar> is currently enabled\n  hasSmoothScrollbar: false,\n\n  // map of all components to render on the global canvas\n  canvasChildren: {},\n\n  // add component to canvas\n  renderToCanvas: (key, mesh, props = {}) =>\n    set(({ canvasChildren }) => {\n      // check if already mounted\n      if (Object.getOwnPropertyDescriptor(canvasChildren, key)) {\n        // increase usage count\n        canvasChildren[key].instances += 1\n        canvasChildren[key].props.inactive = false\n        return { canvasChildren }\n      } else {\n        // otherwise mount it\n        const obj = { ...canvasChildren, [key]: { mesh, props, instances: 1 } }\n        return { canvasChildren: obj }\n      }\n    }),\n\n  // pass new props to a canvas component\n  updateCanvas: (key, newProps) =>\n    // @ts-ignore\n    set(({ canvasChildren }) => {\n      if (!canvasChildren[key]) return\n      const {\n        [key]: { mesh, props, instances },\n      } = canvasChildren\n      const obj = {\n        ...canvasChildren,\n        [key]: { mesh, props: { ...props, ...newProps }, instances },\n      }\n      // console.log('updateCanvas', key, { ...props, ...newProps })\n      return { canvasChildren: obj }\n    }),\n\n  // remove component from canvas\n  removeFromCanvas: (key, dispose = true) =>\n    set(({ canvasChildren }) => {\n      // check if remove or reduce instances\n      if (canvasChildren[key]?.instances > 1) {\n        // reduce usage count\n        canvasChildren[key].instances -= 1\n        return { canvasChildren }\n      } else {\n        if (dispose) {\n          // unmount since no longer used\n          const { [key]: _omit, ...obj } = canvasChildren // make a separate copy of the obj and omit\n          return { canvasChildren: obj }\n        } else {\n          // or tell it that it is \"inactive\"\n          canvasChildren[key].instances = 0\n          canvasChildren[key].props.inactive = true\n          return { canvasChildren: { ...canvasChildren } }\n        }\n      }\n    }),\n\n  // Used to ask components to re-calculate their positions after a layout reflow\n  pageReflow: 0,\n  requestReflow: () => {\n    set((state) => {\n      return { pageReflow: state.pageReflow + 1 }\n    })\n  },\n\n  // keep track of scrollbar\n  scroll: {\n    y: 0,\n    x: 0,\n    limit: 0,\n    velocity: 0,\n    progress: 0,\n    direction: 0,\n    scrollDirection: undefined,\n  },\n  scrollTo: (target) => window.scrollTo(0, target),\n  onScroll: () => () => {},\n}))\n\nexport { useCanvasStore }\n","import { useCanvasStore } from '../store'\nimport { ScrollCallback } from './SmoothScrollbar'\n\nexport interface Scroll {\n  y: number\n  x: number\n  limit: number\n  velocity: number\n  progress: number\n  direction: number\n  scrollDirection: string\n}\n\ninterface UseScrollbarProps {\n  enabled: boolean\n  scroll: Scroll\n  scrollTo: (target: any) => void\n  onScroll: (cb: ScrollCallback) => () => void\n}\n\n/**\n * Public interface for ScrollRig\n */\nexport const useScrollbar = () => {\n  const hasSmoothScrollbar = useCanvasStore((state) => state.hasSmoothScrollbar)\n  const scroll = useCanvasStore((state) => state.scroll)\n  const scrollTo = useCanvasStore((state) => state.scrollTo)\n  const onScroll = useCanvasStore((state) => state.onScroll)\n\n  return {\n    enabled: hasSmoothScrollbar,\n    scroll,\n    scrollTo,\n    onScroll,\n  } as UseScrollbarProps\n}\n","import { useEffect, useLayoutEffect as vanillaUseLayoutEffect } from 'react'\n\nexport const isBrowser = typeof window !== 'undefined'\n\nexport const useLayoutEffect = isBrowser ? vanillaUseLayoutEffect : useEffect\n","import { useEffect, useRef, useCallback, ReactElement, forwardRef, useImperativeHandle } from 'react'\nimport Lenis from '@studio-freight/lenis'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { useCanvasStore } from '../store'\n\nexport type ScrollCallback = (props: {\n  scroll: number\n  limit: number\n  velocity: number\n  direction: number\n  progress: number\n}) => void\n\nexport type ScrollToTarget = number | HTMLElement | string\nexport type ScrollToConfig = {\n  offset: number\n  immediate: boolean\n  duration: number\n  easing: (t: number) => number\n}\n\nexport interface ISmoothScrollbar {\n  children: (props: any) => ReactElement\n  enabled?: boolean\n  locked?: boolean\n  scrollRestoration?: ScrollRestoration\n  disablePointerOnScroll?: boolean\n  horizontal?: boolean\n  scrollInContainer?: boolean\n  updateGlobalState?: boolean\n  onScroll?: ScrollCallback\n  config?: object\n  invalidate?: () => void\n  addEffect?: (cb: any) => () => void\n}\n\nconst SmoothScrollbarImpl = (\n  {\n    children,\n    enabled = true,\n    locked = false,\n    scrollRestoration = 'auto',\n    disablePointerOnScroll = true,\n    horizontal = false,\n    scrollInContainer = false,\n    updateGlobalState = true,\n    onScroll,\n    config = {},\n    invalidate = () => {},\n    addEffect,\n  }: ISmoothScrollbar,\n  ref: any\n) => {\n  const innerRef = useRef<HTMLElement>()\n  const lenis = useRef<Lenis>()\n  const preventPointer = useRef(false)\n  const globalScrollState = useCanvasStore((state) => state.scroll)\n\n  // Expose lenis imperative API\n  useImperativeHandle(ref, () => ({\n    start: () => lenis.current?.start(),\n    stop: () => lenis.current?.stop(),\n    on: (event: string, cb: ScrollCallback) => lenis.current?.on(event, cb),\n    once: (event: string, cb: ScrollCallback) => lenis.current?.once(event, cb),\n    off: (event: string, cb?: ScrollCallback) => lenis.current?.off(event, cb),\n    notify: () => lenis.current?.notify(),\n    scrollTo: (target: ScrollToTarget, props: ScrollToConfig) => lenis.current?.scrollTo(target, props),\n    raf: (time: number) => lenis.current?.raf(time),\n    __lenis: lenis.current,\n  }))\n\n  // disable pointer events while scrolling to avoid slow event handlers\n  const preventPointerEvents = (prevent: boolean) => {\n    if (!disablePointerOnScroll) return\n    if (innerRef.current && preventPointer.current !== prevent) {\n      preventPointer.current = prevent\n      console.log(prevent)\n      innerRef.current.style.pointerEvents = prevent ? 'none' : 'auto'\n    }\n  }\n\n  // reset pointer events when moving mouse\n  const onMouseMove = useCallback(() => {\n    preventPointerEvents(false)\n  }, [])\n\n  // function to bind to scroll event\n  // return function that will unbind same callback\n  const globalOnScroll = useCallback((cb: ScrollCallback) => {\n    lenis.current?.on('scroll', cb)\n    return () => lenis.current?.off('scroll', cb)\n  }, [])\n\n  // apply chosen scroll restoration\n  useLayoutEffect(() => {\n    if ('scrollRestoration' in window.history) {\n      window.history.scrollRestoration = scrollRestoration\n    }\n  }, [])\n\n  // INIT LENIS\n  useLayoutEffect(() => {\n    // Set up scroll containers - allows scrolling without resizing window on iOS/mobile\n    const html = document.documentElement\n    const wrapper = document.body\n    const content = document.body.firstElementChild\n\n    html.classList.toggle('ScrollRig-scrollHtml', scrollInContainer)\n    wrapper.classList.toggle('ScrollRig-scrollWrapper', scrollInContainer)\n\n    if (scrollInContainer) {\n      Object.assign(config, {\n        smoothTouch: true,\n        wrapper,\n        content,\n      })\n    }\n\n    lenis.current = new Lenis({\n      direction: horizontal ? 'horizontal' : 'vertical',\n      ...config,\n    })\n\n    // let r3f drive the frameloop\n    let removeEffect: () => void\n    if (addEffect) {\n      removeEffect = addEffect((time: number) => lenis.current?.raf(time))\n    } else {\n      // manual animation frame\n      let _raf: number\n      function raf(time: number) {\n        lenis.current?.raf(time)\n        _raf = requestAnimationFrame(raf)\n      }\n      _raf = requestAnimationFrame(raf)\n      removeEffect = () => cancelAnimationFrame(_raf)\n    }\n\n    return () => {\n      removeEffect()\n      lenis.current?.destroy()\n    }\n  }, [])\n\n  // BIND TO LENIS SCROLL EVENT\n  useLayoutEffect(() => {\n    // update global scroll store\n    lenis.current?.on('scroll', ({ scroll, limit, velocity, direction, progress }: any) => {\n      const y = !horizontal ? scroll : 0\n      const x = horizontal ? scroll : 0\n\n      if (updateGlobalState) {\n        globalScrollState.y = y\n        globalScrollState.x = x\n        globalScrollState.limit = limit\n        globalScrollState.velocity = velocity\n        globalScrollState.direction = direction\n        globalScrollState.progress = progress\n      }\n\n      preventPointerEvents(Math.abs(velocity) > 0.14)\n\n      onScroll && onScroll({ scroll, limit, velocity, direction, progress })\n\n      invalidate()\n    })\n\n    // update global state\n    if (updateGlobalState) {\n      globalScrollState.scrollDirection = horizontal ? 'horizontal' : 'vertical'\n\n      // expose global scrollTo function\n      // @ts-ignore\n      useCanvasStore.setState({ scrollTo: lenis.current?.scrollTo })\n\n      // expose global onScroll function to subscribe to scroll events\n      // @ts-ignore\n      useCanvasStore.setState({ onScroll: globalOnScroll })\n\n      // Set current scroll position on load in case reloaded further down\n      useCanvasStore.getState().scroll.y = window.scrollY\n      useCanvasStore.getState().scroll.x = window.scrollX\n    }\n\n    // trigger initial scroll event to update global state\n    lenis.current?.notify()\n\n    // make sure R3F loop is invalidated when scrolling\n    const invalidateOnWheelEvent = () => invalidate()\n\n    window.addEventListener('pointermove', onMouseMove)\n    window.addEventListener('wheel', invalidateOnWheelEvent)\n    return () => {\n      lenis.current?.off('scroll')\n      window.removeEventListener('pointermove', onMouseMove)\n      window.removeEventListener('wheel', invalidateOnWheelEvent)\n    }\n  }, [])\n\n  useEffect(() => {\n    // Mark as enabled in global state\n    if (updateGlobalState) {\n      document.documentElement.classList.toggle('js-smooth-scrollbar-enabled', enabled)\n      document.documentElement.classList.toggle('js-smooth-scrollbar-disabled', !enabled)\n      useCanvasStore.setState({ hasSmoothScrollbar: enabled })\n    }\n  }, [enabled])\n\n  useEffect(() => {\n    locked ? lenis.current?.stop() : lenis.current?.start()\n  }, [locked])\n\n  {\n    /* Use function child so we can spread props\n    - for instance disable pointer events while scrolling */\n  }\n  return children({ ref: innerRef })\n}\n\nexport const SmoothScrollbar = forwardRef<any, ISmoothScrollbar>(SmoothScrollbarImpl)\n","import { useState, useEffect } from 'react'\nimport { ResizeObserver as Polyfill } from '@juggle/resize-observer'\nimport pkg from 'debounce'\n\nconst isBrowser = typeof window !== 'undefined'\nexport interface WindowSize {\n  width: number\n  height: number\n}\n\ntype ConfigProps = {\n  debounce?: number\n}\n\n/*\n * Triggers a resize only if the Canvas DOM element changed dimensions - not on window resize event\n *\n * This is to avoid costly re-renders when the URL bar is scrolled away on mobile\n *\n * Based on: https://usehooks.com/useWindowSize/\n */\n\nexport function useWindowSize({ debounce = 0 }: ConfigProps = {}) {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowSize>({\n    width: isBrowser ? window.innerWidth : Infinity,\n    height: isBrowser ? window.innerHeight : Infinity,\n  })\n\n  useEffect(() => {\n    // check if we can find a canvas - if so, base size on canvas instead of window\n    // since 100vh !== window.innerHeight on mobile\n    const canvasEl = document.getElementById('ScrollRig-canvas')\n\n    // Handler to call on window resize\n    function handleResize() {\n      const width = canvasEl ? canvasEl.clientWidth : window.innerWidth\n      const height = canvasEl ? canvasEl.clientHeight : window.innerHeight\n\n      if (width !== windowSize.width || height !== windowSize.height) {\n        // Set window width/height to state\n        setWindowSize({\n          width,\n          height,\n        })\n      }\n    }\n\n    const debouncedResize = pkg.debounce(handleResize, debounce)\n\n    // Add event listener\n    const ResizeObserver = window.ResizeObserver || Polyfill\n    let observer: ResizeObserver\n    if (canvasEl) {\n      observer = new ResizeObserver(debouncedResize)\n      observer.observe(canvasEl)\n    } else {\n      window.addEventListener('resize', debouncedResize)\n    }\n    // Call handler right away so state gets updated with initial window size\n    handleResize()\n    // Remove event listener on cleanup\n    return () => {\n      window.removeEventListener('resize', debouncedResize)\n      observer?.disconnect()\n    }\n  }, [windowSize, setWindowSize])\n\n  return windowSize\n}\n","// Linear mapping from range <a1, a2> to range <b1, b2>\nexport function mapLinear(x: number, a1: number, a2: number, b1: number, b2: number) {\n  return b1 + ((x - a1) * (b2 - b1)) / (a2 - a1)\n}\n","import { Object3D } from 'three'\n\ntype CulledObject = {\n  wasFrustumCulled?: boolean\n  wasVisible?: boolean\n} & Object3D\n\n// Use to override Frustum temporarily to pre-upload textures to GPU\nexport function setAllCulled(obj: CulledObject, overrideCulled: boolean) {\n  if (!obj) return\n  if (overrideCulled === false) {\n    obj.wasFrustumCulled = obj.frustumCulled\n    obj.wasVisible = obj.visible\n    obj.visible = true\n    obj.frustumCulled = false\n  } else {\n    obj.visible = !!obj.wasVisible\n    obj.frustumCulled = !!obj.wasFrustumCulled\n  }\n  obj.children.forEach((child) => setAllCulled(child, overrideCulled))\n}\n","import { config } from './config'\nimport { Vector2, WebGLRenderer, Scene, Camera } from 'three'\nimport { invalidate } from '@react-three/fiber'\n\nimport { setAllCulled } from './utils/helpers'\nimport { useCanvasStore } from './store'\n\nconst viewportSize = new Vector2()\n\n// Flag that we need global rendering (full screen)\nexport const requestRender = (layers = [0]) => {\n  useCanvasStore.getState().globalRenderQueue = useCanvasStore.getState().globalRenderQueue || [0]\n  useCanvasStore.getState().globalRenderQueue = [...(useCanvasStore.getState().globalRenderQueue || []), ...layers]\n}\n\nexport const renderScissor = ({\n  gl,\n  scene,\n  camera,\n  left,\n  top,\n  width,\n  height,\n  layer = 0,\n  autoClear = false,\n  clearDepth = false,\n}: any) => {\n  if (!scene || !camera) return\n  gl.autoClear = autoClear\n  gl.setScissor(left, top, width, height)\n  gl.setScissorTest(true)\n  camera.layers.set(layer)\n  clearDepth && gl.clearDepth()\n  gl.render(scene, camera)\n  gl.setScissorTest(false)\n}\n\nexport const renderViewport = ({\n  gl,\n  scene,\n  camera,\n  left,\n  top,\n  width,\n  height,\n  layer = 0,\n  scissor = true,\n  autoClear = false,\n  clearDepth = false,\n}: any) => {\n  if (!scene || !camera) return\n  gl.getSize(viewportSize)\n  gl.autoClear = autoClear\n  gl.setViewport(left, top, width, height)\n  gl.setScissor(left, top, width, height)\n  gl.setScissorTest(scissor)\n  camera.layers.set(layer)\n  clearDepth && gl.clearDepth()\n  gl.render(scene, camera)\n  gl.setScissorTest(false)\n  gl.setViewport(0, 0, viewportSize.x, viewportSize.y)\n}\n\nexport const preloadScene = (scene: Scene, camera: Camera, layer = 0, callback?: () => void) => {\n  config.preloadQueue.push((gl: WebGLRenderer, globalScene: Scene, globalCamera: Camera) => {\n    gl.setScissorTest(false)\n    setAllCulled(scene || globalScene, false)\n    camera.layers.set(layer)\n    gl.render(scene || globalScene, camera || globalCamera)\n    setAllCulled(scene || globalScene, true)\n    callback && callback()\n  })\n  // auto trigger a new frame for the preload\n  invalidate()\n}\n","import { useRef, useCallback, useEffect, useMemo, useState, MutableRefObject } from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { useWindowSize } from './useWindowSize'\nimport vecn from 'vecn'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { mapLinear } from '../utils/math'\nimport { useCanvasStore } from '../store'\nimport { useScrollRig } from './useScrollRig'\n\nimport { useScrollbar, Scroll } from '../scrollbar/useScrollbar'\n\nimport type { Rect, Bounds, TrackerOptions, Tracker, ScrollState, UpdateCallback } from './useTracker.d'\n\nfunction updateBounds(bounds: Bounds, rect: Rect, scroll: Scroll, size: any) {\n  bounds.top = rect.top - (scroll.y || 0)\n  bounds.bottom = rect.bottom - (scroll.y || 0)\n  bounds.left = rect.left - (scroll.x || 0)\n  bounds.right = rect.right - (scroll.x || 0)\n  bounds.width = rect.width\n  bounds.height = rect.height\n  // move coordinate system so 0,0 is at center of screen\n  bounds.x = bounds.left + rect.width * 0.5 - size.width * 0.5\n  bounds.y = bounds.top + rect.height * 0.5 - size.height * 0.5\n  bounds.positiveYUpBottom = size.height - bounds.bottom // inverse Y\n}\n\nfunction updatePosition(position: vec3, bounds: Bounds, scaleMultiplier: number) {\n  position.x = bounds.x * scaleMultiplier\n  position.y = -1 * bounds.y * scaleMultiplier\n}\n\n/**\n * Returns the current Scene position of the DOM element\n * based on initial getBoundingClientRect and scroll delta from start\n */\nfunction useTracker(track: MutableRefObject<HTMLElement>, options?: TrackerOptions): Tracker {\n  const size = useWindowSize()\n  const { debug } = useScrollRig()\n  const { scroll, onScroll } = useScrollbar()\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n\n  // extend defaults with optional options\n  const { rootMargin, threshold, autoUpdate, wrapper } = useMemo(() => {\n    const target = { rootMargin: '0%', threshold: 0, autoUpdate: true } as TrackerOptions\n    const opts = options || {}\n    Object.keys(opts).map((key: string, index) => {\n      if (opts[key] !== undefined) target[key] = opts[key]\n    })\n    return target\n  }, [options])\n\n  // check if element is in viewport\n  const { ref, inView: inViewport } = useInView({ rootMargin, threshold })\n\n  // bind useInView ref to current tracking element\n  useLayoutEffect(() => {\n    ref(track.current)\n  }, [track])\n\n  // Using state so it's reactive\n  const [scale, setScale] = useState<vec3>(vecn.vec3(0, 0, 0))\n\n  // Using ref because\n  const scrollState: ScrollState = useRef({\n    inViewport: false,\n    progress: -1,\n    visibility: -1,\n    viewport: -1,\n  }).current\n\n  // DOM rect (initial position in pixels offset by scroll value on page load)\n  // Using ref so we can calculate bounds & position without a re-render\n  const rect = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n  }).current\n\n  // expose internal ref as a reactive state as well\n  const [reactiveRect, setReactiveRect] = useState<Rect>(rect)\n\n  // bounding rect in pixels - updated by scroll\n  const bounds = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n    positiveYUpBottom: 0,\n  }).current\n\n  // position in viewport units - updated by scroll\n  const position = useRef(vecn.vec3(0, 0, 0)).current\n\n  // Calculate bounding Rect as soon as it's available\n  useLayoutEffect(() => {\n    const _rect = track.current?.getBoundingClientRect()\n    if (!_rect) return\n    const initialY = wrapper ? (wrapper as HTMLElement).scrollTop : window.scrollY\n    const initialX = wrapper ? (wrapper as HTMLElement).scrollLeft : window.scrollX\n    rect.top = _rect.top + initialY\n    rect.bottom = _rect.bottom + initialY\n    rect.left = _rect.left + initialX\n    rect.right = _rect.right + initialX\n    rect.width = _rect.width\n    rect.height = _rect.height\n    setReactiveRect({ ...rect })\n    setScale(vecn.vec3(rect?.width * scaleMultiplier, rect?.height * scaleMultiplier, 1))\n    debug &&\n      console.log(\n        'useTracker.getBoundingClientRect:',\n        rect,\n        'intialScroll:',\n        { initialY, initialX },\n        'size:',\n        size,\n        'pageReflow:',\n        pageReflow\n      )\n  }, [track, size, pageReflow, scaleMultiplier, debug])\n\n  const update = useCallback(\n    ({ onlyUpdateInViewport = false, scroll: overrideScroll }: UpdateCallback = {}) => {\n      if (!track.current || (onlyUpdateInViewport && !scrollState.inViewport)) {\n        return\n      }\n\n      const _scroll = overrideScroll || scroll\n\n      updateBounds(bounds, rect, _scroll, size)\n      updatePosition(position, bounds, scaleMultiplier)\n\n      // scrollState setup based on scroll direction\n      const isHorizontal = _scroll.scrollDirection === 'horizontal'\n      const sizeProp = isHorizontal ? 'width' : 'height'\n      const startProp = isHorizontal ? 'left' : 'top'\n\n      // calculate progress of passing through viewport (0 = just entered, 1 = just exited)\n      const pxInside = size[sizeProp] - bounds[startProp]\n      scrollState.progress = mapLinear(pxInside, 0, size[sizeProp] + bounds[sizeProp], 0, 1) // percent of total visible distance\n      scrollState.visibility = mapLinear(pxInside, 0, bounds[sizeProp], 0, 1) // percent of item height in view\n      scrollState.viewport = mapLinear(pxInside, 0, size[sizeProp], 0, 1) // percent of window height scrolled since visible\n    },\n    [track, size, scaleMultiplier, scroll]\n  )\n\n  // update scrollState in viewport\n  useLayoutEffect(() => {\n    scrollState.inViewport = inViewport\n    // update once more in case it went out of view\n    update({ onlyUpdateInViewport: false })\n    debug && console.log('useTracker.inViewport:', inViewport, 'update()')\n  }, [inViewport])\n\n  // re-run if the callback updated\n  useLayoutEffect(() => {\n    update({ onlyUpdateInViewport: false })\n    debug && console.log('useTracker.update on resize/reflow')\n  }, [update, pageReflow])\n\n  // auto-update on scroll\n  useEffect(() => {\n    if (autoUpdate) return onScroll((_scroll) => update({ onlyUpdateInViewport: true }))\n  }, [autoUpdate, update, onScroll])\n\n  return {\n    rect: reactiveRect, // Dom rect - doesn't change on scroll - not - reactive\n    bounds, // scrolled bounding rect in pixels - not reactive\n    scale, // reactive scene scale - includes z-axis so it can be spread onto mesh directly\n    position, // scrolled element position in viewport units - not reactive\n    scrollState, // scroll progress stats - not reactive\n    inViewport, // reactive prop for when inside viewport\n    update, // optional manual update\n  }\n}\n\nexport { useTracker }\n","import { useEffect } from 'react'\n\nimport type { Scene, Camera } from 'three'\nimport { useCanvasStore } from '../store'\nimport { preloadScene, requestRender, renderScissor, renderViewport } from '../renderer-api'\n\nexport interface ScrollRigState {\n  debug: boolean\n  isCanvasAvailable: boolean\n  hasSmoothScrollbar: boolean\n  scaleMultiplier: number\n  preloadScene: (scene: Scene, camera: Camera, layer?: number, callback?: any) => void\n  requestRender: (layers?: number[]) => void\n  renderScissor: (args: any) => void\n  renderViewport: (args: any) => void\n  reflow: () => void\n}\n\n/**\n * Public interface for ScrollRig\n */\nexport const useScrollRig = () => {\n  const isCanvasAvailable = useCanvasStore((state) => state.isCanvasAvailable)\n  const hasSmoothScrollbar = useCanvasStore((state) => state.hasSmoothScrollbar)\n  const requestReflow = useCanvasStore((state) => state.requestReflow)\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n  const debug = useCanvasStore((state) => state.debug)\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n\n  useEffect(() => {\n    if (debug) {\n      // @ts-ignore\n      window._scrollRig = window._scrollRig || {}\n      // @ts-ignore\n      window._scrollRig.reflow = requestReflow\n    }\n  }, [])\n\n  return {\n    // boolean state\n    debug,\n    isCanvasAvailable,\n    hasSmoothScrollbar,\n    // scale\n    scaleMultiplier,\n    // render API\n    preloadScene,\n    requestRender,\n    renderScissor,\n    renderViewport,\n    // recalc all tracker positions\n    reflow: requestReflow,\n    reflowCompleted: pageReflow,\n  } as ScrollRigState\n}\n"],"names":["config","PRIORITY_PRELOAD","PRIORITY_SCISSORS","PRIORITY_VIEWPORTS","PRIORITY_GLOBAL","DEFAULT_SCALE_MULTIPLIER","preloadQueue","create","set","debug","scaleMultiplier","globalRender","globalPriority","globalClearDepth","globalRenderQueue","clearGlobalRenderQueue","isCanvasAvailable","hasSmoothScrollbar","canvasChildren","renderToCanvas","key","mesh","props","Object","getOwnPropertyDescriptor","instances","inactive","_extends","updateCanvas","newProps","removeFromCanvas","dispose","_canvasChildren$key","_objectWithoutPropertiesLoose","pageReflow","requestReflow","state","scroll","y","x","limit","velocity","progress","direction","scrollDirection","undefined","scrollTo","target","window","onScroll","useScrollbar","enabled","useCanvasStore","useLayoutEffect","vanillaUseLayoutEffect","useEffect","SmoothScrollbar","forwardRef","children","locked","scrollRestoration","disablePointerOnScroll","horizontal","scrollInContainer","updateGlobalState","invalidate","addEffect","ref","useRef","lenis","preventPointer","globalScrollState","useImperativeHandle","start","_lenis$current","current","stop","_lenis$current2","on","event","cb","_lenis$current3","once","_lenis$current4","off","_lenis$current5","notify","_lenis$current6","_lenis$current7","raf","time","_lenis$current8","__lenis","preventPointerEvents","prevent","innerRef","console","log","style","pointerEvents","onMouseMove","useCallback","globalOnScroll","_lenis$current9","_lenis$current10","history","html","document","documentElement","wrapper","body","content","firstElementChild","removeEffect","classList","toggle","assign","smoothTouch","Lenis","_lenis$current11","_raf","requestAnimationFrame","_lenis$current12","cancelAnimationFrame","_lenis$current13","destroy","_lenis$current14","_lenis$current16","Math","abs","setState","_lenis$current15","getState","scrollY","scrollX","invalidateOnWheelEvent","addEventListener","_lenis$current17","removeEventListener","_lenis$current18","_lenis$current19","mapLinear","a1","a2","b1","b2","setAllCulled","obj","overrideCulled","wasFrustumCulled","frustumCulled","wasVisible","visible","forEach","child","viewportSize","Vector2","requestRender","layers","renderScissor","gl","scene","camera","left","top","width","height","layer","autoClear","clearDepth","setScissor","setScissorTest","render","renderViewport","scissor","getSize","setViewport","preloadScene","callback","push","globalScene","globalCamera","useTracker","track","options","size","useWindowSize","debounce","windowSize","setWindowSize","useState","isBrowser","innerWidth","Infinity","innerHeight","canvasEl","getElementById","handleResize","clientWidth","clientHeight","pkg","ResizeObserver","Polyfill","observer","debouncedResize","observe","_observer","disconnect","_scrollRig","reflow","reflowCompleted","useScrollRig","rootMargin","threshold","autoUpdate","useMemo","opts","keys","map","index","inView","inViewport","useInView","scale","setScale","vecn","vec3","scrollState","visibility","viewport","rect","bottom","right","reactiveRect","setReactiveRect","bounds","positiveYUpBottom","position","_track$current","_rect","getBoundingClientRect","initialY","scrollTop","initialX","scrollLeft","update","onlyUpdateInViewport","overrideScroll","_scroll","updateBounds","updatePosition","isHorizontal","sizeProp","pxInside"],"mappings":"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"}