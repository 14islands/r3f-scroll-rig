{"version":3,"file":"scrollbar.modern.js","sources":["../src/config.ts","../src/store.ts","../src/scrollbar/useScrollbar.ts","../src/hooks/useIsomorphicLayoutEffect.ts","../src/scrollbar/LenisScrollbar.tsx","../src/scrollbar/SmoothScrollbar.tsx","../src/hooks/useWindowSize.ts","../src/utils/math.ts","../src/hooks/useTracker.ts"],"sourcesContent":["// Global config\n\nimport { WebGLRenderer } from 'three'\n\ntype PreloadCallback = (gl: WebGLRenderer) => void\n\nexport const config = {\n  // Execution order for useFrames (highest = last render)\n  PRIORITY_PRELOAD: 0,\n  PRIORITY_SCISSORS: 1,\n  PRIORITY_VIEWPORTS: 1,\n  PRIORITY_GLOBAL: 1000,\n\n  DEFAULT_SCALE_MULTIPLIER: 1,\n\n  // Global rendering props\n  preloadQueue: [] as PreloadCallback[],\n}\n","import create from 'zustand'\nimport { config } from './config'\n\nimport { LenisScrollCallback } from './scrollbar/LenisScrollbar'\n\ninterface ScrollRigStore {\n  debug: boolean\n  scaleMultiplier: number\n  globalRender: boolean\n  globalPriority: number\n  globalAutoClear: boolean\n  globalClearDepth: boolean\n  globalRenderQueue: false | any[]\n  clearGlobalRenderQueue: () => void\n  isCanvasAvailable: boolean\n  hasSmoothScrollbar: boolean\n  canvasChildren: Record<string, any | undefined>\n  updateCanvas: (key: string, newProps: any) => void\n  renderToCanvas: (key: string, mesh: any, props: any) => void\n  removeFromCanvas: (key: string, dispose: boolean) => void\n  pageReflow: number\n  requestReflow: () => void\n  scroll: {\n    y: number\n    x: number\n    limit: number\n    velocity: number\n    progress: number\n    direction: number\n    scrollDirection?: 'vertical' | 'horizontal'\n  }\n  scrollTo: (target: any) => void\n  onScroll: (cb: LenisScrollCallback) => () => void\n}\n\nconst useCanvasStore = create<ScrollRigStore>((set) => ({\n  // //////////////////////////////////////////////////////////////////////////\n  // GLOBAL ScrollRig STATE\n  // //////////////////////////////////////////////////////////////////////////\n  debug: false,\n  scaleMultiplier: config.DEFAULT_SCALE_MULTIPLIER,\n\n  globalRender: true,\n  globalPriority: config.PRIORITY_GLOBAL,\n  globalAutoClear: false,\n  globalClearDepth: true,\n\n  globalRenderQueue: false,\n  clearGlobalRenderQueue: () => set(() => ({ globalRenderQueue: false })),\n\n  // true if WebGL initialized without errors\n  isCanvasAvailable: true,\n\n  // true if <VirtualScrollbar> is currently enabled\n  hasSmoothScrollbar: false,\n\n  // map of all components to render on the global canvas\n  canvasChildren: {},\n\n  // add component to canvas\n  renderToCanvas: (key, mesh, props = {}) =>\n    set(({ canvasChildren }) => {\n      // check if already mounted\n      if (Object.getOwnPropertyDescriptor(canvasChildren, key)) {\n        // increase usage count\n        canvasChildren[key].instances += 1\n        canvasChildren[key].props.inactive = false\n        return { canvasChildren }\n      } else {\n        // otherwise mount it\n        const obj = { ...canvasChildren, [key]: { mesh, props, instances: 1 } }\n        return { canvasChildren: obj }\n      }\n    }),\n\n  // pass new props to a canvas component\n  updateCanvas: (key, newProps) =>\n    // @ts-ignore\n    set(({ canvasChildren }) => {\n      if (!canvasChildren[key]) return\n      const {\n        [key]: { mesh, props, instances },\n      } = canvasChildren\n      const obj = {\n        ...canvasChildren,\n        [key]: { mesh, props: { ...props, ...newProps }, instances },\n      }\n      // console.log('updateCanvas', key, { ...props, ...newProps })\n      return { canvasChildren: obj }\n    }),\n\n  // remove component from canvas\n  removeFromCanvas: (key, dispose = true) =>\n    set(({ canvasChildren }) => {\n      // check if remove or reduce instances\n      if (canvasChildren[key]?.instances > 1) {\n        // reduce usage count\n        canvasChildren[key].instances -= 1\n        return { canvasChildren }\n      } else {\n        if (dispose) {\n          // unmount since no longer used\n          const { [key]: _omit, ...obj } = canvasChildren // make a separate copy of the obj and omit\n          return { canvasChildren: obj }\n        } else {\n          // or tell it that it is \"inactive\"\n          canvasChildren[key].instances = 0\n          canvasChildren[key].props.inactive = true\n          return { canvasChildren: { ...canvasChildren } }\n        }\n      }\n    }),\n\n  // Used to ask components to re-calculate their positions after a layout reflow\n  pageReflow: 0,\n  requestReflow: () => {\n    set((state) => {\n      return { pageReflow: state.pageReflow + 1 }\n    })\n  },\n\n  // keep track of scrollbar\n  scroll: {\n    y: 0,\n    x: 0,\n    limit: 0,\n    velocity: 0,\n    progress: 0,\n    direction: 0,\n    scrollDirection: undefined,\n  },\n  scrollTo: (target) => window.scrollTo(0, target),\n  onScroll: () => () => {},\n}))\n\nexport { useCanvasStore }\n","import { useCanvasStore } from '../store'\nimport { LenisScrollCallback } from './LenisScrollbar'\n\nexport interface Scroll {\n  y: number\n  x: number\n  limit: number\n  velocity: number\n  progress: number\n  direction: number\n  scrollDirection: string\n}\n\ninterface UseScrollbarProps {\n  enabled: boolean\n  scroll: Scroll\n  scrollTo: (target: any) => void\n  onScroll: (cb: LenisScrollCallback) => () => void\n}\n\n/**\n * Public interface for ScrollRig\n */\nexport const useScrollbar = () => {\n  const hasSmoothScrollbar = useCanvasStore((state) => state.hasSmoothScrollbar)\n  const scroll = useCanvasStore((state) => state.scroll)\n  const scrollTo = useCanvasStore((state) => state.scrollTo)\n  const onScroll = useCanvasStore((state) => state.onScroll)\n\n  return {\n    enabled: hasSmoothScrollbar,\n    scroll,\n    scrollTo,\n    onScroll,\n  } as UseScrollbarProps\n}\n","import { useEffect, useLayoutEffect as vanillaUseLayoutEffect } from 'react'\n\nexport const isBrowser = typeof window !== 'undefined'\n\nexport const useLayoutEffect = isBrowser ? vanillaUseLayoutEffect : useEffect\n","import React, { useRef, useEffect, forwardRef, useImperativeHandle, ReactElement } from 'react'\n\n// @ts-ignore\n// eslint-disable-next-line import/no-unresolved\nimport Lenis from '@studio-freight/lenis'\n\nexport type LenisScrollCallback = (props: {\n  scroll: number\n  limit: number\n  velocity: number\n  direction: number\n  progress: number\n}) => void\n\ntype LenisScrollToTarget = number | HTMLElement | string\ntype LenisScrollToConfig = { offset: number; immediate: boolean; duration: number; easing: (t: number) => number }\ntype LenisScrollTo = (target: LenisScrollToTarget, props: LenisScrollToConfig) => void\n\ntype LenisScrollbarProps = {\n  children: (props: any) => ReactElement\n  duration?: number\n  easing?: (t: number) => number\n  smooth?: boolean\n  direction?: string\n  config?: any\n  smoothTouch?: boolean\n}\n\nexport interface ILenisScrollbar {\n  stop: () => void\n  start: () => void\n  on: (event: string, cb: LenisScrollCallback) => void\n  once: (event: string, cb: LenisScrollCallback) => void\n  off: (event: string, cb: LenisScrollCallback) => void\n  notify: () => void\n  scrollTo: LenisScrollTo\n  raf: (time: number) => void\n}\n\nconst EASE_EXP_OUT = (t: number) => (t === 1 ? 1 : 1 - Math.pow(2, -10 * t)) // https://easings.net/\n\nexport function LenisScrollbar(\n  {\n    children,\n    duration = 1,\n    easing = EASE_EXP_OUT,\n    smooth = true,\n    direction = 'vertical',\n    config,\n    ...props\n  }: LenisScrollbarProps,\n  ref: any\n) {\n  const lenisImpl = useRef<ILenisScrollbar>()\n\n  // Expose lenis imperative API\n  useImperativeHandle(ref, () => ({\n    start: () => lenisImpl.current?.start(),\n    stop: () => lenisImpl.current?.stop(),\n    on: (event: string, cb: LenisScrollCallback) => lenisImpl.current?.on(event, cb),\n    once: (event: string, cb: LenisScrollCallback) => lenisImpl.current?.once(event, cb),\n    off: (event: string, cb: LenisScrollCallback) => lenisImpl.current?.off(event, cb),\n    notify: () => lenisImpl.current?.notify(),\n    scrollTo: (target: LenisScrollToTarget, props: LenisScrollToConfig) => lenisImpl.current?.scrollTo(target, props),\n    raf: (time: number) => lenisImpl.current?.raf(time),\n  }))\n\n  useEffect(\n    function initLenis() {\n      // @ts-ignore\n      const lenis = (lenisImpl.current = new Lenis({\n        duration,\n        easing,\n        smooth,\n        direction,\n        ...config,\n      }))\n\n      // cleanup on unmount\n      return () => {\n        lenis.destroy()\n      }\n    },\n    [duration, easing, smooth, direction]\n  )\n\n  // Support a render function as child\n  return children && children(props)\n}\n\nexport default forwardRef(LenisScrollbar)\n","import React, { useEffect, useRef, useCallback, ReactElement, useMemo } from 'react'\nimport { addEffect, invalidate } from '@react-three/fiber'\nimport pkg from 'debounce'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { useCanvasStore } from '../store'\n\nimport LenisScrollbar, { ILenisScrollbar, LenisScrollCallback } from './LenisScrollbar'\ninterface ISmoothScrobbar {\n  children: (props: any) => ReactElement\n  scrollRestoration?: ScrollRestoration\n  enabled?: boolean\n  locked?: boolean\n  disablePointerOnScroll?: boolean\n  config?: object\n  horizontal?: boolean\n  scrollInContainer?: boolean\n  updateGlobalState?: boolean\n  onScroll?: LenisScrollCallback\n}\n\nexport const SmoothScrollbar = ({\n  children,\n  enabled = true,\n  locked = false,\n  scrollRestoration = 'auto',\n  disablePointerOnScroll = true,\n  horizontal = false,\n  scrollInContainer = false,\n  updateGlobalState = true,\n  onScroll,\n  config,\n}: ISmoothScrobbar) => {\n  const ref = useRef<HTMLElement>()\n  const lenis = useRef<ILenisScrollbar>()\n  const preventPointer = useRef(false)\n  const globalScrollState = useCanvasStore((state) => state.scroll)\n\n  // disable pointer events while scrolling to avoid slow event handlers\n  const preventPointerEvents = (prevent: boolean) => {\n    if (!disablePointerOnScroll) return\n    if (ref.current && preventPointer.current !== prevent) {\n      preventPointer.current = prevent\n      ref.current.style.pointerEvents = prevent ? 'none' : 'auto'\n    }\n  }\n\n  // reset pointer events when moving mouse\n  const onMouseMove = useCallback(() => {\n    preventPointerEvents(false)\n  }, [])\n\n  // function to bind to scroll event\n  // return function that will unbind same callback\n  const globalOnScroll = useCallback((cb: LenisScrollCallback) => {\n    lenis.current?.on('scroll', cb)\n    return () => lenis.current?.off('scroll', cb)\n  }, [])\n\n  // apply chosen scroll restoration\n  useLayoutEffect(() => {\n    if ('scrollRestoration' in window.history) {\n      window.history.scrollRestoration = scrollRestoration\n    }\n  }, [])\n\n  useEffect(() => {\n    // let r3f drive the frameloop\n    const removeEffect = addEffect((time: number) => lenis.current?.raf(time))\n\n    // update global scroll store\n    lenis.current?.on('scroll', ({ scroll, limit, velocity, direction, progress }) => {\n      if (updateGlobalState) {\n        globalScrollState.y = !horizontal ? scroll : 0\n        globalScrollState.x = horizontal ? scroll : 0\n        globalScrollState.limit = limit\n        globalScrollState.velocity = velocity\n        globalScrollState.direction = direction\n        globalScrollState.progress = progress\n      }\n\n      // disable pointer logic\n      const disablePointer = pkg.debounce(() => preventPointerEvents(true), 100, true)\n      if (Math.abs(velocity) > 1.4) {\n        disablePointer()\n      } else {\n        preventPointerEvents(false)\n      }\n\n      onScroll && onScroll({ scroll, limit, velocity, direction, progress })\n\n      invalidate()\n    })\n\n    // trigger initial scroll event to update global state\n    lenis.current?.notify()\n\n    // update global state\n    if (updateGlobalState) {\n      globalScrollState.scrollDirection = horizontal ? 'horizontal' : 'vertical'\n\n      // expose global scrollTo function\n      // @ts-ignore\n      useCanvasStore.setState({ scrollTo: lenis.current?.scrollTo })\n\n      // expose global onScroll function to subscribe to scroll events\n      // @ts-ignore\n      useCanvasStore.setState({ onScroll: globalOnScroll })\n\n      // Set current scroll position on load in case reloaded further down\n      useCanvasStore.getState().scroll.y = window.scrollY\n      useCanvasStore.getState().scroll.x = window.scrollX\n    }\n\n    // Set active\n    document.documentElement.classList.toggle('js-smooth-scrollbar-enabled', enabled)\n    document.documentElement.classList.toggle('js-smooth-scrollbar-disabled', !enabled)\n    useCanvasStore.setState({ hasSmoothScrollbar: enabled })\n\n    // make sure R3F loop is invalidated when scrolling\n    const invalidateOnWheelEvent = () => invalidate()\n\n    window.addEventListener('pointermove', onMouseMove)\n    window.addEventListener('wheel', invalidateOnWheelEvent)\n    return () => {\n      removeEffect()\n      window.removeEventListener('pointermove', onMouseMove)\n      window.removeEventListener('wheel', invalidateOnWheelEvent)\n    }\n  }, [enabled])\n\n  useEffect(() => {\n    locked ? lenis.current?.stop() : lenis.current?.start()\n  }, [locked])\n\n  // Set up scroll containers - allows scrolling without resizing window on iOS/mobile\n  const { wrapper, content } = useMemo(() => {\n    if (typeof document === 'undefined') return {}\n    const html = document.documentElement\n    const wrapper = document.body\n    const content = document.body.firstElementChild\n\n    html.classList.toggle('ScrollRig-scrollHtml', scrollInContainer)\n    wrapper.classList.toggle('ScrollRig-scrollWrapper', scrollInContainer)\n\n    return {\n      wrapper,\n      content,\n    }\n  }, [scrollInContainer])\n\n  return (\n    <LenisScrollbar\n      ref={lenis}\n      smooth={enabled}\n      direction={horizontal ? 'horizontal' : 'vertical'}\n      config={\n        scrollInContainer\n          ? {\n              smoothTouch: true,\n              wrapper,\n              content,\n              ...config,\n            }\n          : { ...config }\n      }\n    >\n      {/* Use function child so we can spread props\n        - for instance disable pointer events while scrolling */}\n      {(bind: any) => children({ ...bind, ref })}\n    </LenisScrollbar>\n  )\n}\n","import { useState, useEffect, useMemo } from 'react'\nimport pkg from 'debounce'\n\nconst isBrowser = typeof window !== 'undefined'\n\n// https://usehooks.com/useWindowSize/\n\nexport interface WindowSize {\n  width: number\n  height: number\n}\n\n/*\n * Triggers a resize only if the Canvas DOM element changed dimensions - not on window resize event\n */\n\nexport function useWindowSize() {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowSize>({\n    width: isBrowser ? window.innerWidth : Infinity,\n    height: isBrowser ? window.innerHeight : Infinity,\n  })\n  useEffect(() => {\n    // check if we can find a canvas - if so, base size on canvas instead of window\n    // since 100vh !== window.innerHeight on mobile\n    const canvasEl = document.getElementById('ScrollRig-canvas')\n\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: canvasEl ? canvasEl.clientWidth : window.innerWidth,\n        height: canvasEl ? canvasEl.clientHeight : window.innerHeight,\n      })\n    }\n\n    const debouncedResize = pkg.debounce(handleResize, 200)\n\n    // Add event listener\n    let observer: ResizeObserver\n    if (canvasEl) {\n      observer = new ResizeObserver(debouncedResize)\n      observer.observe(canvasEl)\n    } else {\n      window.addEventListener('resize', debouncedResize)\n    }\n    // Call handler right away so state gets updated with initial window size\n    handleResize()\n    // Remove event listener on cleanup\n    return () => {\n      window.removeEventListener('resize', debouncedResize)\n      observer?.disconnect()\n    }\n  }, []) // Empty array ensures that effect is only run on mount\n\n  return windowSize\n}\n","// Linear mapping from range <a1, a2> to range <b1, b2>\nexport function mapLinear(x: number, a1: number, a2: number, b1: number, b2: number) {\n  return b1 + ((x - a1) * (b2 - b1)) / (a2 - a1)\n}\n","import { useRef, useCallback, useEffect, useMemo, useState, MutableRefObject } from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { useWindowSize } from './useWindowSize'\nimport vecn from 'vecn'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { mapLinear } from '../utils/math'\nimport { useCanvasStore } from '../store'\nimport { useScrollbar, Scroll } from '../scrollbar/useScrollbar'\n\nimport type { Rect, Bounds, TrackerOptions, Tracker, ScrollState } from './useTracker.d'\n\nfunction updateBounds(bounds: Bounds, rect: Rect, scroll: Scroll, size: any) {\n  bounds.top = rect.top - scroll.y\n  bounds.bottom = rect.bottom - scroll.y\n  bounds.left = rect.left - scroll.x\n  bounds.right = rect.right - scroll.x\n  bounds.width = rect.width\n  bounds.height = rect.height\n  // move coordinate system so 0,0 is at center of screen\n  bounds.x = bounds.left + rect.width * 0.5 - size.width * 0.5\n  bounds.y = bounds.top + rect.height * 0.5 - size.height * 0.5\n  bounds.positiveYUpBottom = size.height - bounds.bottom // inverse Y\n}\n\nfunction updatePosition(position: vec3, bounds: Bounds, scaleMultiplier: number) {\n  position.x = bounds.x * scaleMultiplier\n  position.y = -1 * bounds.y * scaleMultiplier\n}\n\n/**\n * Returns the current Scene position of the DOM element\n * based on initial getBoundingClientRect and scroll delta from start\n */\nfunction useTracker(track: MutableRefObject<HTMLElement>, options?: TrackerOptions): Tracker {\n  const size = useWindowSize()\n  const { scroll, onScroll } = useScrollbar()\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n\n  // extend defaults with optional options\n  const { rootMargin, threshold, autoUpdate, wrapper } = useMemo(() => {\n    const target = { rootMargin: '50%', threshold: 0, autoUpdate: true, wrapper: window } as TrackerOptions\n    const opts = options || {}\n    Object.keys(opts).map((key: string, index) => {\n      if (opts[key] !== undefined) target[key] = opts[key]\n    })\n    return target\n  }, [options])\n\n  // check if element is in viewport\n  const { ref, inView: inViewport } = useInView({ rootMargin, threshold })\n\n  // bind useInView ref to current tracking element\n  useLayoutEffect(() => {\n    ref(track.current)\n  }, [track])\n\n  // Using state so it's reactive\n  const [scale, setScale] = useState<vec3>()\n\n  // Using ref because\n  const scrollState: ScrollState = useRef({\n    inViewport: false,\n    progress: -1,\n    visibility: -1,\n    viewport: -1,\n  }).current\n\n  // DOM rect (initial position in pixels offset by scroll value on page load)\n  // Using ref so we can calculate bounds & position without a re-render\n  const rect = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n  }).current\n\n  // expose internal ref as a reactive state as well\n  const [reactiveRect, setReactiveRect] = useState<Rect>(rect)\n\n  // bounding rect in pixels - updated by scroll\n  const bounds = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n    positiveYUpBottom: 0,\n  }).current\n\n  // position in viewport units - updated by scroll\n  const position = useRef(vecn.vec3(0, 0, 0)).current\n\n  // Calculate bounding Rect as soon as it's available\n  useLayoutEffect(() => {\n    const _rect = track.current?.getBoundingClientRect()\n    const initialY = wrapper === window ? wrapper.scrollY : (wrapper as HTMLDivElement).scrollTop\n    const initialX = wrapper === window ? wrapper.scrollX : (wrapper as HTMLDivElement).scrollLeft\n    rect.top = _rect.top + initialY\n    rect.bottom = _rect.bottom + initialY\n    rect.left = _rect.left + initialX\n    rect.right = _rect.right + initialX\n    rect.width = _rect.width\n    rect.height = _rect.height\n    rect.x = rect.left + _rect.width * 0.5\n    rect.y = rect.top + _rect.height * 0.5\n    setReactiveRect({ ...rect })\n    setScale(vecn.vec3(rect?.width * scaleMultiplier, rect?.height * scaleMultiplier, 1))\n  }, [track, size, pageReflow, scaleMultiplier])\n\n  const update = useCallback(\n    ({ onlyUpdateInViewport = true, scroll: _scroll = scroll } = {}) => {\n      if (!track.current || (onlyUpdateInViewport && !scrollState.inViewport)) {\n        return\n      }\n\n      updateBounds(bounds, rect, _scroll, size)\n      updatePosition(position, bounds, scaleMultiplier)\n\n      // scrollState setup based on scroll direction\n      const isHorizontal = _scroll.scrollDirection === 'horizontal'\n      const sizeProp = isHorizontal ? 'width' : 'height'\n      const startProp = isHorizontal ? 'left' : 'top'\n\n      // calculate progress of passing through viewport (0 = just entered, 1 = just exited)\n      const pxInside = size[sizeProp] - bounds[startProp]\n      scrollState.progress = mapLinear(pxInside, 0, size[sizeProp] + bounds[sizeProp], 0, 1) // percent of total visible distance\n      scrollState.visibility = mapLinear(pxInside, 0, bounds[sizeProp], 0, 1) // percent of item height in view\n      scrollState.viewport = mapLinear(pxInside, 0, size[sizeProp], 0, 1) // percent of window height scrolled since visible\n    },\n    [track, size, scaleMultiplier, scroll]\n  )\n\n  // update scrollState in viewport\n  useLayoutEffect(() => {\n    scrollState.inViewport = inViewport\n    // update once more in case it went out of view\n    update({ onlyUpdateInViewport: false })\n  }, [inViewport])\n\n  // re-run if the callback updated\n  useLayoutEffect(() => {\n    update({ onlyUpdateInViewport: false })\n  }, [update])\n\n  // auto-update on scroll\n  useEffect(() => {\n    if (autoUpdate) return onScroll((_scroll) => update())\n  }, [autoUpdate, update, onScroll])\n\n  return {\n    rect: reactiveRect, // Dom rect - doesn't change on scroll - not - reactive\n    bounds, // scrolled bounding rect in pixels - not reactive\n    scale, // reactive scene scale - includes z-axis so it can be spread onto mesh directly\n    position, // scrolled element position in viewport units - not reactive\n    scrollState, // scroll progress stats - not reactive\n    inViewport, // reactive prop for when inside viewport\n    update: (args) => update({ onlyUpdateInViewport: false, ...args }), // optional manual update\n  }\n}\n\nexport { useTracker }\n"],"names":["useCanvasStore","create","set","debug","scaleMultiplier","globalRender","globalPriority","globalAutoClear","globalClearDepth","globalRenderQueue","clearGlobalRenderQueue","isCanvasAvailable","hasSmoothScrollbar","canvasChildren","renderToCanvas","key","mesh","props","Object","getOwnPropertyDescriptor","instances","inactive","_extends","updateCanvas","newProps","removeFromCanvas","dispose","_canvasChildren$key","map","_toPropertyKey","pageReflow","requestReflow","state","scroll","y","x","limit","velocity","progress","direction","scrollDirection","undefined","scrollTo","target","window","onScroll","useScrollbar","enabled","useLayoutEffect","vanillaUseLayoutEffect","useEffect","_excluded","EASE_EXP_OUT","t","Math","pow","LenisScrollbar$1","forwardRef","_ref","ref","children","duration","easing","smooth","config","_objectWithoutPropertiesLoose","lenisImpl","useRef","useImperativeHandle","start","current","_lenisImpl$current","stop","_lenisImpl$current2","on","event","cb","_lenisImpl$current3","once","_lenisImpl$current4","off","_lenisImpl$current5","notify","_lenisImpl$current6","_lenisImpl$current7","raf","time","_lenisImpl$current8","Lenis","lenis","destroy","SmoothScrollbar","locked","scrollRestoration","disablePointerOnScroll","horizontal","scrollInContainer","updateGlobalState","preventPointer","globalScrollState","preventPointerEvents","prevent","style","pointerEvents","onMouseMove","useCallback","globalOnScroll","_lenis$current","_lenis$current2","history","_lenis$current4","_lenis$current5","removeEffect","addEffect","_lenis$current3","_lenis$current6","disablePointer","pkg","debounce","abs","invalidate","setState","getState","scrollY","scrollX","document","documentElement","classList","toggle","invalidateOnWheelEvent","addEventListener","removeEventListener","_lenis$current7","_lenis$current8","wrapper","content","useMemo","html","body","firstElementChild","React","createElement","LenisScrollbar","smoothTouch","bind","isBrowser","mapLinear","a1","a2","b1","b2","useTracker","track","options","size","useWindowSize","windowSize","setWindowSize","useState","width","innerWidth","Infinity","height","innerHeight","canvasEl","getElementById","handleResize","clientWidth","clientHeight","observer","ResizeObserver","debouncedResize","observe","_observer","disconnect","rootMargin","threshold","autoUpdate","opts","keys","index","inView","inViewport","useInView","scale","setScale","scrollState","visibility","viewport","rect","top","bottom","left","right","reactiveRect","setReactiveRect","bounds","positiveYUpBottom","position","vecn","vec3","_track$current","_rect","getBoundingClientRect","initialY","scrollTop","initialX","scrollLeft","update","onlyUpdateInViewport","_scroll","updateBounds","updatePosition","isHorizontal","sizeProp","pxInside","args"],"mappings":"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"}