{"version":3,"file":"scrollbar.modern.js","sources":["../src/config.ts","../src/store.ts","../src/scrollbar/useScrollbar.ts","../src/hooks/useIsomorphicLayoutEffect.ts","../src/scrollbar/LenisScrollbar.tsx","../src/scrollbar/SmoothScrollbar.tsx","../src/hooks/useWindowSize.ts","../src/utils/math.ts","../src/utils/helpers.ts","../src/renderer-api.ts","../src/hooks/useTracker.ts","../src/hooks/useScrollRig.ts"],"sourcesContent":["// Global config\n\nimport { WebGLRenderer } from 'three'\n\ntype PreloadCallback = (gl: WebGLRenderer) => void\n\nexport const config = {\n  // Execution order for useFrames (highest = last render)\n  PRIORITY_PRELOAD: 0,\n  PRIORITY_SCISSORS: 1,\n  PRIORITY_VIEWPORTS: 1,\n  PRIORITY_GLOBAL: 1000,\n\n  DEFAULT_SCALE_MULTIPLIER: 1,\n\n  // Global rendering props\n  preloadQueue: [] as PreloadCallback[],\n}\n","import create from 'zustand'\nimport { config } from './config'\n\nimport { LenisScrollCallback } from './scrollbar/LenisScrollbar'\n\ninterface ScrollRigStore {\n  debug: boolean\n  scaleMultiplier: number\n  globalRender: boolean\n  globalPriority: number\n  globalAutoClear: boolean\n  globalClearDepth: boolean\n  globalRenderQueue: false | any[]\n  clearGlobalRenderQueue: () => void\n  isCanvasAvailable: boolean\n  hasSmoothScrollbar: boolean\n  canvasChildren: Record<string, any | undefined>\n  updateCanvas: (key: string, newProps: any) => void\n  renderToCanvas: (key: string, mesh: any, props: any) => void\n  removeFromCanvas: (key: string, dispose: boolean) => void\n  pageReflow: number\n  requestReflow: () => void\n  scroll: {\n    y: number\n    x: number\n    limit: number\n    velocity: number\n    progress: number\n    direction: number\n    scrollDirection?: 'vertical' | 'horizontal'\n  }\n  scrollTo: (target: any) => void\n  onScroll: (cb: LenisScrollCallback) => () => void\n}\n\nconst useCanvasStore = create<ScrollRigStore>((set) => ({\n  // //////////////////////////////////////////////////////////////////////////\n  // GLOBAL ScrollRig STATE\n  // //////////////////////////////////////////////////////////////////////////\n  debug: false,\n  scaleMultiplier: config.DEFAULT_SCALE_MULTIPLIER,\n\n  globalRender: true,\n  globalPriority: config.PRIORITY_GLOBAL,\n  globalAutoClear: false,\n  globalClearDepth: true,\n\n  globalRenderQueue: false,\n  clearGlobalRenderQueue: () => set(() => ({ globalRenderQueue: false })),\n\n  // true if WebGL initialized without errors\n  isCanvasAvailable: true,\n\n  // true if <VirtualScrollbar> is currently enabled\n  hasSmoothScrollbar: false,\n\n  // map of all components to render on the global canvas\n  canvasChildren: {},\n\n  // add component to canvas\n  renderToCanvas: (key, mesh, props = {}) =>\n    set(({ canvasChildren }) => {\n      // check if already mounted\n      if (Object.getOwnPropertyDescriptor(canvasChildren, key)) {\n        // increase usage count\n        canvasChildren[key].instances += 1\n        canvasChildren[key].props.inactive = false\n        return { canvasChildren }\n      } else {\n        // otherwise mount it\n        const obj = { ...canvasChildren, [key]: { mesh, props, instances: 1 } }\n        return { canvasChildren: obj }\n      }\n    }),\n\n  // pass new props to a canvas component\n  updateCanvas: (key, newProps) =>\n    // @ts-ignore\n    set(({ canvasChildren }) => {\n      if (!canvasChildren[key]) return\n      const {\n        [key]: { mesh, props, instances },\n      } = canvasChildren\n      const obj = {\n        ...canvasChildren,\n        [key]: { mesh, props: { ...props, ...newProps }, instances },\n      }\n      // console.log('updateCanvas', key, { ...props, ...newProps })\n      return { canvasChildren: obj }\n    }),\n\n  // remove component from canvas\n  removeFromCanvas: (key, dispose = true) =>\n    set(({ canvasChildren }) => {\n      // check if remove or reduce instances\n      if (canvasChildren[key]?.instances > 1) {\n        // reduce usage count\n        canvasChildren[key].instances -= 1\n        return { canvasChildren }\n      } else {\n        if (dispose) {\n          // unmount since no longer used\n          const { [key]: _omit, ...obj } = canvasChildren // make a separate copy of the obj and omit\n          return { canvasChildren: obj }\n        } else {\n          // or tell it that it is \"inactive\"\n          canvasChildren[key].instances = 0\n          canvasChildren[key].props.inactive = true\n          return { canvasChildren: { ...canvasChildren } }\n        }\n      }\n    }),\n\n  // Used to ask components to re-calculate their positions after a layout reflow\n  pageReflow: 0,\n  requestReflow: () => {\n    set((state) => {\n      return { pageReflow: state.pageReflow + 1 }\n    })\n  },\n\n  // keep track of scrollbar\n  scroll: {\n    y: 0,\n    x: 0,\n    limit: 0,\n    velocity: 0,\n    progress: 0,\n    direction: 0,\n    scrollDirection: undefined,\n  },\n  scrollTo: (target) => window.scrollTo(0, target),\n  onScroll: () => () => {},\n}))\n\nexport { useCanvasStore }\n","import { useCanvasStore } from '../store'\nimport { LenisScrollCallback } from './LenisScrollbar'\n\nexport interface Scroll {\n  y: number\n  x: number\n  limit: number\n  velocity: number\n  progress: number\n  direction: number\n  scrollDirection: string\n}\n\ninterface UseScrollbarProps {\n  enabled: boolean\n  scroll: Scroll\n  scrollTo: (target: any) => void\n  onScroll: (cb: LenisScrollCallback) => () => void\n}\n\n/**\n * Public interface for ScrollRig\n */\nexport const useScrollbar = () => {\n  const hasSmoothScrollbar = useCanvasStore((state) => state.hasSmoothScrollbar)\n  const scroll = useCanvasStore((state) => state.scroll)\n  const scrollTo = useCanvasStore((state) => state.scrollTo)\n  const onScroll = useCanvasStore((state) => state.onScroll)\n\n  return {\n    enabled: hasSmoothScrollbar,\n    scroll,\n    scrollTo,\n    onScroll,\n  } as UseScrollbarProps\n}\n","import { useEffect, useLayoutEffect as vanillaUseLayoutEffect } from 'react'\n\nexport const isBrowser = typeof window !== 'undefined'\n\nexport const useLayoutEffect = isBrowser ? vanillaUseLayoutEffect : useEffect\n","import React, { useRef, useEffect, forwardRef, useImperativeHandle, ReactElement } from 'react'\n\n// @ts-ignore\n// eslint-disable-next-line import/no-unresolved\nimport Lenis from '@studio-freight/lenis'\n\nexport type LenisScrollCallback = (props: {\n  scroll: number\n  limit: number\n  velocity: number\n  direction: number\n  progress: number\n}) => void\n\nexport type LenisScrollToTarget = number | HTMLElement | string\nexport type LenisScrollToConfig = {\n  offset: number\n  immediate: boolean\n  duration: number\n  easing: (t: number) => number\n}\ntype LenisScrollTo = (target: LenisScrollToTarget, props: LenisScrollToConfig) => void\n\ntype LenisScrollbarProps = {\n  children: (props: any) => ReactElement\n  duration?: number\n  easing?: (t: number) => number\n  smooth?: boolean\n  direction?: string\n  config?: any\n  smoothTouch?: boolean\n}\n\nexport interface ILenisScrollbar {\n  stop: () => void\n  start: () => void\n  on: (event: string, cb: LenisScrollCallback) => void\n  once: (event: string, cb: LenisScrollCallback) => void\n  off: (event: string, cb?: LenisScrollCallback) => void\n  notify: () => void\n  scrollTo: LenisScrollTo\n  raf: (time: number) => void\n}\n\nconst EASE_EXP_OUT = (t: number) => (t === 1 ? 1 : 1 - Math.pow(2, -10 * t)) // https://easings.net/\n\nexport function LenisScrollbar(\n  {\n    children,\n    duration = 1,\n    easing = EASE_EXP_OUT,\n    smooth = true,\n    direction = 'vertical',\n    config,\n    ...props\n  }: LenisScrollbarProps,\n  ref: any\n) {\n  const lenisImpl = useRef<ILenisScrollbar>()\n\n  // Expose lenis imperative API\n  useImperativeHandle(ref, () => ({\n    start: () => lenisImpl.current?.start(),\n    stop: () => lenisImpl.current?.stop(),\n    on: (event: string, cb: LenisScrollCallback) => lenisImpl.current?.on(event, cb),\n    once: (event: string, cb: LenisScrollCallback) => lenisImpl.current?.once(event, cb),\n    off: (event: string, cb?: LenisScrollCallback) => lenisImpl.current?.off(event, cb),\n    notify: () => lenisImpl.current?.notify(),\n    scrollTo: (target: LenisScrollToTarget, props: LenisScrollToConfig) => lenisImpl.current?.scrollTo(target, props),\n    raf: (time: number) => lenisImpl.current?.raf(time),\n    __lenis: lenisImpl.current,\n  }))\n\n  useEffect(\n    function initLenis() {\n      // @ts-ignore\n      const lenis = (lenisImpl.current = new Lenis({\n        duration,\n        easing,\n        smooth,\n        direction,\n        ...config,\n      }))\n\n      // cleanup on unmount\n      return () => {\n        lenis.destroy()\n      }\n    },\n    [duration, easing, smooth, direction]\n  )\n\n  // Support a render function as child\n  return children && children(props)\n}\n\nexport default forwardRef(LenisScrollbar)\n","import React, { useEffect, useRef, useCallback, ReactElement, useMemo, forwardRef, useImperativeHandle } from 'react'\nimport { addEffect, invalidate } from '@react-three/fiber'\nimport pkg from 'debounce'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { useCanvasStore } from '../store'\n\nimport LenisScrollbar, {\n  ILenisScrollbar,\n  LenisScrollCallback,\n  LenisScrollToTarget,\n  LenisScrollToConfig,\n} from './LenisScrollbar'\n\ninterface ISmoothScrobbar {\n  children: (props: any) => ReactElement\n  scrollRestoration?: ScrollRestoration\n  enabled?: boolean\n  locked?: boolean\n  disablePointerOnScroll?: boolean\n  config?: object\n  horizontal?: boolean\n  scrollInContainer?: boolean\n  updateGlobalState?: boolean\n  onScroll?: LenisScrollCallback\n}\n\nconst SmoothScrollbarImpl = (\n  {\n    children,\n    enabled = true,\n    locked = false,\n    scrollRestoration = 'auto',\n    disablePointerOnScroll = true,\n    horizontal = false,\n    scrollInContainer = false,\n    updateGlobalState = true,\n    onScroll,\n    config,\n  }: ISmoothScrobbar,\n  ref: any\n) => {\n  const innerRef = useRef<HTMLElement>()\n  const lenis = useRef<ILenisScrollbar>()\n  const preventPointer = useRef(false)\n  const globalScrollState = useCanvasStore((state) => state.scroll)\n\n  // expose scrollTo imperatively\n  useImperativeHandle(ref, () => {\n    return {\n      scrollTo: (target: LenisScrollToTarget, props: LenisScrollToConfig) => lenis.current?.scrollTo(target, props),\n      __lenis: lenis.current,\n    }\n  })\n\n  // disable pointer events while scrolling to avoid slow event handlers\n  const preventPointerEvents = (prevent: boolean) => {\n    if (!disablePointerOnScroll) return\n    if (innerRef.current && preventPointer.current !== prevent) {\n      preventPointer.current = prevent\n      innerRef.current.style.pointerEvents = prevent ? 'none' : 'auto'\n    }\n  }\n\n  // reset pointer events when moving mouse\n  const onMouseMove = useCallback(() => {\n    preventPointerEvents(false)\n  }, [])\n\n  // function to bind to scroll event\n  // return function that will unbind same callback\n  const globalOnScroll = useCallback((cb: LenisScrollCallback) => {\n    lenis.current?.on('scroll', cb)\n    return () => lenis.current?.off('scroll', cb)\n  }, [])\n\n  // apply chosen scroll restoration\n  useLayoutEffect(() => {\n    if ('scrollRestoration' in window.history) {\n      window.history.scrollRestoration = scrollRestoration\n    }\n  }, [])\n\n  useEffect(() => {\n    // let r3f drive the frameloop\n    const removeEffect = addEffect((time: number) => lenis.current?.raf(time))\n\n    // update global scroll store\n    lenis.current?.on('scroll', ({ scroll, limit, velocity, direction, progress }) => {\n      const y = !horizontal ? scroll : 0\n      const x = horizontal ? scroll : 0\n\n      if (updateGlobalState) {\n        globalScrollState.y = y\n        globalScrollState.x = x\n        globalScrollState.limit = limit\n        globalScrollState.velocity = velocity\n        globalScrollState.direction = direction\n        globalScrollState.progress = progress\n      }\n\n      // disable pointer logic\n      const disablePointer = pkg.debounce(() => preventPointerEvents(true), 100, true)\n      if (Math.abs(velocity) > 1.4) {\n        disablePointer()\n      } else {\n        preventPointerEvents(false)\n      }\n\n      onScroll && onScroll({ scroll, limit, velocity, direction, progress })\n\n      invalidate()\n    })\n\n    // trigger initial scroll event to update global state\n    lenis.current?.notify()\n\n    // update global state\n    if (updateGlobalState) {\n      globalScrollState.scrollDirection = horizontal ? 'horizontal' : 'vertical'\n\n      // expose global scrollTo function\n      // @ts-ignore\n      useCanvasStore.setState({ scrollTo: lenis.current?.scrollTo })\n\n      // expose global onScroll function to subscribe to scroll events\n      // @ts-ignore\n      useCanvasStore.setState({ onScroll: globalOnScroll })\n\n      // Set current scroll position on load in case reloaded further down\n      useCanvasStore.getState().scroll.y = window.scrollY\n      useCanvasStore.getState().scroll.x = window.scrollX\n    }\n\n    // make sure R3F loop is invalidated when scrolling\n    const invalidateOnWheelEvent = () => invalidate()\n\n    window.addEventListener('pointermove', onMouseMove)\n    window.addEventListener('wheel', invalidateOnWheelEvent)\n    return () => {\n      lenis.current?.off('scroll')\n      removeEffect()\n      window.removeEventListener('pointermove', onMouseMove)\n      window.removeEventListener('wheel', invalidateOnWheelEvent)\n    }\n  }, [])\n\n  useEffect(() => {\n    // Mark as enabled in global state\n    if (updateGlobalState) {\n      document.documentElement.classList.toggle('js-smooth-scrollbar-enabled', enabled)\n      document.documentElement.classList.toggle('js-smooth-scrollbar-disabled', !enabled)\n      useCanvasStore.setState({ hasSmoothScrollbar: enabled })\n    }\n  }, [enabled])\n\n  useEffect(() => {\n    locked ? lenis.current?.stop() : lenis.current?.start()\n  }, [locked])\n\n  // Set up scroll containers - allows scrolling without resizing window on iOS/mobile\n  const { wrapper, content } = useMemo(() => {\n    if (typeof document === 'undefined') return {}\n    const html = document.documentElement\n    const wrapper = document.body\n    const content = document.body.firstElementChild\n\n    html.classList.toggle('ScrollRig-scrollHtml', scrollInContainer)\n    wrapper.classList.toggle('ScrollRig-scrollWrapper', scrollInContainer)\n\n    return {\n      wrapper,\n      content,\n    }\n  }, [scrollInContainer])\n\n  return (\n    <LenisScrollbar\n      ref={lenis}\n      direction={horizontal ? 'horizontal' : 'vertical'}\n      config={\n        scrollInContainer\n          ? {\n              smoothTouch: true,\n              wrapper,\n              content,\n              ...config,\n            }\n          : { ...config }\n      }\n    >\n      {/* Use function child so we can spread props\n        - for instance disable pointer events while scrolling */}\n      {(bind: any) => children({ ...bind, ref: innerRef })}\n    </LenisScrollbar>\n  )\n}\n\nexport const SmoothScrollbar = forwardRef(SmoothScrollbarImpl)\n","import { useState, useEffect, useMemo } from 'react'\nimport pkg from 'debounce'\n\nconst isBrowser = typeof window !== 'undefined'\nexport interface WindowSize {\n  width: number\n  height: number\n}\n\ntype ConfigProps = {\n  debounce?: number\n}\n\n/*\n * Triggers a resize only if the Canvas DOM element changed dimensions - not on window resize event\n *\n * This is to avoid costly re-renders when the URL bar is scrolled away on mobile\n *\n * Based on: https://usehooks.com/useWindowSize/\n */\n\nexport function useWindowSize({ debounce = 0 }: ConfigProps = {}) {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowSize>({\n    width: isBrowser ? window.innerWidth : Infinity,\n    height: isBrowser ? window.innerHeight : Infinity,\n  })\n\n  useEffect(() => {\n    // check if we can find a canvas - if so, base size on canvas instead of window\n    // since 100vh !== window.innerHeight on mobile\n    const canvasEl = document.getElementById('ScrollRig-canvas')\n\n    // Handler to call on window resize\n    function handleResize() {\n      const width = canvasEl ? canvasEl.clientWidth : window.innerWidth\n      const height = canvasEl ? canvasEl.clientHeight : window.innerHeight\n\n      if (width !== windowSize.width || height !== windowSize.height) {\n        // Set window width/height to state\n        setWindowSize({\n          width,\n          height,\n        })\n      }\n    }\n\n    const debouncedResize = pkg.debounce(handleResize, debounce)\n\n    // Add event listener\n    let observer: ResizeObserver\n    if (canvasEl) {\n      observer = new ResizeObserver(debouncedResize)\n      observer.observe(canvasEl)\n    } else {\n      window.addEventListener('resize', debouncedResize)\n    }\n    // Call handler right away so state gets updated with initial window size\n    handleResize()\n    // Remove event listener on cleanup\n    return () => {\n      window.removeEventListener('resize', debouncedResize)\n      observer?.disconnect()\n    }\n  }, [windowSize, setWindowSize])\n\n  return windowSize\n}\n","// Linear mapping from range <a1, a2> to range <b1, b2>\nexport function mapLinear(x: number, a1: number, a2: number, b1: number, b2: number) {\n  return b1 + ((x - a1) * (b2 - b1)) / (a2 - a1)\n}\n","import { Object3D } from 'three'\n\ntype CulledObject = {\n  wasFrustumCulled?: boolean\n  wasVisible?: boolean\n} & Object3D\n\n// Use to override Frustum temporarily to pre-upload textures to GPU\nexport function setAllCulled(obj: CulledObject, overrideCulled: boolean) {\n  if (!obj) return\n  if (overrideCulled === false) {\n    obj.wasFrustumCulled = obj.frustumCulled\n    obj.wasVisible = obj.visible\n    obj.visible = true\n    obj.frustumCulled = false\n  } else {\n    obj.visible = !!obj.wasVisible\n    obj.frustumCulled = !!obj.wasFrustumCulled\n  }\n  obj.children.forEach((child) => setAllCulled(child, overrideCulled))\n}\n","import { config } from './config'\nimport { Vector2, WebGLRenderer, Scene, Camera } from 'three'\nimport { invalidate } from '@react-three/fiber'\n\nimport { setAllCulled } from './utils/helpers'\nimport { useCanvasStore } from './store'\n\nconst viewportSize = new Vector2()\n\n// Flag that we need global rendering (full screen)\nexport const requestRender = (layers = [0]) => {\n  useCanvasStore.getState().globalRenderQueue = useCanvasStore.getState().globalRenderQueue || [0]\n  useCanvasStore.getState().globalRenderQueue = [...(useCanvasStore.getState().globalRenderQueue || []), ...layers]\n}\n\nexport const renderScissor = ({\n  gl,\n  scene,\n  camera,\n  left,\n  top,\n  width,\n  height,\n  layer = 0,\n  autoClear = false,\n  clearDepth = true,\n}: any) => {\n  if (!scene || !camera) return\n  const _autoClear = gl.autoClear\n  gl.autoClear = autoClear\n  gl.setScissor(left, top, width, height)\n  gl.setScissorTest(true)\n  camera.layers.set(layer)\n  clearDepth && gl.clearDepth()\n  gl.render(scene, camera)\n  gl.setScissorTest(false)\n  gl.autoClear = _autoClear\n}\n\nexport const renderViewport = ({\n  gl,\n  scene,\n  camera,\n  left,\n  top,\n  width,\n  height,\n  layer = 0,\n  scissor = true,\n  autoClear = false,\n  clearDepth = true,\n}: any) => {\n  if (!scene || !camera) return\n  const _autoClear = gl.autoClear\n  gl.getSize(viewportSize)\n  gl.autoClear = autoClear\n  gl.setViewport(left, top, width, height)\n  gl.setScissor(left, top, width, height)\n  gl.setScissorTest(scissor)\n  camera.layers.set(layer)\n  clearDepth && gl.clearDepth()\n  gl.render(scene, camera)\n  gl.setScissorTest(false)\n  gl.setViewport(0, 0, viewportSize.x, viewportSize.y)\n  gl.autoClear = _autoClear\n}\n\nexport const preloadScene = (scene: Scene, camera: Camera, layer = 0, callback?: () => void) => {\n  if (!scene || !camera) return\n  config.preloadQueue.push((gl: WebGLRenderer) => {\n    gl.setScissorTest(false)\n    setAllCulled(scene, false)\n    camera.layers.set(layer)\n    gl.render(scene, camera)\n    setAllCulled(scene, true)\n    callback && callback()\n  })\n  // auto trigger a new frame for the preload\n  invalidate()\n}\n","import { useRef, useCallback, useEffect, useMemo, useState, MutableRefObject } from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { useWindowSize } from './useWindowSize'\nimport vecn from 'vecn'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { mapLinear } from '../utils/math'\nimport { useCanvasStore } from '../store'\nimport { useScrollRig } from './useScrollRig'\n\nimport { useScrollbar, Scroll } from '../scrollbar/useScrollbar'\n\nimport type { Rect, Bounds, TrackerOptions, Tracker, ScrollState, UpdateCallback } from './useTracker.d'\n\nfunction updateBounds(bounds: Bounds, rect: Rect, scroll: Scroll, size: any) {\n  bounds.top = rect.top - scroll.y\n  bounds.bottom = rect.bottom - scroll.y\n  bounds.left = rect.left - scroll.x\n  bounds.right = rect.right - scroll.x\n  bounds.width = rect.width\n  bounds.height = rect.height\n  // move coordinate system so 0,0 is at center of screen\n  bounds.x = bounds.left + rect.width * 0.5 - size.width * 0.5\n  bounds.y = bounds.top + rect.height * 0.5 - size.height * 0.5\n  bounds.positiveYUpBottom = size.height - bounds.bottom // inverse Y\n}\n\nfunction updatePosition(position: vec3, bounds: Bounds, scaleMultiplier: number) {\n  position.x = bounds.x * scaleMultiplier\n  position.y = -1 * bounds.y * scaleMultiplier\n}\n\n/**\n * Returns the current Scene position of the DOM element\n * based on initial getBoundingClientRect and scroll delta from start\n */\nfunction useTracker(track: MutableRefObject<HTMLElement>, options?: TrackerOptions): Tracker {\n  const size = useWindowSize()\n  const { debug } = useScrollRig()\n  const { scroll, onScroll } = useScrollbar()\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n\n  // extend defaults with optional options\n  const { rootMargin, threshold, autoUpdate, wrapper } = useMemo(() => {\n    const target = { rootMargin: '0%', threshold: 0, autoUpdate: true } as TrackerOptions\n    const opts = options || {}\n    Object.keys(opts).map((key: string, index) => {\n      if (opts[key] !== undefined) target[key] = opts[key]\n    })\n    return target\n  }, [options])\n\n  // check if element is in viewport\n  const { ref, inView: inViewport } = useInView({ rootMargin, threshold })\n\n  // bind useInView ref to current tracking element\n  useLayoutEffect(() => {\n    ref(track.current)\n  }, [track])\n\n  // Using state so it's reactive\n  const [scale, setScale] = useState<vec3>()\n\n  // Using ref because\n  const scrollState: ScrollState = useRef({\n    inViewport: false,\n    progress: -1,\n    visibility: -1,\n    viewport: -1,\n  }).current\n\n  // DOM rect (initial position in pixels offset by scroll value on page load)\n  // Using ref so we can calculate bounds & position without a re-render\n  const rect = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n  }).current\n\n  // expose internal ref as a reactive state as well\n  const [reactiveRect, setReactiveRect] = useState<Rect>(rect)\n\n  // bounding rect in pixels - updated by scroll\n  const bounds = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n    positiveYUpBottom: 0,\n  }).current\n\n  // position in viewport units - updated by scroll\n  const position = useRef(vecn.vec3(0, 0, 0)).current\n\n  // Calculate bounding Rect as soon as it's available\n  useLayoutEffect(() => {\n    const _rect = track.current?.getBoundingClientRect()\n    if (!_rect) return\n    const initialY = wrapper ? (wrapper as HTMLElement).scrollTop : window.scrollY\n    const initialX = wrapper ? (wrapper as HTMLElement).scrollLeft : window.scrollX\n    rect.top = _rect.top + initialY\n    rect.bottom = _rect.bottom + initialY\n    rect.left = _rect.left + initialX\n    rect.right = _rect.right + initialX\n    rect.width = _rect.width\n    rect.height = _rect.height\n    rect.x = rect.left + _rect.width * 0.5\n    rect.y = rect.top + _rect.height * 0.5\n    setReactiveRect({ ...rect })\n    setScale(scale)\n    debug &&\n      console.log(\n        'useTracker.getBoundingClientRect:',\n        rect,\n        'intialScroll:',\n        { initialY, initialX },\n        'size:',\n        size,\n        'pageReflow:',\n        pageReflow\n      )\n  }, [track, size, pageReflow, scaleMultiplier, debug])\n\n  const update = useCallback(\n    ({ onlyUpdateInViewport = false, scroll: overrideScroll }: UpdateCallback = {}) => {\n      if (!track.current || (onlyUpdateInViewport && !scrollState.inViewport)) {\n        return\n      }\n\n      const _scroll = overrideScroll || scroll\n\n      updateBounds(bounds, rect, _scroll, size)\n      updatePosition(position, bounds, scaleMultiplier)\n\n      // scrollState setup based on scroll direction\n      const isHorizontal = _scroll.scrollDirection === 'horizontal'\n      const sizeProp = isHorizontal ? 'width' : 'height'\n      const startProp = isHorizontal ? 'left' : 'top'\n\n      // calculate progress of passing through viewport (0 = just entered, 1 = just exited)\n      const pxInside = size[sizeProp] - bounds[startProp]\n      scrollState.progress = mapLinear(pxInside, 0, size[sizeProp] + bounds[sizeProp], 0, 1) // percent of total visible distance\n      scrollState.visibility = mapLinear(pxInside, 0, bounds[sizeProp], 0, 1) // percent of item height in view\n      scrollState.viewport = mapLinear(pxInside, 0, size[sizeProp], 0, 1) // percent of window height scrolled since visible\n    },\n    [track, size, scaleMultiplier, scroll]\n  )\n\n  // update scrollState in viewport\n  useLayoutEffect(() => {\n    scrollState.inViewport = inViewport\n    // update once more in case it went out of view\n    update({ onlyUpdateInViewport: false })\n    debug && console.log('useTracker.inViewport:', inViewport, 'update()')\n  }, [inViewport])\n\n  // re-run if the callback updated\n  useLayoutEffect(() => {\n    update({ onlyUpdateInViewport: false })\n    debug && console.log('useTracker.update on resize/reflow:')\n  }, [update, pageReflow])\n\n  // auto-update on scroll\n  useEffect(() => {\n    if (autoUpdate) return onScroll((_scroll) => update({ onlyUpdateInViewport: true }))\n  }, [autoUpdate, update, onScroll])\n\n  return {\n    rect: reactiveRect, // Dom rect - doesn't change on scroll - not - reactive\n    bounds, // scrolled bounding rect in pixels - not reactive\n    scale, // reactive scene scale - includes z-axis so it can be spread onto mesh directly\n    position, // scrolled element position in viewport units - not reactive\n    scrollState, // scroll progress stats - not reactive\n    inViewport, // reactive prop for when inside viewport\n    update, // optional manual update\n  }\n}\n\nexport { useTracker }\n","import { useEffect } from 'react'\n\nimport type { Scene, Camera } from 'three'\nimport { useCanvasStore } from '../store'\nimport { preloadScene, requestRender, renderScissor, renderViewport } from '../renderer-api'\n\nexport interface ScrollRigState {\n  debug: boolean\n  isCanvasAvailable: boolean\n  hasSmoothScrollbar: boolean\n  scaleMultiplier: number\n  preloadScene: (scene: Scene, camera: Camera, layer?: number, callback?: any) => void\n  requestRender: (layers?: number[]) => void\n  renderScissor: (args: any) => void\n  renderViewport: (args: any) => void\n  reflow: () => void\n}\n\n/**\n * Public interface for ScrollRig\n */\nexport const useScrollRig = () => {\n  const isCanvasAvailable = useCanvasStore((state) => state.isCanvasAvailable)\n  const hasSmoothScrollbar = useCanvasStore((state) => state.hasSmoothScrollbar)\n  const requestReflow = useCanvasStore((state) => state.requestReflow)\n  const debug = useCanvasStore((state) => state.debug)\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n\n  useEffect(() => {\n    if (debug) {\n      // @ts-ignore\n      window._scrollRig = window._scrollRig || {}\n      // @ts-ignore\n      window._scrollRig.reflow = requestReflow\n    }\n  }, [])\n\n  return {\n    // boolean state\n    debug,\n    isCanvasAvailable,\n    hasSmoothScrollbar,\n    // scale\n    scaleMultiplier,\n    // render API\n    preloadScene,\n    requestRender,\n    renderScissor,\n    renderViewport,\n    // recalc all tracker positions\n    reflow: requestReflow,\n  } as ScrollRigState\n}\n"],"names":["config","PRIORITY_PRELOAD","PRIORITY_SCISSORS","PRIORITY_VIEWPORTS","PRIORITY_GLOBAL","DEFAULT_SCALE_MULTIPLIER","preloadQueue","useCanvasStore","create","set","debug","scaleMultiplier","globalRender","globalPriority","globalAutoClear","globalClearDepth","globalRenderQueue","clearGlobalRenderQueue","isCanvasAvailable","hasSmoothScrollbar","canvasChildren","renderToCanvas","key","mesh","props","Object","getOwnPropertyDescriptor","instances","inactive","_extends","updateCanvas","newProps","removeFromCanvas","dispose","_canvasChildren$key","map","_toPropertyKey","pageReflow","requestReflow","state","scroll","y","x","limit","velocity","progress","direction","scrollDirection","undefined","scrollTo","target","window","onScroll","useScrollbar","enabled","useLayoutEffect","vanillaUseLayoutEffect","useEffect","_excluded","EASE_EXP_OUT","t","Math","pow","LenisScrollbar$1","forwardRef","_ref","ref","children","duration","easing","smooth","_objectWithoutPropertiesLoose","lenisImpl","useRef","useImperativeHandle","start","_lenisImpl$current","current","stop","_lenisImpl$current2","on","event","cb","_lenisImpl$current3","once","_lenisImpl$current4","off","_lenisImpl$current5","notify","_lenisImpl$current6","_lenisImpl$current7","raf","time","_lenisImpl$current8","__lenis","lenis","Lenis","destroy","locked","scrollRestoration","disablePointerOnScroll","horizontal","scrollInContainer","updateGlobalState","innerRef","preventPointer","globalScrollState","_lenis$current","preventPointerEvents","prevent","style","pointerEvents","onMouseMove","useCallback","globalOnScroll","_lenis$current2","_lenis$current3","history","_lenis$current5","_lenis$current6","addEffect","_lenis$current4","_lenis$current7","disablePointer","pkg","debounce","abs","invalidate","setState","getState","scrollY","scrollX","addEventListener","invalidateOnWheelEvent","_lenis$current8","removeEffect","removeEventListener","document","documentElement","classList","toggle","_lenis$current9","_lenis$current10","wrapper","content","useMemo","html","body","firstElementChild","LenisScrollbar","smoothTouch","bind","isBrowser","mapLinear","a1","a2","b1","b2","setAllCulled","obj","overrideCulled","wasFrustumCulled","frustumCulled","wasVisible","visible","forEach","child","viewportSize","Vector2","requestRender","layers","renderScissor","gl","scene","camera","left","top","width","height","layer","autoClear","clearDepth","_autoClear","setScissor","setScissorTest","render","renderViewport","scissor","getSize","setViewport","preloadScene","callback","push","useTracker","track","options","size","useWindowSize","windowSize","setWindowSize","useState","innerWidth","Infinity","innerHeight","canvasEl","getElementById","handleResize","clientWidth","clientHeight","observer","ResizeObserver","debouncedResize","observe","_observer","disconnect","_scrollRig","reflow","useScrollRig","rootMargin","threshold","autoUpdate","opts","keys","index","inView","inViewport","useInView","scale","setScale","scrollState","visibility","viewport","rect","bottom","right","reactiveRect","setReactiveRect","bounds","positiveYUpBottom","position","vecn","vec3","_track$current","_rect","getBoundingClientRect","initialY","scrollTop","initialX","scrollLeft","console","log","update","onlyUpdateInViewport","overrideScroll","_scroll","updateBounds","updatePosition","isHorizontal","sizeProp","pxInside"],"mappings":"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"}