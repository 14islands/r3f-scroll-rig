{"version":3,"file":"scrollbar.modern.js","sources":["../src/config.ts","../src/store.ts","../src/scrollbar/useScrollbar.ts","../src/hooks/useIsomorphicLayoutEffect.ts","../src/scrollbar/SmoothScrollbar.tsx","../src/hooks/useWindowSize.ts","../src/utils/math.ts","../src/utils/helpers.ts","../src/renderer-api.ts","../src/hooks/useScrollRig.ts","../src/hooks/useTracker.ts"],"sourcesContent":["// Global config\n\nimport { Scene, Camera, WebGLRenderer } from 'three'\n\ntype PreloadCallback = (gl: WebGLRenderer, scene: Scene, camera: Camera) => void\n\nexport const config = {\n  // Execution order for useFrames (highest = last render)\n  PRIORITY_PRELOAD: 0,\n  PRIORITY_SCISSORS: 1,\n  PRIORITY_VIEWPORTS: 1,\n  PRIORITY_GLOBAL: 1000,\n\n  DEFAULT_SCALE_MULTIPLIER: 1,\n\n  // Global rendering props\n  preloadQueue: [] as PreloadCallback[],\n}\n","import create from 'zustand'\nimport { config } from './config'\n\nimport { ScrollCallback } from './scrollbar/SmoothScrollbar.d'\n\ninterface ScrollRigStore {\n  debug: boolean\n  scaleMultiplier: number\n  globalRender: boolean\n  globalPriority: number\n  globalClearDepth: boolean\n  globalRenderQueue: false | any[]\n  clearGlobalRenderQueue: () => void\n  isCanvasAvailable: boolean\n  hasSmoothScrollbar: boolean\n  canvasChildren: Record<string, any | undefined>\n  updateCanvas: (key: string, newProps: any) => void\n  renderToCanvas: (key: string, mesh: any, props: any) => void\n  removeFromCanvas: (key: string, dispose: boolean) => void\n  pageReflow: number\n  requestReflow: () => void\n  scroll: {\n    y: number\n    x: number\n    limit: number\n    velocity: number\n    progress: number\n    direction: number\n    scrollDirection?: 'vertical' | 'horizontal'\n  }\n  scrollTo: (target: any) => void\n  onScroll: (cb: ScrollCallback) => () => void\n}\n\nconst useCanvasStore = create<ScrollRigStore>((set) => ({\n  // //////////////////////////////////////////////////////////////////////////\n  // GLOBAL ScrollRig STATE\n  // //////////////////////////////////////////////////////////////////////////\n  debug: false,\n  scaleMultiplier: config.DEFAULT_SCALE_MULTIPLIER,\n\n  globalRender: true,\n  globalPriority: config.PRIORITY_GLOBAL,\n  globalClearDepth: false,\n\n  globalRenderQueue: false,\n  clearGlobalRenderQueue: () => set(() => ({ globalRenderQueue: false })),\n\n  // true if WebGL initialized without errors\n  isCanvasAvailable: true,\n\n  // true if <VirtualScrollbar> is currently enabled\n  hasSmoothScrollbar: false,\n\n  // map of all components to render on the global canvas\n  canvasChildren: {},\n\n  // add component to canvas\n  renderToCanvas: (key, mesh, props = {}) =>\n    set(({ canvasChildren }) => {\n      // check if already mounted\n      if (Object.getOwnPropertyDescriptor(canvasChildren, key)) {\n        // increase usage count\n        canvasChildren[key].instances += 1\n        canvasChildren[key].props.inactive = false\n        return { canvasChildren }\n      } else {\n        // otherwise mount it\n        const obj = { ...canvasChildren, [key]: { mesh, props, instances: 1 } }\n        return { canvasChildren: obj }\n      }\n    }),\n\n  // pass new props to a canvas component\n  updateCanvas: (key, newProps) =>\n    // @ts-ignore\n    set(({ canvasChildren }) => {\n      if (!canvasChildren[key]) return\n      const {\n        [key]: { mesh, props, instances },\n      } = canvasChildren\n      const obj = {\n        ...canvasChildren,\n        [key]: { mesh, props: { ...props, ...newProps }, instances },\n      }\n      // console.log('updateCanvas', key, { ...props, ...newProps })\n      return { canvasChildren: obj }\n    }),\n\n  // remove component from canvas\n  removeFromCanvas: (key, dispose = true) =>\n    set(({ canvasChildren }) => {\n      // check if remove or reduce instances\n      if (canvasChildren[key]?.instances > 1) {\n        // reduce usage count\n        canvasChildren[key].instances -= 1\n        return { canvasChildren }\n      } else {\n        if (dispose) {\n          // unmount since no longer used\n          const { [key]: _omit, ...obj } = canvasChildren // make a separate copy of the obj and omit\n          return { canvasChildren: obj }\n        } else {\n          // or tell it that it is \"inactive\"\n          canvasChildren[key].instances = 0\n          canvasChildren[key].props.inactive = true\n          return { canvasChildren: { ...canvasChildren } }\n        }\n      }\n    }),\n\n  // Used to ask components to re-calculate their positions after a layout reflow\n  pageReflow: 0,\n  requestReflow: () => {\n    set((state) => {\n      return { pageReflow: state.pageReflow + 1 }\n    })\n  },\n\n  // keep track of scrollbar\n  scroll: {\n    y: 0,\n    x: 0,\n    limit: 0,\n    velocity: 0,\n    progress: 0,\n    direction: 0,\n    scrollDirection: undefined,\n  },\n  scrollTo: (target) => window.scrollTo(0, target),\n  onScroll: () => () => {},\n}))\n\nexport { useCanvasStore }\n","import { useCanvasStore } from '../store'\nimport { ScrollCallback } from './SmoothScrollbar.d'\n\nexport interface Scroll {\n  y: number\n  x: number\n  limit: number\n  velocity: number\n  progress: number\n  direction: number\n  scrollDirection: string\n}\n\ninterface UseScrollbarProps {\n  enabled: boolean\n  scroll: Scroll\n  scrollTo: (target: any) => void\n  onScroll: (cb: ScrollCallback) => () => void\n}\n\n/**\n * Public interface for ScrollRig\n */\nexport const useScrollbar = () => {\n  const hasSmoothScrollbar = useCanvasStore((state) => state.hasSmoothScrollbar)\n  const scroll = useCanvasStore((state) => state.scroll)\n  const scrollTo = useCanvasStore((state) => state.scrollTo)\n  const onScroll = useCanvasStore((state) => state.onScroll)\n\n  return {\n    enabled: hasSmoothScrollbar,\n    scroll,\n    scrollTo,\n    onScroll,\n  } as UseScrollbarProps\n}\n","import { useEffect, useLayoutEffect as vanillaUseLayoutEffect } from 'react'\n\nexport const isBrowser = typeof window !== 'undefined'\n\nexport const useLayoutEffect = isBrowser ? vanillaUseLayoutEffect : useEffect\n","import { useEffect, useRef, useCallback, ReactElement, forwardRef, useImperativeHandle } from 'react'\nimport Lenis from '@studio-freight/lenis'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { useCanvasStore } from '../store'\nimport { ISmoothScrollbar, ScrollCallback, ScrollToTarget, ScrollToConfig } from './SmoothScrollbar.d'\n\nconst POINTER_EVENTS_ENABLE_VELOCITY = 1\nconst POINTER_EVENTS_DISABLE_VELOCITY = 1.5\n\nconst SmoothScrollbarImpl = (\n  {\n    children,\n    enabled = true,\n    locked = false,\n    scrollRestoration = 'auto',\n    disablePointerOnScroll = true,\n    horizontal = false,\n    scrollInContainer = false,\n    updateGlobalState = true,\n    onScroll,\n    config = {},\n    invalidate = () => {},\n    addEffect,\n  }: ISmoothScrollbar,\n  ref: any\n) => {\n  const innerRef = useRef<HTMLElement>()\n  const lenis = useRef<Lenis>()\n  const preventPointer = useRef(false)\n  const globalScrollState = useCanvasStore((s) => s.scroll)\n\n  // Expose lenis imperative API\n  useImperativeHandle(ref, () => ({\n    start: () => lenis.current?.start(),\n    stop: () => lenis.current?.stop(),\n    on: (event: string, cb: ScrollCallback) => lenis.current?.on(event, cb),\n    once: (event: string, cb: ScrollCallback) => lenis.current?.once(event, cb),\n    off: (event: string, cb?: ScrollCallback) => lenis.current?.off(event, cb),\n    notify: () => lenis.current?.notify(),\n    scrollTo: (target: ScrollToTarget, props: ScrollToConfig) => lenis.current?.scrollTo(target, props),\n    raf: (time: number) => lenis.current?.raf(time),\n    __lenis: lenis.current,\n  }))\n\n  // disable pointer events while scrolling to avoid slow event handlers\n  const preventPointerEvents = useCallback(\n    (prevent: boolean) => {\n      if (!disablePointerOnScroll) return\n      if (innerRef.current && preventPointer.current !== prevent) {\n        preventPointer.current = prevent\n        innerRef.current.style.pointerEvents = prevent ? 'none' : 'auto'\n      }\n    },\n    [disablePointerOnScroll, innerRef, preventPointer]\n  )\n\n  // apply chosen scroll restoration\n  useLayoutEffect(() => {\n    if ('scrollRestoration' in window.history) {\n      window.history.scrollRestoration = scrollRestoration\n    }\n  }, [])\n\n  // INIT LENIS\n  useLayoutEffect(() => {\n    // Set up scroll containers - allows scrolling without resizing window on iOS/mobile\n    const html = document.documentElement\n    const wrapper = document.body\n    const content = document.body.firstElementChild\n\n    html.classList.toggle('ScrollRig-scrollHtml', scrollInContainer)\n    wrapper.classList.toggle('ScrollRig-scrollWrapper', scrollInContainer)\n\n    if (scrollInContainer) {\n      Object.assign(config, {\n        smoothTouch: true,\n        wrapper,\n        content,\n      })\n    }\n\n    lenis.current = new Lenis({\n      direction: horizontal ? 'horizontal' : 'vertical',\n      ...config,\n    })\n\n    // let r3f drive the frameloop\n    let removeEffect: () => void\n    if (addEffect) {\n      removeEffect = addEffect((time: number) => lenis.current?.raf(time))\n    } else {\n      // manual animation frame\n      // TODO use framer motion / popmotion render loop?\n      let _raf: number\n      function raf(time: number) {\n        lenis.current?.raf(time)\n        _raf = requestAnimationFrame(raf)\n      }\n      _raf = requestAnimationFrame(raf)\n      removeEffect = () => cancelAnimationFrame(_raf)\n    }\n\n    return () => {\n      removeEffect()\n      lenis.current?.destroy()\n    }\n  }, [])\n\n  // BIND TO LENIS SCROLL EVENT\n  useLayoutEffect(() => {\n    lenis.current?.on('scroll', ({ scroll, limit, velocity, direction, progress }: any) => {\n      const y = !horizontal ? scroll : 0\n      const x = horizontal ? scroll : 0\n\n      // update global scroll store\n      if (updateGlobalState) {\n        globalScrollState.y = y\n        globalScrollState.x = x\n        globalScrollState.limit = limit\n        globalScrollState.velocity = velocity\n        globalScrollState.direction = direction\n        globalScrollState.progress = progress\n      }\n\n      if (Math.abs(velocity) > POINTER_EVENTS_DISABLE_VELOCITY) {\n        preventPointerEvents(true)\n      }\n      if (Math.abs(velocity) < POINTER_EVENTS_ENABLE_VELOCITY) {\n        preventPointerEvents(false)\n      }\n\n      onScroll && onScroll({ scroll, limit, velocity, direction, progress })\n\n      invalidate() // demand a R3F frame on scroll\n    })\n\n    // update global state\n    if (updateGlobalState) {\n      globalScrollState.scrollDirection = horizontal ? 'horizontal' : 'vertical'\n\n      // expose global scrollTo function\n      // @ts-ignore\n      useCanvasStore.setState({ scrollTo: lenis.current?.scrollTo })\n\n      // expose global onScroll function to subscribe to scroll events\n      useCanvasStore.setState({\n        onScroll: (cb: ScrollCallback) => {\n          lenis.current?.on('scroll', cb)\n          lenis.current?.notify() // send current scroll to new subscriber\n          return () => lenis.current?.off('scroll', cb)\n        },\n      })\n\n      // Set current scroll position on load in case reloaded further down\n      useCanvasStore.getState().scroll.y = window.scrollY\n      useCanvasStore.getState().scroll.x = window.scrollX\n    }\n\n    // fire our internal scroll callback to update globalState\n    lenis.current?.notify()\n    return () => {\n      lenis.current?.off('scroll')\n    }\n  }, [])\n\n  // Interaction events - invalidate R3F loop and enable pointer events\n  useLayoutEffect(() => {\n    const invalidateOnWheelEvent = () => invalidate()\n    const onPointerInteraction = () => preventPointerEvents(false)\n    window.addEventListener('pointermove', onPointerInteraction)\n    window.addEventListener('pointerdown', onPointerInteraction)\n    window.addEventListener('wheel', invalidateOnWheelEvent)\n    return () => {\n      lenis.current?.off('scroll')\n      window.removeEventListener('pointermove', onPointerInteraction)\n      window.removeEventListener('pointerdown', onPointerInteraction)\n      window.removeEventListener('wheel', invalidateOnWheelEvent)\n    }\n  }, [])\n\n  // Mark as enabled in global state\n  useEffect(() => {\n    if (updateGlobalState) {\n      document.documentElement.classList.toggle('js-smooth-scrollbar-enabled', enabled)\n      document.documentElement.classList.toggle('js-smooth-scrollbar-disabled', !enabled)\n      useCanvasStore.setState({ hasSmoothScrollbar: enabled })\n    }\n  }, [enabled])\n\n  useEffect(() => {\n    locked ? lenis.current?.stop() : lenis.current?.start()\n  }, [locked])\n\n  {\n    /* Use function child so we can spread props\n    - for instance disable pointer events while scrolling */\n  }\n  return children({ ref: innerRef })\n}\n\nexport const SmoothScrollbar = forwardRef<any, ISmoothScrollbar>(SmoothScrollbarImpl)\n","import { useState, useEffect } from 'react'\nimport { ResizeObserver as Polyfill } from '@juggle/resize-observer'\nimport pkg from 'debounce'\n\nconst isBrowser = typeof window !== 'undefined'\nexport interface WindowSize {\n  width: number\n  height: number\n}\n\ntype ConfigProps = {\n  debounce?: number\n}\n\n/*\n * Triggers a resize only if the Canvas DOM element changed dimensions - not on window resize event\n *\n * This is to avoid costly re-renders when the URL bar is scrolled away on mobile\n *\n * Based on: https://usehooks.com/useWindowSize/\n */\n\nexport function useWindowSize({ debounce = 0 }: ConfigProps = {}) {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowSize>({\n    width: isBrowser ? window.innerWidth : Infinity,\n    height: isBrowser ? window.innerHeight : Infinity,\n  })\n\n  useEffect(() => {\n    // check if we can find a canvas - if so, base size on canvas instead of window\n    // since 100vh !== window.innerHeight on mobile\n    const canvasEl = document.getElementById('ScrollRig-canvas')\n\n    // Handler to call on window resize\n    function handleResize() {\n      const width = canvasEl ? canvasEl.clientWidth : window.innerWidth\n      const height = canvasEl ? canvasEl.clientHeight : window.innerHeight\n\n      if (width !== windowSize.width || height !== windowSize.height) {\n        // Set window width/height to state\n        setWindowSize({\n          width,\n          height,\n        })\n      }\n    }\n\n    const debouncedResize = pkg.debounce(handleResize, debounce)\n\n    // Add event listener\n    const ResizeObserver = window.ResizeObserver || Polyfill\n    let observer: ResizeObserver\n    if (canvasEl) {\n      observer = new ResizeObserver(debouncedResize)\n      observer.observe(canvasEl)\n    } else {\n      window.addEventListener('resize', debouncedResize)\n    }\n    // Call handler right away so state gets updated with initial window size\n    handleResize()\n    // Remove event listener on cleanup\n    return () => {\n      window.removeEventListener('resize', debouncedResize)\n      observer?.disconnect()\n    }\n  }, [windowSize, setWindowSize])\n\n  return windowSize\n}\n","// Linear mapping from range <a1, a2> to range <b1, b2>\nexport function mapLinear(x: number, a1: number, a2: number, b1: number, b2: number) {\n  return b1 + ((x - a1) * (b2 - b1)) / (a2 - a1)\n}\n","import { Object3D } from 'three'\n\ntype CulledObject = {\n  wasFrustumCulled?: boolean\n  wasVisible?: boolean\n} & Object3D\n\n// Use to override Frustum temporarily to pre-upload textures to GPU\nexport function setAllCulled(obj: CulledObject, overrideCulled: boolean) {\n  if (!obj) return\n  if (overrideCulled === false) {\n    obj.wasFrustumCulled = obj.frustumCulled\n    obj.wasVisible = obj.visible\n    obj.visible = true\n    obj.frustumCulled = false\n  } else {\n    obj.visible = !!obj.wasVisible\n    obj.frustumCulled = !!obj.wasFrustumCulled\n  }\n  obj.children.forEach((child) => setAllCulled(child, overrideCulled))\n}\n","import { config } from './config'\nimport { Vector2, WebGLRenderer, Scene, Camera } from 'three'\nimport { invalidate } from '@react-three/fiber'\n\nimport { setAllCulled } from './utils/helpers'\nimport { useCanvasStore } from './store'\n\nconst viewportSize = new Vector2()\n\n// Flag that we need global rendering (full screen)\nexport const requestRender = (layers = [0]) => {\n  useCanvasStore.getState().globalRenderQueue = useCanvasStore.getState().globalRenderQueue || [0]\n  useCanvasStore.getState().globalRenderQueue = [...(useCanvasStore.getState().globalRenderQueue || []), ...layers]\n}\n\nexport const renderScissor = ({\n  gl,\n  scene,\n  camera,\n  left,\n  top,\n  width,\n  height,\n  layer = 0,\n  autoClear = false,\n  clearDepth = false,\n}: any) => {\n  if (!scene || !camera) return\n  gl.autoClear = autoClear\n  gl.setScissor(left, top, width, height)\n  gl.setScissorTest(true)\n  camera.layers.set(layer)\n  clearDepth && gl.clearDepth()\n  gl.render(scene, camera)\n  gl.setScissorTest(false)\n}\n\nexport const renderViewport = ({\n  gl,\n  scene,\n  camera,\n  left,\n  top,\n  width,\n  height,\n  layer = 0,\n  scissor = true,\n  autoClear = false,\n  clearDepth = false,\n}: any) => {\n  if (!scene || !camera) return\n  gl.getSize(viewportSize)\n  gl.autoClear = autoClear\n  gl.setViewport(left, top, width, height)\n  gl.setScissor(left, top, width, height)\n  gl.setScissorTest(scissor)\n  camera.layers.set(layer)\n  clearDepth && gl.clearDepth()\n  gl.render(scene, camera)\n  gl.setScissorTest(false)\n  gl.setViewport(0, 0, viewportSize.x, viewportSize.y)\n}\n\nexport const preloadScene = (scene: Scene, camera: Camera, layer = 0, callback?: () => void) => {\n  config.preloadQueue.push((gl: WebGLRenderer, globalScene: Scene, globalCamera: Camera) => {\n    gl.setScissorTest(false)\n    setAllCulled(scene || globalScene, false)\n    camera.layers.set(layer)\n    gl.render(scene || globalScene, camera || globalCamera)\n    setAllCulled(scene || globalScene, true)\n    callback && callback()\n  })\n  // auto trigger a new frame for the preload\n  invalidate()\n}\n","import { useEffect } from 'react'\n\nimport type { Scene, Camera } from 'three'\nimport { useCanvasStore } from '../store'\nimport { preloadScene, requestRender, renderScissor, renderViewport } from '../renderer-api'\n\nexport interface ScrollRigState {\n  debug: boolean\n  isCanvasAvailable: boolean\n  hasSmoothScrollbar: boolean\n  scaleMultiplier: number\n  preloadScene: (scene: Scene, camera: Camera, layer?: number, callback?: any) => void\n  requestRender: (layers?: number[]) => void\n  renderScissor: (args: any) => void\n  renderViewport: (args: any) => void\n  reflow: () => void\n}\n\n/**\n * Public interface for ScrollRig\n */\nexport const useScrollRig = () => {\n  const isCanvasAvailable = useCanvasStore((state) => state.isCanvasAvailable)\n  const hasSmoothScrollbar = useCanvasStore((state) => state.hasSmoothScrollbar)\n  const requestReflow = useCanvasStore((state) => state.requestReflow)\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n  const debug = useCanvasStore((state) => state.debug)\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n\n  useEffect(() => {\n    if (debug) {\n      // @ts-ignore\n      window._scrollRig = window._scrollRig || {}\n      // @ts-ignore\n      window._scrollRig.reflow = requestReflow\n    }\n  }, [])\n\n  return {\n    // boolean state\n    debug,\n    isCanvasAvailable,\n    hasSmoothScrollbar,\n    // scale\n    scaleMultiplier,\n    // render API\n    preloadScene,\n    requestRender,\n    renderScissor,\n    renderViewport,\n    // recalc all tracker positions\n    reflow: requestReflow,\n    reflowCompleted: pageReflow,\n  } as ScrollRigState\n}\n","import { useRef, useCallback, useEffect, useMemo, useState, MutableRefObject } from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { useWindowSize } from './useWindowSize'\nimport vecn from 'vecn'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { mapLinear } from '../utils/math'\nimport { useCanvasStore } from '../store'\nimport { useScrollRig } from './useScrollRig'\n\nimport { useScrollbar, Scroll } from '../scrollbar/useScrollbar'\n\nimport type { Rect, Bounds, TrackerOptions, Tracker, ScrollState, UpdateCallback } from './useTracker.d'\n\nfunction updateBounds(bounds: Bounds, rect: Rect, scroll: Scroll, size: any) {\n  bounds.top = rect.top - (scroll.y || 0)\n  bounds.bottom = rect.bottom - (scroll.y || 0)\n  bounds.left = rect.left - (scroll.x || 0)\n  bounds.right = rect.right - (scroll.x || 0)\n  bounds.width = rect.width\n  bounds.height = rect.height\n  // move coordinate system so 0,0 is at center of screen\n  bounds.x = bounds.left + rect.width * 0.5 - size.width * 0.5\n  bounds.y = bounds.top + rect.height * 0.5 - size.height * 0.5\n  bounds.positiveYUpBottom = size.height - bounds.bottom // inverse Y\n}\n\nfunction updatePosition(position: vec3, bounds: Bounds, scaleMultiplier: number) {\n  position.x = bounds.x * scaleMultiplier\n  position.y = -1 * bounds.y * scaleMultiplier\n}\n\n/**\n * Returns the current Scene position of the DOM element\n * based on initial getBoundingClientRect and scroll delta from start\n */\nfunction useTracker(track: MutableRefObject<HTMLElement>, options?: TrackerOptions): Tracker {\n  const size = useWindowSize()\n  const { debug } = useScrollRig()\n  const { scroll, onScroll } = useScrollbar()\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n\n  // extend defaults with optional options\n  const { rootMargin, threshold, autoUpdate, wrapper } = useMemo(() => {\n    const target = { rootMargin: '0%', threshold: 0, autoUpdate: true } as TrackerOptions\n    const opts = options || {}\n    Object.keys(opts).map((key: string, index) => {\n      if (opts[key] !== undefined) target[key] = opts[key]\n    })\n    return target\n  }, [options])\n\n  // check if element is in viewport\n  const { ref, inView: inViewport } = useInView({ rootMargin, threshold })\n\n  // bind useInView ref to current tracking element\n  useLayoutEffect(() => {\n    ref(track.current)\n  }, [track])\n\n  // Using state so it's reactive\n  const [scale, setScale] = useState<vec3>(vecn.vec3(0, 0, 0))\n\n  // Using ref because\n  const scrollState: ScrollState = useRef({\n    inViewport: false,\n    progress: -1,\n    visibility: -1,\n    viewport: -1,\n  }).current\n\n  // DOM rect (initial position in pixels offset by scroll value on page load)\n  // Using ref so we can calculate bounds & position without a re-render\n  const rect = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n  }).current\n\n  // expose internal ref as a reactive state as well\n  const [reactiveRect, setReactiveRect] = useState<Rect>(rect)\n\n  // bounding rect in pixels - updated by scroll\n  const bounds = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n    positiveYUpBottom: 0,\n  }).current\n\n  // position in viewport units - updated by scroll\n  const position = useRef(vecn.vec3(0, 0, 0)).current\n\n  // Calculate bounding Rect as soon as it's available\n  useLayoutEffect(() => {\n    const _rect = track.current?.getBoundingClientRect()\n    if (!_rect) return\n    const initialY = wrapper ? (wrapper as HTMLElement).scrollTop : window.scrollY\n    const initialX = wrapper ? (wrapper as HTMLElement).scrollLeft : window.scrollX\n    rect.top = _rect.top + initialY\n    rect.bottom = _rect.bottom + initialY\n    rect.left = _rect.left + initialX\n    rect.right = _rect.right + initialX\n    rect.width = _rect.width\n    rect.height = _rect.height\n    setReactiveRect({ ...rect })\n    setScale(vecn.vec3(rect?.width * scaleMultiplier, rect?.height * scaleMultiplier, 1))\n    debug &&\n      console.log(\n        'useTracker.getBoundingClientRect:',\n        rect,\n        'intialScroll:',\n        { initialY, initialX },\n        'size:',\n        size,\n        'pageReflow:',\n        pageReflow\n      )\n  }, [track, size, pageReflow, scaleMultiplier, debug])\n\n  const update = useCallback(\n    ({ onlyUpdateInViewport = false, scroll: overrideScroll }: UpdateCallback = {}) => {\n      if (!track.current || (onlyUpdateInViewport && !scrollState.inViewport)) {\n        return\n      }\n\n      const _scroll = overrideScroll || scroll\n\n      updateBounds(bounds, rect, _scroll, size)\n      updatePosition(position, bounds, scaleMultiplier)\n\n      // scrollState setup based on scroll direction\n      const isHorizontal = _scroll.scrollDirection === 'horizontal'\n      const sizeProp = isHorizontal ? 'width' : 'height'\n      const startProp = isHorizontal ? 'left' : 'top'\n\n      // calculate progress of passing through viewport (0 = just entered, 1 = just exited)\n      const pxInside = size[sizeProp] - bounds[startProp]\n      scrollState.progress = mapLinear(pxInside, 0, size[sizeProp] + bounds[sizeProp], 0, 1) // percent of total visible distance\n      scrollState.visibility = mapLinear(pxInside, 0, bounds[sizeProp], 0, 1) // percent of item height in view\n      scrollState.viewport = mapLinear(pxInside, 0, size[sizeProp], 0, 1) // percent of window height scrolled since visible\n    },\n    [track, size, scaleMultiplier, scroll]\n  )\n\n  // update scrollState in viewport\n  useLayoutEffect(() => {\n    scrollState.inViewport = inViewport\n    // update once more in case it went out of view\n    update({ onlyUpdateInViewport: false })\n    debug && console.log('useTracker.inViewport:', inViewport, 'update()')\n  }, [inViewport])\n\n  // re-run if the callback updated\n  useLayoutEffect(() => {\n    update({ onlyUpdateInViewport: false })\n    debug && console.log('useTracker.update on resize/reflow')\n  }, [update, pageReflow])\n\n  // auto-update on scroll\n  useEffect(() => {\n    if (autoUpdate) return onScroll((_scroll) => update({ onlyUpdateInViewport: true }))\n  }, [autoUpdate, update, onScroll])\n\n  return {\n    rect: reactiveRect, // Dom rect - doesn't change on scroll - not - reactive\n    bounds, // scrolled bounding rect in pixels - not reactive\n    scale, // reactive scene scale - includes z-axis so it can be spread onto mesh directly\n    position, // scrolled element position in viewport units - not reactive\n    scrollState, // scroll progress stats - not reactive\n    inViewport, // reactive prop for when inside viewport\n    update, // optional manual update\n  }\n}\n\nexport { useTracker }\n"],"names":["config","PRIORITY_PRELOAD","PRIORITY_SCISSORS","PRIORITY_VIEWPORTS","PRIORITY_GLOBAL","DEFAULT_SCALE_MULTIPLIER","preloadQueue","useCanvasStore","create","set","debug","scaleMultiplier","globalRender","globalPriority","globalClearDepth","globalRenderQueue","clearGlobalRenderQueue","isCanvasAvailable","hasSmoothScrollbar","canvasChildren","renderToCanvas","key","mesh","props","Object","getOwnPropertyDescriptor","instances","inactive","_extends","updateCanvas","newProps","removeFromCanvas","dispose","_canvasChildren$key","_objectWithoutPropertiesLoose","map","_toPropertyKey","pageReflow","requestReflow","state","scroll","y","x","limit","velocity","progress","direction","scrollDirection","undefined","scrollTo","target","window","onScroll","useScrollbar","enabled","useLayoutEffect","vanillaUseLayoutEffect","useEffect","SmoothScrollbar","forwardRef","SmoothScrollbarImpl","children","locked","scrollRestoration","disablePointerOnScroll","horizontal","scrollInContainer","updateGlobalState","invalidate","addEffect","ref","innerRef","useRef","lenis","preventPointer","globalScrollState","s","useImperativeHandle","start","_lenis$current","current","stop","_lenis$current2","on","event","cb","_lenis$current3","once","_lenis$current4","off","_lenis$current5","notify","_lenis$current6","_lenis$current7","raf","time","_lenis$current8","__lenis","preventPointerEvents","useCallback","prevent","style","pointerEvents","history","html","document","documentElement","wrapper","body","content","firstElementChild","removeEffect","classList","toggle","assign","smoothTouch","Lenis","_lenis$current9","_raf","requestAnimationFrame","_lenis$current10","cancelAnimationFrame","_lenis$current11","destroy","_lenis$current12","_lenis$current17","_lenis$current13","Math","abs","setState","_lenis$current14","_lenis$current15","_lenis$current16","getState","scrollY","scrollX","_lenis$current18","invalidateOnWheelEvent","onPointerInteraction","addEventListener","_lenis$current19","removeEventListener","_lenis$current20","_lenis$current21","isBrowser","mapLinear","a1","a2","b1","b2","setAllCulled","obj","overrideCulled","wasFrustumCulled","frustumCulled","wasVisible","visible","forEach","child","viewportSize","Vector2","requestRender","layers","renderScissor","gl","scene","camera","left","top","width","height","layer","autoClear","clearDepth","setScissor","setScissorTest","render","renderViewport","scissor","getSize","setViewport","preloadScene","callback","push","globalScene","globalCamera","useScrollRig","_scrollRig","reflow","reflowCompleted","useTracker","track","options","size","debounce","windowSize","setWindowSize","useState","innerWidth","Infinity","innerHeight","canvasEl","getElementById","handleResize","clientWidth","clientHeight","debouncedResize","pkg","ResizeObserver","Polyfill","observer","observe","_observer","disconnect","useWindowSize","rootMargin","threshold","autoUpdate","useMemo","opts","keys","index","inView","inViewport","useInView","scale","setScale","vecn","vec3","scrollState","visibility","viewport","rect","bottom","right","reactiveRect","setReactiveRect","bounds","positiveYUpBottom","position","_track$current","_rect","getBoundingClientRect","initialY","scrollTop","initialX","scrollLeft","console","log","update","onlyUpdateInViewport","overrideScroll","_scroll","updateBounds","updatePosition","isHorizontal","sizeProp","pxInside"],"mappings":"i9BAMa,MAAAA,EAAS,CAEpBC,iBAAkB,EAClBC,kBAAmB,EACnBC,mBAAoB,EACpBC,gBAAiB,IAEjBC,yBAA0B,EAG1BC,aAAc,ICkBVC,EAAiBC,EAAwBC,IAAS,CAItDC,OAAO,EACPC,gBAAiBX,EAAOK,yBAExBO,cAAc,EACdC,eAAgBb,EAAOI,gBACvBU,kBAAkB,EAElBC,mBAAmB,EACnBC,uBAAwBA,IAAMP,EAAI,KAAO,CAAEM,mBAAmB,KAG9DE,mBAAmB,EAGnBC,oBAAoB,EAGpBC,eAAgB,GAGhBC,eAAgBA,CAACC,EAAKC,EAAMC,EAAQ,CAAA,IAClCd,EAAI,EAAGU,oBAEDK,OAAOC,yBAAyBN,EAAgBE,IAElDF,EAAeE,GAAKK,WAAa,EACjCP,EAAeE,GAAKE,MAAMI,UAAW,EAC9B,CAAER,mBAIF,CAAEA,eADAS,EAAQT,CAAAA,EAAAA,EAAgB,CAAAE,CAACA,GAAM,CAAEC,OAAMC,QAAOG,UAAW,OAMxEG,aAAcA,CAACR,EAAKS,IAElBrB,EAAI,EAAGU,qBACL,IAAKA,EAAeE,GAAM,OAC1B,MACEA,CAACA,IAAMC,KAAEA,EAAIC,MAAEA,EAAKG,UAAEA,IACpBP,EAMJ,MAAO,CAAEA,eALAS,EACJT,GAAAA,GACHE,CAACA,GAAM,CAAEC,OAAMC,MAAKK,KAAOL,EAAUO,GAAYJ,kBAOvDK,iBAAkBA,CAACV,EAAKW,GAAU,IAChCvB,EAAI,EAAGU,qBAAoB,IAAAc,EAEzB,OAAIA,OAAAA,EAAAd,EAAeE,SAAfY,EAAAA,EAAqBP,WAAY,GAEnCP,EAAeE,GAAKK,WAAa,EAC1B,CAAEP,mBAELa,EAGK,CAAEb,iJADmBe,CAAKf,EAAc,CAAtCE,GAAGc,IAAAC,MAIZjB,EAAeE,GAAKK,UAAY,EAChCP,EAAeE,GAAKE,MAAMI,UAAW,EAC9B,CAAER,eAAcS,EAAA,CAAA,EAAOT,IAEjC,GAILkB,WAAY,EACZC,cAAeA,KACb7B,EAAK8B,IACI,CAAEF,WAAYE,EAAMF,WAAa,IAE5C,EAGAG,OAAQ,CACNC,EAAG,EACHC,EAAG,EACHC,MAAO,EACPC,SAAU,EACVC,SAAU,EACVC,UAAW,EACXC,qBAAiBC,GAEnBC,SAAWC,GAAWC,OAAOF,SAAS,EAAGC,GACzCE,SAAUA,IAAM,UC3GLC,EAAeA,KAMnB,CACLC,QANyB/C,EAAgBgC,GAAUA,EAAMrB,oBAOzDsB,OANajC,EAAgBgC,GAAUA,EAAMC,QAO7CS,SANe1C,EAAgBgC,GAAUA,EAAMU,UAO/CG,SANe7C,EAAgBgC,GAAUA,EAAMa,YCvBtCG,EAF8B,oBAAXJ,OAEWK,EAAyBC,ECqMvDC,EAAkBC,EA/LHC,EAExBC,WACAP,QAAAA,GAAU,EACVQ,OAAAA,GAAS,EACTC,kBAAAA,EAAoB,OACpBC,uBAAAA,GAAyB,EACzBC,WAAAA,GAAa,EACbC,kBAAAA,GAAoB,EACpBC,kBAAAA,GAAoB,EACpBf,WACApD,OAAAA,EAAS,CAAE,EACXoE,WAAAA,EAAaA,SACbC,aAEFC,KAEA,MAAMC,EAAWC,IACXC,EAAQD,IACRE,EAAiBF,GAAO,GACxBG,EAAoBpE,EAAgBqE,GAAMA,EAAEpC,QAGlDqC,EAAoBP,EAAK,KAAO,CAC9BQ,MAAOA,KAAA,IAAAC,EAAA,OAAMA,OAANA,EAAMN,EAAMO,cAAND,EAAAA,EAAeD,OAAK,EACjCG,KAAMA,KAAAC,IAAAA,EAAAA,OAAmB,OAAnBA,EAAMT,EAAMO,cAAO,EAAbE,EAAeD,MAAM,EACjCE,GAAIA,CAACC,EAAeC,KAAkBC,IAAAA,EAAAA,OAAkB,OAAlBA,EAAKb,EAAMO,cAAO,EAAbM,EAAeH,GAAGC,EAAOC,EAAE,EACtEE,KAAMA,CAACH,EAAeC,KAAkB,IAAAG,EAAA,OAAKA,OAALA,EAAKf,EAAMO,cAANQ,EAAAA,EAAeD,KAAKH,EAAOC,EAAE,EAC1EI,IAAKA,CAACL,EAAeC,KAAmB,IAAAK,EAAAA,OAAKA,OAALA,EAAKjB,EAAMO,cAANU,EAAAA,EAAeD,IAAIL,EAAOC,EAAE,EACzEM,OAAQA,KAAA,IAAAC,EAAA,OAAMA,OAANA,EAAMnB,EAAMO,cAANY,EAAAA,EAAeD,QAAM,EACnC1C,SAAUA,CAACC,EAAwB3B,KAAqB,IAAAsE,EAAA,OAAkB,OAAlBA,EAAKpB,EAAMO,cAAO,EAAba,EAAe5C,SAASC,EAAQ3B,EAAK,EAClGuE,IAAMC,IAAY,IAAAC,EAAAA,OAAKA,OAALA,EAAKvB,EAAMO,cAANgB,EAAAA,EAAeF,IAAIC,EAAI,EAC9CE,QAASxB,EAAMO,WAIjB,MAAMkB,EAAuBC,EAC1BC,IACMpC,GACDO,EAASS,SAAWN,EAAeM,UAAYoB,IACjD1B,EAAeM,QAAUoB,EACzB7B,EAASS,QAAQqB,MAAMC,cAAgBF,EAAU,OAAS,OAC3D,EAEH,CAACpC,EAAwBO,EAAUG,IAgJrC,OA5IAnB,EAAgB,KACV,sBAAuBJ,OAAOoD,UAChCpD,OAAOoD,QAAQxC,kBAAoBA,EACpC,EACA,IAGHR,EAAgB,KAEd,MAAMiD,EAAOC,SAASC,gBAChBC,EAAUF,SAASG,KACnBC,EAAUJ,SAASG,KAAKE,kBAmB9B,IAAIC,EACJ,GAlBAP,EAAKQ,UAAUC,OAAO,uBAAwB/C,GAC9CyC,EAAQK,UAAUC,OAAO,0BAA2B/C,GAEhDA,GACF1C,OAAO0F,OAAOlH,EAAQ,CACpBmH,aAAa,EACbR,UACAE,YAIJpC,EAAMO,QAAU,IAAIoC,EAAKxF,GACvBkB,UAAWmB,EAAa,aAAe,YACpCjE,IAKDqE,EACF0C,EAAe1C,EAAW0B,IAAYsB,IAAAA,SAAkB,OAAlBA,EAAK5C,EAAMO,cAAO,EAAbqC,EAAevB,IAAIC,EAAI,OAC7D,CAGL,IAAIuB,EAKJA,EAAOC,sBAJP,SAASzB,EAAIC,OAAYyB,SACvBA,EAAA/C,EAAMO,UAANwC,EAAe1B,IAAIC,GACnBuB,EAAOC,sBAAsBzB,EAC/B,GAEAiB,EAAeA,IAAMU,qBAAqBH,EAC3C,CAED,MAAO,KAAKI,IAAAA,EACVX,IACAW,OAAAA,EAAAjD,EAAMO,UAAN0C,EAAeC,SAAO,CACxB,EACC,IAGHpE,EAAgB,KAAK,IAAAqE,EAAAC,EA4BIC,EAuBvB,OAlDa,OAAbF,EAAAnD,EAAMO,UAAN4C,EAAezC,GAAG,SAAU,EAAG3C,SAAQG,QAAOC,WAAUE,YAAWD,eACjE,MACMH,EAAIuB,EAAazB,EAAS,EAG5B2B,IACFQ,EAAkBlC,EALTwB,EAAsB,EAATzB,EAMtBmC,EAAkBjC,EAAIA,EACtBiC,EAAkBhC,MAAQA,EAC1BgC,EAAkB/B,SAAWA,EAC7B+B,EAAkB7B,UAAYA,EAC9B6B,EAAkB9B,SAAWA,GAG3BkF,KAAKC,IAAIpF,GArHqB,KAsHhCsD,GAAqB,GAEnB6B,KAAKC,IAAIpF,GAzHoB,GA0H/BsD,GAAqB,GAGvB9C,GAAYA,EAAS,CAAEZ,SAAQG,QAAOC,WAAUE,YAAWD,aAE3DuB,GACF,GAGID,IACFQ,EAAkB5B,gBAAkBkB,EAAa,aAAe,WAIhE1D,EAAe0H,SAAS,CAAEhF,SAAuB,OAAf6E,EAAErD,EAAMO,cAAO,EAAb8C,EAAe7E,WAGnD1C,EAAe0H,SAAS,CACtB7E,SAAWiC,QAAsB6C,EAAAC,EAG/B,OAFa,OAAbD,EAAAzD,EAAMO,UAANkD,EAAe/C,GAAG,SAAUE,UAC5B8C,EAAA1D,EAAMO,UAANmD,EAAexC,SACR,KAAAyC,IAAAA,SAAmB,OAAnBA,EAAM3D,EAAMO,cAAO,EAAboD,EAAe3C,IAAI,SAAUJ,EAAE,CAAC,IAKjD9E,EAAe8H,WAAW7F,OAAOC,EAAIU,OAAOmF,QAC5C/H,EAAe8H,WAAW7F,OAAOE,EAAIS,OAAOoF,SAIjC,OAAbV,EAAApD,EAAMO,UAAN6C,EAAelC,SACR,KAAK6C,IAAAA,EACVA,OAAAA,EAAA/D,EAAMO,UAANwD,EAAe/C,IAAI,SACrB,CAAA,EACC,IAGHlC,EAAgB,KACd,MAAMkF,EAAyBA,IAAMrE,IAC/BsE,EAAuBA,IAAMxC,GAAqB,GAIxD,OAHA/C,OAAOwF,iBAAiB,cAAeD,GACvCvF,OAAOwF,iBAAiB,cAAeD,GACvCvF,OAAOwF,iBAAiB,QAASF,GAC1B,KAAKG,IAAAA,EACVA,OAAAA,EAAAnE,EAAMO,UAAN4D,EAAenD,IAAI,UACnBtC,OAAO0F,oBAAoB,cAAeH,GAC1CvF,OAAO0F,oBAAoB,cAAeH,GAC1CvF,OAAO0F,oBAAoB,QAASJ,EAAsB,CAC5D,EACC,IAGHhF,EAAU,KACJU,IACFsC,SAASC,gBAAgBM,UAAUC,OAAO,8BAA+B3D,GACzEmD,SAASC,gBAAgBM,UAAUC,OAAO,gCAAiC3D,GAC3E/C,EAAe0H,SAAS,CAAE/G,mBAAoBoC,IAC/C,EACA,CAACA,IAEJG,EAAU,KAAKqF,IAAAA,EAAAC,EACbjF,EAASgF,OAAHA,EAAGrE,EAAMO,UAAN8D,EAAe7D,OAAS8D,OAAHA,EAAGtE,EAAMO,UAAN+D,EAAejE,OAAK,EACpD,CAAChB,IAMGD,EAAS,CAAES,IAAKC,GAAU,GClM7ByE,EAA8B,oBAAX7F,OCHT,SAAA8F,EAAUvG,EAAWwG,EAAYC,EAAYC,EAAYC,GACvE,OAAOD,GAAO1G,EAAIwG,IAAOG,EAAKD,IAAQD,EAAKD,EAC7C,UCKgBI,EAAaC,EAAmBC,GACzCD,KACkB,IAAnBC,GACFD,EAAIE,iBAAmBF,EAAIG,cAC3BH,EAAII,WAAaJ,EAAIK,QACrBL,EAAIK,SAAU,EACdL,EAAIG,eAAgB,IAEpBH,EAAIK,UAAYL,EAAII,WACpBJ,EAAIG,gBAAkBH,EAAIE,kBAE5BF,EAAI1F,SAASgG,QAASC,GAAUR,EAAaQ,EAAON,IACtD,CCbA,MAAMO,EAAe,IAAIC,EAGZC,EAAgBA,CAACC,EAAS,CAAC,MACtC3J,EAAe8H,WAAWtH,kBAAoBR,EAAe8H,WAAWtH,mBAAqB,CAAC,GAC9FR,EAAe8H,WAAWtH,kBAAoB,IAAKR,EAAe8H,WAAWtH,mBAAqB,MAAQmJ,EAC5G,EAEaC,EAAgBA,EAC3BC,KACAC,QACAC,SACAC,OACAC,MACAC,QACAC,SACAC,MAAAA,EAAQ,EACRC,UAAAA,GAAY,EACZC,WAAAA,GAAa,MAERR,GAAUC,IACfF,EAAGQ,UAAYA,EACfR,EAAGU,WAAWP,EAAMC,EAAKC,EAAOC,GAChCN,EAAGW,gBAAe,GAClBT,EAAOJ,OAAOzJ,IAAIkK,GAClBE,GAAcT,EAAGS,aACjBT,EAAGY,OAAOX,EAAOC,GACjBF,EAAGW,gBAAe,GACpB,EAEaE,EAAiBA,EAC5Bb,KACAC,QACAC,SACAC,OACAC,MACAC,QACAC,SACAC,MAAAA,EAAQ,EACRO,QAAAA,GAAU,EACVN,UAAAA,GAAY,EACZC,WAAAA,GAAa,MAERR,GAAUC,IACfF,EAAGe,QAAQpB,GACXK,EAAGQ,UAAYA,EACfR,EAAGgB,YAAYb,EAAMC,EAAKC,EAAOC,GACjCN,EAAGU,WAAWP,EAAMC,EAAKC,EAAOC,GAChCN,EAAGW,eAAeG,GAClBZ,EAAOJ,OAAOzJ,IAAIkK,GAClBE,GAAcT,EAAGS,aACjBT,EAAGY,OAAOX,EAAOC,GACjBF,EAAGW,gBAAe,GAClBX,EAAGgB,YAAY,EAAG,EAAGrB,EAAarH,EAAGqH,EAAatH,GAAC,EAGxC4I,EAAeA,CAAChB,EAAcC,EAAgBK,EAAQ,EAAGW,KACpEtL,EAAOM,aAAaiL,KAAK,CAACnB,EAAmBoB,EAAoBC,KAC/DrB,EAAGW,gBAAe,GAClBzB,EAAae,GAASmB,GAAa,GACnClB,EAAOJ,OAAOzJ,IAAIkK,GAClBP,EAAGY,OAAOX,GAASmB,EAAalB,GAAUmB,GAC1CnC,EAAae,GAASmB,GAAa,GACnCF,GAAYA,GAAQ,GAGtBlH,GAAU,ECpDCsH,EAAeA,KAC1B,MAAMzK,EAAoBV,EAAgBgC,GAAUA,EAAMtB,mBACpDC,EAAqBX,EAAgBgC,GAAUA,EAAMrB,oBACrDoB,EAAgB/B,EAAgBgC,GAAUA,EAAMD,eAChDD,EAAa9B,EAAgBgC,GAAUA,EAAMF,YAC7C3B,EAAQH,EAAgBgC,GAAUA,EAAM7B,OACxCC,EAAkBJ,EAAgBgC,GAAUA,EAAM5B,iBAWxD,OATA8C,EAAU,KACJ/C,IAEFyC,OAAOwI,WAAaxI,OAAOwI,YAAc,CAAA,EAEzCxI,OAAOwI,WAAWC,OAAStJ,EAC5B,EACA,IAEI,CAEL5B,QACAO,oBACAC,qBAEAP,kBAEA0K,eACApB,gBACAE,gBACAc,iBAEAW,OAAQtJ,EACRuJ,gBAAiBxJ,IChBrB,SAASyJ,EAAWC,EAAsCC,GACxD,MAAMC,ELfF,UAAwBC,SAAEA,EAAW,GAAmB,CAAE,GAG9D,MAAOC,EAAYC,GAAiBC,EAAqB,CACvD5B,MAAOzB,EAAY7F,OAAOmJ,WAAaC,SACvC7B,OAAQ1B,EAAY7F,OAAOqJ,YAAcD,WA0C3C,OAvCA9I,EAAU,KAGR,MAAMgJ,EAAWhG,SAASiG,eAAe,oBAGzC,SAASC,IACP,MAAMlC,EAAQgC,EAAWA,EAASG,YAAczJ,OAAOmJ,WACjD5B,EAAS+B,EAAWA,EAASI,aAAe1J,OAAOqJ,YAErD/B,IAAU0B,EAAW1B,OAASC,IAAWyB,EAAWzB,QAEtD0B,EAAc,CACZ3B,QACAC,UAGN,CAEA,MAAMoC,EAAkBC,EAAIb,SAASS,EAAcT,GAG7Cc,EAAiB7J,OAAO6J,gBAAkBC,EAChD,IAAIC,EAUJ,OATIT,GACFS,EAAW,IAAIF,EAAeF,GAC9BI,EAASC,QAAQV,IAEjBtJ,OAAOwF,iBAAiB,SAAUmE,GAGpCH,IAEO,KAAK,IAAAS,EACVjK,OAAO0F,oBAAoB,SAAUiE,GAC7B,OAARM,EAAAF,IAAAE,EAAUC,aACZ,EACC,CAAClB,EAAYC,IAETD,CACT,CKjCemB,IACP5M,MAAEA,GAAUgL,KACZlJ,OAAEA,EAAMY,SAAEA,GAAaC,IACvB1C,EAAkBJ,EAAgBgC,GAAUA,EAAM5B,iBAClD0B,EAAa9B,EAAgBgC,GAAUA,EAAMF,aAG7CkL,WAAEA,EAAUC,UAAEA,EAASC,WAAEA,EAAU9G,QAAEA,GAAY+G,EAAQ,KAC7D,MAAMxK,EAAS,CAAEqK,WAAY,KAAMC,UAAW,EAAGC,YAAY,GACvDE,EAAO3B,GAAW,CAAA,EAIxB,OAHAxK,OAAOoM,KAAKD,GAAMxL,IAAI,CAACd,EAAawM,UAChB7K,IAAd2K,EAAKtM,KAAoB6B,EAAO7B,GAAOsM,EAAKtM,GAClD,GACO6B,GACN,CAAC8I,KAGE1H,IAAEA,EAAKwJ,OAAQC,GAAeC,EAAU,CAAET,aAAYC,cAG5DjK,EAAgB,KACde,EAAIyH,EAAM/G,QAAO,EAChB,CAAC+G,IAGJ,MAAOkC,EAAOC,GAAY7B,EAAe8B,EAAKC,KAAK,EAAG,EAAG,IAGnDC,EAA2B7J,EAAO,CACtCuJ,YAAY,EACZlL,UAAW,EACXyL,YAAa,EACbC,UAAW,IACVvJ,QAIGwJ,EAAOhK,EAAO,CAClBgG,IAAK,EACLiE,OAAQ,EACRlE,KAAM,EACNmE,MAAO,EACPjE,MAAO,EACPC,OAAQ,IACP1F,SAGI2J,EAAcC,GAAmBvC,EAAemC,GAGjDK,EAASrK,EAAO,CACpBgG,IAAK,EACLiE,OAAQ,EACRlE,KAAM,EACNmE,MAAO,EACPjE,MAAO,EACPC,OAAQ,EACRhI,EAAG,EACHD,EAAG,EACHqM,kBAAmB,IAClB9J,QAGG+J,EAAWvK,EAAO2J,EAAKC,KAAK,EAAG,EAAG,IAAIpJ,QAG5CzB,EAAgB,KAAKyL,IAAAA,EACnB,MAAMC,EAAqB,OAAhBD,EAAGjD,EAAM/G,cAAO,EAAbgK,EAAeE,wBAC7B,IAAKD,EAAO,OACZ,MAAME,EAAWxI,EAAWA,EAAwByI,UAAYjM,OAAOmF,QACjE+G,EAAW1I,EAAWA,EAAwB2I,WAAanM,OAAOoF,QACxEiG,EAAKhE,IAAMyE,EAAMzE,IAAM2E,EACvBX,EAAKC,OAASQ,EAAMR,OAASU,EAC7BX,EAAKjE,KAAO0E,EAAM1E,KAAO8E,EACzBb,EAAKE,MAAQO,EAAMP,MAAQW,EAC3Bb,EAAK/D,MAAQwE,EAAMxE,MACnB+D,EAAK9D,OAASuE,EAAMvE,OACpBkE,EAAehN,EAAA,CAAA,EAAM4M,IACrBN,EAASC,EAAKC,MAAKI,MAAAA,OAAAA,EAAAA,EAAM/D,OAAQ9J,GAAqB,MAAJ6N,OAAI,EAAJA,EAAM9D,QAAS/J,EAAiB,IAClFD,GACE6O,QAAQC,IACN,oCACAhB,EACA,gBACA,CAAEW,WAAUE,YACZ,QACApD,EACA,cACA5J,EAAU,EAEb,CAAC0J,EAAOE,EAAM5J,EAAY1B,EAAiBD,IAE9C,MAAM+O,EAAStJ,EACb,EAAGuJ,qBAAAA,GAAuB,EAAOlN,OAAQmN,GAAmC,CAAA,KAC1E,IAAK5D,EAAM/G,SAAY0K,IAAyBrB,EAAYN,WAC1D,OAGF,MAAM6B,EAAUD,GAAkBnN,GAzHxC,SAAsBqM,EAAgBL,EAAYhM,EAAgByJ,GAChE4C,EAAOrE,IAAMgE,EAAKhE,KAAOhI,EAAOC,GAAK,GACrCoM,EAAOJ,OAASD,EAAKC,QAAUjM,EAAOC,GAAK,GAC3CoM,EAAOtE,KAAOiE,EAAKjE,MAAQ/H,EAAOE,GAAK,GACvCmM,EAAOH,MAAQF,EAAKE,OAASlM,EAAOE,GAAK,GACzCmM,EAAOpE,MAAQ+D,EAAK/D,MACpBoE,EAAOnE,OAAS8D,EAAK9D,OAErBmE,EAAOnM,EAAImM,EAAOtE,KAAoB,GAAbiE,EAAK/D,MAA2B,GAAbwB,EAAKxB,MACjDoE,EAAOpM,EAAIoM,EAAOrE,IAAoB,GAAdgE,EAAK9D,OAA6B,GAAduB,EAAKvB,OACjDmE,EAAOC,kBAAoB7C,EAAKvB,OAASmE,EAAOJ,MAClD,CAgHMoB,CAAahB,EAAQL,EAAMoB,EAAS3D,GA9G1C,SAAwB8C,EAAgBF,EAAgBlO,GACtDoO,EAASrM,EAAImM,EAAOnM,EAAI/B,EACxBoO,EAAStM,GAAK,EAAIoM,EAAOpM,EAAI9B,CAC/B,CA4GMmP,CAAef,EAAUF,EAAQlO,GAGjC,MAAMoP,EAA2C,eAA5BH,EAAQ7M,gBACvBiN,EAAWD,EAAe,QAAU,SAIpCE,EAAWhE,EAAK+D,GAAYnB,EAHhBkB,EAAe,OAAS,OAI1C1B,EAAYxL,SAAWoG,EAAUgH,EAAU,EAAGhE,EAAK+D,GAAYnB,EAAOmB,GAAW,EAAG,GACpF3B,EAAYC,WAAarF,EAAUgH,EAAU,EAAGpB,EAAOmB,GAAW,EAAG,GACrE3B,EAAYE,SAAWtF,EAAUgH,EAAU,EAAGhE,EAAK+D,GAAW,EAAG,EACnE,EACA,CAACjE,EAAOE,EAAMtL,EAAiB6B,IAsBjC,OAlBAe,EAAgB,KACd8K,EAAYN,WAAaA,EAEzB0B,EAAO,CAAEC,sBAAsB,IAC/BhP,GAAS6O,QAAQC,IAAI,yBAA0BzB,EAAY,WAAU,EACpE,CAACA,IAGJxK,EAAgB,KACdkM,EAAO,CAAEC,sBAAsB,IAC/BhP,GAAS6O,QAAQC,IAAI,qCAAoC,EACxD,CAACC,EAAQpN,IAGZoB,EAAU,KACR,GAAIgK,EAAY,OAAOrK,EAAUwM,GAAYH,EAAO,CAAEC,sBAAsB,IAAO,EAClF,CAACjC,EAAYgC,EAAQrM,IAEjB,CACLoL,KAAMG,EACNE,SACAZ,QACAc,WACAV,cACAN,aACA0B,SAEJ"}