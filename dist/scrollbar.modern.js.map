{"version":3,"file":"scrollbar.modern.js","sources":["../src/config.ts","../src/store.ts","../src/scrollbar/useScrollbar.ts","../src/hooks/useIsomorphicLayoutEffect.ts","../src/scrollbar/SmoothScrollbar.tsx","../src/hooks/useWindowSize.ts","../src/utils/math.ts","../src/hooks/useTracker.ts"],"sourcesContent":["// Global config\n\n// avoid Three types to ease tree shaking\ntype PreloadCallback = (gl: any, scene: any, camera: any) => void\n\nexport const config = {\n  // Execution order for useFrames (highest = last render)\n  PRIORITY_PRELOAD: 0,\n  PRIORITY_SCISSORS: 1,\n  PRIORITY_VIEWPORTS: 1,\n  PRIORITY_GLOBAL: 1000,\n\n  DEFAULT_SCALE_MULTIPLIER: 1,\n\n  // Global rendering props\n  preloadQueue: [] as PreloadCallback[],\n}\n","import create from 'zustand'\nimport { config } from './config'\nimport type Lenis from 'lenis'\n\nimport { ScrollCallback, ScrollData } from './scrollbar/SmoothScrollbarTypes'\n\ninterface ScrollRigStore {\n  debug: boolean\n  scaleMultiplier: number\n  globalRender: boolean\n  globalPriority: number\n  globalClearDepth: boolean\n  globalRenderQueue: false | any[]\n  clearGlobalRenderQueue: () => void\n  isCanvasAvailable: boolean\n  hasSmoothScrollbar: boolean\n  canvasChildren: Record<string, any | undefined>\n  updateCanvas: (key: string, newProps: any) => void\n  renderToCanvas: (key: string, mesh: any, props: any) => void\n  removeFromCanvas: (key: string, dispose: boolean) => void\n  pageReflow: number\n  requestReflow: () => void\n  scroll: ScrollData\n  __lenis: Lenis | undefined\n  scrollTo: (target: any) => void\n  onScroll: (cb: ScrollCallback) => () => void\n}\n\nconst useCanvasStore = create<ScrollRigStore>((set) => ({\n  // //////////////////////////////////////////////////////////////////////////\n  // GLOBAL ScrollRig STATE\n  // //////////////////////////////////////////////////////////////////////////\n  debug: false,\n  scaleMultiplier: config.DEFAULT_SCALE_MULTIPLIER,\n\n  globalRender: true,\n  globalPriority: config.PRIORITY_GLOBAL,\n  globalClearDepth: false,\n\n  globalRenderQueue: false,\n  clearGlobalRenderQueue: () => set(() => ({ globalRenderQueue: false })),\n\n  // true if WebGL initialized without errors\n  isCanvasAvailable: false,\n\n  // true if <VirtualScrollbar> is currently enabled\n  hasSmoothScrollbar: false,\n\n  // map of all components to render on the global canvas\n  canvasChildren: {},\n\n  // add component to canvas\n  renderToCanvas: (key, mesh, props = {}) =>\n    set(({ canvasChildren }) => {\n      // check if already mounted\n      if (Object.getOwnPropertyDescriptor(canvasChildren, key)) {\n        // increase usage count\n        canvasChildren[key].instances += 1\n        canvasChildren[key].props.inactive = false\n        return { canvasChildren }\n      } else {\n        // otherwise mount it\n        const obj = { ...canvasChildren, [key]: { mesh, props, instances: 1 } }\n        return { canvasChildren: obj }\n      }\n    }),\n\n  // pass new props to a canvas component\n  updateCanvas: (key, newProps) =>\n    // @ts-ignore\n    set(({ canvasChildren }) => {\n      if (!canvasChildren[key]) return\n      const {\n        [key]: { mesh, props, instances },\n      } = canvasChildren\n      const obj = {\n        ...canvasChildren,\n        [key]: { mesh, props: { ...props, ...newProps }, instances },\n      }\n      // console.log('updateCanvas', key, { ...props, ...newProps })\n      return { canvasChildren: obj }\n    }),\n\n  // remove component from canvas\n  removeFromCanvas: (key, dispose = true) =>\n    set(({ canvasChildren }) => {\n      // check if remove or reduce instances\n      if (canvasChildren[key]?.instances > 1) {\n        // reduce usage count\n        canvasChildren[key].instances -= 1\n        return { canvasChildren }\n      } else {\n        if (dispose) {\n          // unmount since no longer used\n          const { [key]: _omit, ...obj } = canvasChildren // make a separate copy of the obj and omit\n          return { canvasChildren: obj }\n        } else {\n          // or tell it that it is \"inactive\"\n          canvasChildren[key].instances = 0\n          canvasChildren[key].props.inactive = true\n          return { canvasChildren: { ...canvasChildren } }\n        }\n      }\n    }),\n\n  // Used to ask components to re-calculate their positions after a layout reflow\n  pageReflow: 0,\n  requestReflow: () => {\n    set((state) => {\n      return { pageReflow: state.pageReflow + 1 }\n    })\n  },\n\n  // keep track of scrollbar\n  scroll: {\n    y: 0,\n    x: 0,\n    limit: 0,\n    velocity: 0,\n    progress: 0,\n    direction: 0,\n    scrollDirection: undefined,\n  },\n  __lenis: undefined,\n  scrollTo: () => {},\n  onScroll: () => () => {},\n}))\n\nexport { useCanvasStore }\n","import { useCanvasStore } from '../store'\n\n/**\n * Public interface for ScrollRig\n */\nexport const useScrollbar = () => {\n  const enabled = useCanvasStore((state) => state.hasSmoothScrollbar)\n  const scroll = useCanvasStore((state) => state.scroll)\n  const scrollTo = useCanvasStore((state) => state.scrollTo)\n  const onScroll = useCanvasStore((state) => state.onScroll)\n  const __lenis = useCanvasStore((state) => state.__lenis)\n\n  return {\n    enabled,\n    scroll,\n    scrollTo,\n    onScroll,\n    __lenis,\n  }\n}\n","import { useEffect, useLayoutEffect as vanillaUseLayoutEffect } from 'react'\n\nexport const isBrowser = typeof window !== 'undefined'\n\nexport const useLayoutEffect = isBrowser ? vanillaUseLayoutEffect : useEffect\n","import { useEffect, useRef, useCallback, forwardRef, useImperativeHandle } from 'react'\nimport Lenis, { ScrollCallback, VirtualScrollCallback } from 'lenis'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { useCanvasStore } from '../store'\nimport { ISmoothScrollbar, ScrollToTarget, ScrollToConfig } from './SmoothScrollbarTypes'\n\nconst POINTER_EVENTS_ENABLE_VELOCITY = 1\nconst POINTER_EVENTS_DISABLE_VELOCITY = 1.5\n\nconst SmoothScrollbarImpl = (\n  {\n    children,\n    enabled = true,\n    locked = false,\n    scrollRestoration = 'auto',\n    disablePointerOnScroll = true,\n    horizontal = false,\n    scrollInContainer = false,\n    updateGlobalState = true,\n    onScroll,\n    config = {},\n    invalidate = () => {},\n    addEffect,\n  }: ISmoothScrollbar,\n  ref: any\n) => {\n  const lenis = useRef<Lenis>()\n  const preventPointer = useRef(false)\n  const globalScrollState = useCanvasStore((s) => s.scroll)\n\n  // Expose lenis imperative API\n  useImperativeHandle(ref, () => ({\n    start: () => lenis.current?.start(),\n    stop: () => lenis.current?.stop(),\n    on: (event: 'scroll' | 'virtual-scroll', cb: ScrollCallback | VirtualScrollCallback) =>\n      // @ts-ignore\n      lenis.current?.on(event, cb),\n    scrollTo: (target: ScrollToTarget, props: ScrollToConfig) => lenis.current?.scrollTo(target, props),\n    raf: (time: number) => lenis.current?.raf(time),\n    __lenis: lenis.current,\n  }))\n\n  // disable pointer events while scrolling to avoid slow event handlers\n  const preventPointerEvents = useCallback(\n    (prevent: boolean) => {\n      if (!disablePointerOnScroll) return\n      if (preventPointer.current !== prevent) {\n        preventPointer.current = prevent\n        document.documentElement.style.pointerEvents = prevent ? 'none' : 'auto'\n      }\n    },\n    [disablePointerOnScroll, preventPointer]\n  )\n\n  // apply chosen scroll restoration\n  useLayoutEffect(() => {\n    if ('scrollRestoration' in window.history) {\n      window.history.scrollRestoration = scrollRestoration\n    }\n  }, [])\n\n  // INIT LENIS\n  useLayoutEffect(() => {\n    // Set up scroll containers - allows scrolling without resizing window on iOS/mobile\n    const html = document.documentElement\n    const wrapper = document.body\n    const content = document.body.firstElementChild\n\n    html.classList.toggle('ScrollRig-scrollHtml', scrollInContainer)\n    wrapper.classList.toggle('ScrollRig-scrollWrapper', scrollInContainer)\n\n    if (scrollInContainer) {\n      Object.assign(config, {\n        smoothTouch: true,\n        wrapper,\n        content,\n      })\n    }\n\n    lenis.current = new Lenis({\n      orientation: horizontal ? 'horizontal' : 'vertical',\n      ...config,\n      // override and disable all smooth settings if scrollbar is disabled\n      ...(!enabled ? { smoothWheel: false, syncTouch: false, smoothTouch: false } : {}),\n    })\n\n    // let r3f drive the frameloop\n    let removeEffect: () => void\n    if (addEffect) {\n      removeEffect = addEffect((time: number) => lenis.current?.raf(time))\n    } else {\n      // manual animation frame\n      // TODO use framer motion / popmotion render loop?\n      let _raf: number\n      function raf(time: number) {\n        lenis.current?.raf(time)\n        _raf = requestAnimationFrame(raf)\n      }\n      _raf = requestAnimationFrame(raf)\n      removeEffect = () => cancelAnimationFrame(_raf)\n    }\n\n    return () => {\n      removeEffect()\n      lenis.current?.destroy()\n    }\n  }, [enabled])\n\n  // BIND TO LENIS SCROLL EVENT\n  useLayoutEffect(() => {\n    const _lenis = lenis.current\n    const _onScroll = ({ scroll, limit, velocity, direction, progress }: any) => {\n      const y = !horizontal ? scroll : 0\n      const x = horizontal ? scroll : 0\n\n      // update global scroll store\n      if (updateGlobalState) {\n        globalScrollState.y = y\n        globalScrollState.x = x\n        globalScrollState.limit = limit\n        globalScrollState.velocity = velocity\n        globalScrollState.direction = direction\n        globalScrollState.progress = progress || 0 // avoid NaN from Lenis\n      }\n\n      if (Math.abs(velocity) > POINTER_EVENTS_DISABLE_VELOCITY) {\n        preventPointerEvents(true)\n      }\n      if (Math.abs(velocity) < POINTER_EVENTS_ENABLE_VELOCITY) {\n        preventPointerEvents(false)\n      }\n\n      onScroll && onScroll({ scroll, limit, velocity, direction, progress })\n\n      invalidate() // demand a R3F frame on scroll\n    }\n\n    _lenis?.on('scroll', _onScroll)\n\n    // update global state\n    if (updateGlobalState) {\n      globalScrollState.scrollDirection = horizontal ? 'horizontal' : 'vertical'\n\n      // expose global scrollTo and onScroll function to subscribe to scroll events\n      useCanvasStore.setState({\n        __lenis: _lenis,\n        scrollTo: (...args) => {\n          _lenis?.scrollTo(...args)\n        },\n        onScroll: (cb: ScrollCallback) => {\n          _lenis?.on('scroll', cb)\n          // @ts-ignore\n          _lenis?.emit() // send current scroll to new subscriber\n          return () => _lenis?.off('scroll', cb)\n        },\n      })\n\n      // Set current scroll position on load in case reloaded further down\n      useCanvasStore.getState().scroll.y = window.scrollY\n      useCanvasStore.getState().scroll.x = window.scrollX\n    }\n\n    // fire our internal scroll callback to update globalState\n    // @ts-ignore\n    _lenis?.emit()\n    return () => {\n      _lenis?.off('scroll', _onScroll)\n      // reset global store\n      if (updateGlobalState)\n        useCanvasStore.setState({\n          __lenis: undefined,\n          onScroll: () => () => {},\n          scrollTo: () => {},\n        })\n    }\n  }, [enabled])\n\n  // Interaction events - invalidate R3F loop and enable pointer events\n  useLayoutEffect(() => {\n    const invalidateOnWheelEvent = () => invalidate()\n    const onPointerInteraction = () => preventPointerEvents(false)\n    window.addEventListener('pointermove', onPointerInteraction)\n    window.addEventListener('pointerdown', onPointerInteraction)\n    window.addEventListener('wheel', invalidateOnWheelEvent)\n    return () => {\n      window.removeEventListener('pointermove', onPointerInteraction)\n      window.removeEventListener('pointerdown', onPointerInteraction)\n      window.removeEventListener('wheel', invalidateOnWheelEvent)\n    }\n  }, [])\n\n  // Mark as enabled in global state\n  useEffect(() => {\n    if (updateGlobalState) {\n      document.documentElement.classList.toggle('js-smooth-scrollbar-enabled', enabled)\n      document.documentElement.classList.toggle('js-smooth-scrollbar-disabled', !enabled)\n      useCanvasStore.setState({ hasSmoothScrollbar: enabled })\n    }\n    return () => {\n      // cleanup\n      document.documentElement.classList.remove('js-smooth-scrollbar-enabled')\n      document.documentElement.classList.remove('js-smooth-scrollbar-disabled')\n    }\n  }, [enabled])\n\n  useEffect(() => {\n    locked ? lenis.current?.stop() : lenis.current?.start()\n  }, [locked])\n\n  {\n    /* Use function child so we can spread props\n    - for instance disable pointer events while scrolling */\n  }\n  return children ? children({}) : null\n}\n\nexport const SmoothScrollbar = forwardRef<any, ISmoothScrollbar>(SmoothScrollbarImpl)\n","import { useState, useEffect } from 'react'\nimport { ResizeObserver as Polyfill } from '@juggle/resize-observer'\nimport pkg from 'debounce'\n\nconst isBrowser = typeof window !== 'undefined'\nexport interface WindowSize {\n  width: number\n  height: number\n}\n\ntype ConfigProps = {\n  debounce?: number\n}\n\n/*\n * Triggers a resize only if the Canvas DOM element changed dimensions - not on window resize event\n *\n * This is to avoid costly re-renders when the URL bar is scrolled away on mobile\n *\n * Based on: https://usehooks.com/useWindowSize/\n */\n\nexport function useWindowSize({ debounce = 0 }: ConfigProps = {}) {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowSize>({\n    width: isBrowser ? window.innerWidth : Infinity,\n    height: isBrowser ? window.innerHeight : Infinity,\n  })\n\n  useEffect(() => {\n    // check if we can find a canvas - if so, base size on canvas instead of window\n    // since 100vh !== window.innerHeight on mobile\n    const canvasEl = document.getElementById('ScrollRig-canvas')\n\n    // Handler to call on window resize\n    function handleResize() {\n      const width = canvasEl ? canvasEl.clientWidth : window.innerWidth\n      const height = canvasEl ? canvasEl.clientHeight : window.innerHeight\n\n      if (width !== windowSize.width || height !== windowSize.height) {\n        // Set window width/height to state\n        setWindowSize({\n          width,\n          height,\n        })\n      }\n    }\n\n    const debouncedResize = pkg.debounce(handleResize, debounce)\n\n    // Add event listener\n    const ResizeObserver = window.ResizeObserver || Polyfill\n    let observer: ResizeObserver\n    if (canvasEl) {\n      observer = new ResizeObserver(debouncedResize)\n      observer.observe(canvasEl)\n    } else {\n      window.addEventListener('resize', debouncedResize)\n    }\n    // Call handler right away so state gets updated with initial window size\n    handleResize()\n    // Remove event listener on cleanup\n    return () => {\n      window.removeEventListener('resize', debouncedResize)\n      observer?.disconnect()\n    }\n  }, [windowSize, setWindowSize])\n\n  return windowSize\n}\n","// Linear mapping from range <a1, a2> to range <b1, b2>\nexport function mapLinear(x: number, a1: number, a2: number, b1: number, b2: number) {\n  return b1 + ((x - a1) * (b2 - b1)) / (a2 - a1)\n}\n","// https://www.typescriptlang.org/docs/handbook/modules.html#ambient-modules\n/// <reference path=\"../types/global.ts\" />\n\nimport { useRef, useCallback, useEffect, useMemo, useState, MutableRefObject } from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { useWindowSize } from './useWindowSize'\nimport vecn from 'vecn'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { mapLinear } from '../utils/math'\nimport { useCanvasStore } from '../store'\nimport { useScrollbar } from '../scrollbar/useScrollbar'\nimport type { ScrollData } from '../scrollbar/SmoothScrollbarTypes'\n\nimport type { Rect, Bounds, TrackerOptions, Tracker, ScrollState, UpdateCallback } from './useTrackerTypes'\n\nfunction updateBounds(bounds: Bounds, rect: Rect, scroll: ScrollData, size: any) {\n  bounds.top = rect.top - (scroll.y || 0)\n  bounds.bottom = rect.bottom - (scroll.y || 0)\n  bounds.left = rect.left - (scroll.x || 0)\n  bounds.right = rect.right - (scroll.x || 0)\n  bounds.width = rect.width\n  bounds.height = rect.height\n  // move coordinate system so 0,0 is at center of screen\n  bounds.x = bounds.left + rect.width * 0.5 - size.width * 0.5\n  bounds.y = bounds.top + rect.height * 0.5 - size.height * 0.5\n  bounds.positiveYUpBottom = size.height - bounds.bottom // inverse Y\n}\n\nfunction updatePosition(position: vec3, bounds: Bounds, scaleMultiplier: number) {\n  position.x = bounds.x * scaleMultiplier\n  position.y = -1 * bounds.y * scaleMultiplier\n}\n\n/**\n * Returns the current Scene position of the DOM element\n * based on initial getBoundingClientRect and scroll delta from start\n */\nfunction useTracker(track: MutableRefObject<HTMLElement>, options?: TrackerOptions): Tracker {\n  const size = useWindowSize()\n  const { scroll, onScroll } = useScrollbar()\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n  const debug = useCanvasStore((state) => state.debug)\n\n  // extend defaults with optional options\n  const { rootMargin, threshold, autoUpdate, wrapper } = useMemo(() => {\n    const target = { rootMargin: '0%', threshold: 0, autoUpdate: true } as TrackerOptions\n    const opts = options || {}\n    Object.keys(opts).map((key: string, index) => {\n      if (opts[key] !== undefined) target[key] = opts[key]\n    })\n    return target\n  }, [options])\n\n  // check if element is in viewport\n  const { ref, inView: inViewport } = useInView({ rootMargin, threshold })\n\n  // bind useInView ref to current tracking element\n  useLayoutEffect(() => {\n    ref(track.current)\n  }, [track, track?.current])\n\n  // Using state so it's reactive\n  const [scale, setScale] = useState<vec3>(vecn.vec3(0, 0, 0))\n\n  // Using ref because\n  const scrollState: ScrollState = useRef({\n    inViewport: false,\n    progress: -1,\n    visibility: -1,\n    viewport: -1,\n  }).current\n\n  // DOM rect (initial position in pixels offset by scroll value on page load)\n  // Using ref so we can calculate bounds & position without a re-render\n  const rect = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n  }).current\n\n  // expose internal ref as a reactive state as well\n  const [reactiveRect, setReactiveRect] = useState<Rect>(rect)\n\n  // bounding rect in pixels - updated by scroll\n  const bounds = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n    positiveYUpBottom: 0,\n  }).current\n\n  // position in viewport units - updated by scroll\n  const position = useRef(vecn.vec3(0, 0, 0)).current\n\n  // Calculate bounding Rect as soon as it's available\n  useLayoutEffect(() => {\n    const _rect = track.current?.getBoundingClientRect()\n    if (!_rect) return\n    const initialY = wrapper ? (wrapper as HTMLElement).scrollTop : window.scrollY\n    const initialX = wrapper ? (wrapper as HTMLElement).scrollLeft : window.scrollX\n    rect.top = _rect.top + initialY\n    rect.bottom = _rect.bottom + initialY\n    rect.left = _rect.left + initialX\n    rect.right = _rect.right + initialX\n    rect.width = _rect.width\n    rect.height = _rect.height\n    setReactiveRect({ ...rect })\n    setScale(vecn.vec3(rect?.width * scaleMultiplier, rect?.height * scaleMultiplier, 1))\n    debug &&\n      console.log(\n        'useTracker.getBoundingClientRect:',\n        rect,\n        'intialScroll:',\n        { initialY, initialX },\n        'size:',\n        size,\n        'pageReflow:',\n        pageReflow\n      )\n  }, [track, size, pageReflow, scaleMultiplier, debug])\n\n  const update = useCallback(\n    ({ onlyUpdateInViewport = false, scroll: overrideScroll }: UpdateCallback = {}) => {\n      if (!track.current || (onlyUpdateInViewport && !scrollState.inViewport)) {\n        return\n      }\n\n      const _scroll = overrideScroll || scroll\n\n      updateBounds(bounds, rect, _scroll, size)\n      updatePosition(position, bounds, scaleMultiplier)\n\n      // scrollState setup based on scroll direction\n      const isHorizontal = _scroll.scrollDirection === 'horizontal'\n      const sizeProp = isHorizontal ? 'width' : 'height'\n      const startProp = isHorizontal ? 'left' : 'top'\n\n      // calculate progress of passing through viewport (0 = just entered, 1 = just exited)\n      const pxInside = size[sizeProp] - bounds[startProp]\n      scrollState.progress = mapLinear(pxInside, 0, size[sizeProp] + bounds[sizeProp], 0, 1) // percent of total visible distance\n      scrollState.visibility = mapLinear(pxInside, 0, bounds[sizeProp], 0, 1) // percent of item height in view\n      scrollState.viewport = mapLinear(pxInside, 0, size[sizeProp], 0, 1) // percent of window height scrolled since visible\n    },\n    [track, size, scaleMultiplier, scroll]\n  )\n\n  // update scrollState in viewport\n  useLayoutEffect(() => {\n    scrollState.inViewport = inViewport\n    // update once more in case it went out of view\n    update({ onlyUpdateInViewport: false })\n    debug && console.log('useTracker.inViewport:', inViewport, 'update()')\n  }, [inViewport])\n\n  // re-run if the callback updated\n  useLayoutEffect(() => {\n    update({ onlyUpdateInViewport: false })\n    debug && console.log('useTracker.update on resize/reflow')\n  }, [update, pageReflow])\n\n  // auto-update on scroll\n  useEffect(() => {\n    if (autoUpdate) return onScroll((_scroll) => update({ onlyUpdateInViewport: true }))\n  }, [autoUpdate, update, onScroll])\n\n  return {\n    // Reactive props\n    scale, // reactive scene scale - includes z-axis so it can be spread onto mesh directly\n    inViewport, // reactive prop for when inside viewport\n    // Non-reactive props (only updates on window resize)\n    // Child values are updated on scroll\n    rect: reactiveRect, // Dom rect\n    bounds, // scrolled bounding rect in pixels\n    position, // scrolled element position in viewport units\n    scrollState, // scroll progress stats - not reactive\n    // Utilities\n    update, // optional - manually update tracker\n  }\n}\n\nexport { useTracker }\n"],"names":["useCanvasStore","create","set","debug","scaleMultiplier","globalRender","globalPriority","globalClearDepth","globalRenderQueue","clearGlobalRenderQueue","isCanvasAvailable","hasSmoothScrollbar","canvasChildren","renderToCanvas","key","mesh","props","Object","getOwnPropertyDescriptor","instances","inactive","_extends","updateCanvas","newProps","removeFromCanvas","dispose","_canvasChildren$key","_objectWithoutPropertiesLoose","map","_toPropertyKey","pageReflow","requestReflow","state","scroll","y","x","limit","velocity","progress","direction","scrollDirection","undefined","__lenis","scrollTo","onScroll","useScrollbar","enabled","useLayoutEffect","window","vanillaUseLayoutEffect","useEffect","SmoothScrollbar","forwardRef","SmoothScrollbarImpl","children","locked","scrollRestoration","disablePointerOnScroll","horizontal","scrollInContainer","updateGlobalState","config","invalidate","addEffect","ref","lenis","useRef","preventPointer","globalScrollState","s","useImperativeHandle","start","_lenis$current","current","stop","_lenis$current2","on","event","cb","_lenis$current3","target","_lenis$current4","raf","time","_lenis$current5","preventPointerEvents","useCallback","prevent","document","documentElement","style","pointerEvents","history","html","wrapper","body","content","firstElementChild","removeEffect","classList","toggle","assign","smoothTouch","Lenis","orientation","smoothWheel","syncTouch","_lenis$current6","_raf","requestAnimationFrame","_lenis$current7","cancelAnimationFrame","_lenis$current8","destroy","_lenis","_onScroll","Math","abs","setState","args","emit","off","getState","scrollY","scrollX","invalidateOnWheelEvent","onPointerInteraction","addEventListener","removeEventListener","remove","_lenis$current9","_lenis$current10","isBrowser","mapLinear","a1","a2","b1","b2","useTracker","track","options","size","debounce","windowSize","setWindowSize","useState","width","innerWidth","Infinity","height","innerHeight","canvasEl","getElementById","handleResize","clientWidth","clientHeight","debouncedResize","pkg","ResizeObserver","Polyfill","observer","observe","_observer","disconnect","useWindowSize","rootMargin","threshold","autoUpdate","useMemo","opts","keys","index","inView","inViewport","useInView","scale","setScale","vecn","vec3","scrollState","visibility","viewport","rect","top","bottom","left","right","reactiveRect","setReactiveRect","bounds","positiveYUpBottom","position","_track$current","_rect","getBoundingClientRect","initialY","scrollTop","initialX","scrollLeft","console","log","update","onlyUpdateInViewport","overrideScroll","_scroll","updateBounds","updatePosition","isHorizontal","sizeProp","pxInside"],"mappings":"i3BAKa,MCuBPA,EAAiBC,EAAwBC,IAAS,CAItDC,OAAO,EACPC,gBDrB0B,ECuB1BC,cAAc,EACdC,eD1BiB,IC2BjBC,kBAAkB,EAElBC,mBAAmB,EACnBC,uBAAwBA,IAAMP,EAAI,KAAA,CAASM,mBAAmB,KAG9DE,mBAAmB,EAGnBC,oBAAoB,EAGpBC,eAAgB,CAAE,EAGlBC,eAAgBA,CAACC,EAAKC,EAAMC,EAAQ,CAAE,IACpCd,EAAI,EAAGU,oBAEDK,OAAOC,yBAAyBN,EAAgBE,IAElDF,EAAeE,GAAKK,WAAa,EACjCP,EAAeE,GAAKE,MAAMI,UAAW,EAC9B,CAAER,mBAIF,CAAEA,eADAS,EAAA,CAAA,EAAQT,EAAc,CAAEE,CAACA,GAAM,CAAEC,OAAMC,QAAOG,UAAW,OAMxEG,aAAcA,CAACR,EAAKS,IAElBrB,EAAI,EAAGU,qBACL,IAAKA,EAAeE,GAAM,OAC1B,MACEA,CAACA,IAAMC,KAAEA,EAAIC,MAAEA,EAAKG,UAAEA,IACpBP,EAMJ,MAAO,CAAEA,eALAS,EAAA,CAAA,EACJT,EACH,CAAAE,CAACA,GAAM,CAAEC,OAAMC,MAAKK,EAAOL,CAAAA,EAAAA,EAAUO,GAAYJ,kBAOvDK,iBAAkBA,CAACV,EAAKW,GAAU,IAChCvB,EAAI,EAAGU,qBAAoBc,IAAAA,EAEzB,OAAuB,OAAnBA,EAAAd,EAAeE,SAAI,EAAnBY,EAAqBP,WAAY,GAEnCP,EAAeE,GAAKK,WAAa,EAC1B,CAAEP,mBAELa,EAGK,CAAEb,iJADmBe,CAAKf,EAAxBE,CAAAA,GAAGc,IAAAC,MAIZjB,EAAeE,GAAKK,UAAY,EAChCP,EAAeE,GAAKE,MAAMI,UAAW,EAC9B,CAAER,eAAcS,EAAOT,CAAAA,EAAAA,IAEjC,GAILkB,WAAY,EACZC,cAAeA,KACb7B,EAAK8B,IACI,CAAEF,WAAYE,EAAMF,WAAa,IACzC,EAIHG,OAAQ,CACNC,EAAG,EACHC,EAAG,EACHC,MAAO,EACPC,SAAU,EACVC,SAAU,EACVC,UAAW,EACXC,qBAAiBC,GAEnBC,aAASD,EACTE,SAAUA,OACVC,SAAUA,IAAM,UCxHLC,EAAeA,KAOnB,CACLC,QAPc9C,EAAgBgC,GAAUA,EAAMrB,oBAQ9CsB,OAPajC,EAAgBgC,GAAUA,EAAMC,QAQ7CU,SAPe3C,EAAgBgC,GAAUA,EAAMW,UAQ/CC,SAPe5C,EAAgBgC,GAAUA,EAAMY,UAQ/CF,QAPc1C,EAAgBgC,GAAUA,EAAMU,WCNrCK,EAF8B,oBAAXC,OAEWC,EAAyBC,ECqNvDC,EAAkBC,EA/MHC,EAExBC,WACAR,QAAAA,GAAU,EACVS,OAAAA,GAAS,EACTC,kBAAAA,EAAoB,OACpBC,uBAAAA,GAAyB,EACzBC,WAAAA,GAAa,EACbC,kBAAAA,GAAoB,EACpBC,kBAAAA,GAAoB,EACpBhB,WACAiB,OAAAA,EAAS,CAAA,EACTC,WAAAA,EAAaA,SACbC,aAEFC,KAEA,MAAMC,EAAQC,IACRC,EAAiBD,GAAO,GACxBE,EAAoBpE,EAAgBqE,GAAMA,EAAEpC,QAGlDqC,EAAoBN,EAAK,KAAA,CACvBO,MAAOA,KAAA,IAAAC,EAAA,OAAmB,OAAnBA,EAAMP,EAAMQ,cAAO,EAAbD,EAAeD,OAAK,EACjCG,KAAMA,KAAA,IAAAC,EAAA,OAAmB,OAAnBA,EAAMV,EAAMQ,cAAO,EAAbE,EAAeD,MAAI,EAC/BE,GAAIA,CAACC,EAAoCC,KAA0CC,IAAAA,EAAAA,OAEpE,OAFoEA,EAEjFd,EAAMQ,cAAO,EAAbM,EAAeH,GAAGC,EAAOC,EAAE,EAC7BnC,SAAUA,CAACqC,EAAwBhE,KAAqBiE,IAAAA,EAAAA,OAAkB,OAAlBA,EAAKhB,EAAMQ,cAAO,EAAbQ,EAAetC,SAASqC,EAAQhE,EAAK,EAClGkE,IAAMC,IAAY,IAAAC,EAAA,OAAKA,OAALA,EAAKnB,EAAMQ,cAANW,EAAAA,EAAeF,IAAIC,EAAI,EAC9CzC,QAASuB,EAAMQ,WAIjB,MAAMY,EAAuBC,EAC1BC,IACM9B,GACDU,EAAeM,UAAYc,IAC7BpB,EAAeM,QAAUc,EACzBC,SAASC,gBAAgBC,MAAMC,cAAgBJ,EAAU,OAAS,OACnE,EAEH,CAAC9B,EAAwBU,IAkK3B,OA9JApB,EAAgB,KACV,sBAAuBC,OAAO4C,UAChC5C,OAAO4C,QAAQpC,kBAAoBA,EACpC,EACA,IAGHT,EAAgB,KAEd,MAAM8C,EAAOL,SAASC,gBAChBK,EAAUN,SAASO,KACnBC,EAAUR,SAASO,KAAKE,kBAqB9B,IAAIC,EACJ,GApBAL,EAAKM,UAAUC,OAAO,uBAAwBzC,GAC9CmC,EAAQK,UAAUC,OAAO,0BAA2BzC,GAEhDA,GACF1C,OAAOoF,OAAOxC,EAAQ,CACpByC,aAAa,EACbR,UACAE,YAIJ/B,EAAMQ,QAAU,IAAI8B,EAAKlF,EAAA,CACvBmF,YAAa9C,EAAa,aAAe,YACtCG,EAEEf,EAAyE,CAAA,EAA/D,CAAE2D,aAAa,EAAOC,WAAW,EAAOJ,aAAa,KAKlEvC,EACFmC,EAAenC,EAAWoB,IAAY,IAAAwB,EAAA,OAAKA,OAALA,EAAK1C,EAAMQ,cAANkC,EAAAA,EAAezB,IAAIC,EAAI,OAC7D,CAGL,IAAIyB,EAKJA,EAAOC,sBAJP,SAAS3B,EAAIC,GAAY2B,IAAAA,EACvBA,OAAAA,EAAA7C,EAAMQ,UAANqC,EAAe5B,IAAIC,GACnByB,EAAOC,sBAAsB3B,EAC/B,GAEAgB,EAAeA,IAAMa,qBAAqBH,EAC3C,CAED,MAAO,KAAKI,IAAAA,EACVd,IACa,OAAbc,EAAA/C,EAAMQ,UAANuC,EAAeC,SAAO,CACxB,EACC,CAACnE,IAGJC,EAAgB,KACd,MAAMmE,EAASjD,EAAMQ,QACf0C,EAAYA,EAAGlF,SAAQG,QAAOC,WAAUE,YAAWD,eACvD,MACMH,EAAIuB,EAAazB,EAAS,EAG5B2B,IACFQ,EAAkBlC,EALTwB,EAAsB,EAATzB,EAMtBmC,EAAkBjC,EAAIA,EACtBiC,EAAkBhC,MAAQA,EAC1BgC,EAAkB/B,SAAWA,EAC7B+B,EAAkB7B,UAAYA,EAC9B6B,EAAkB9B,SAAWA,GAAY,GAGvC8E,KAAKC,IAAIhF,GAtHqB,KAuHhCgD,GAAqB,GAEnB+B,KAAKC,IAAIhF,GA1HoB,GA2H/BgD,GAAqB,GAGvBzC,GAAYA,EAAS,CAAEX,SAAQG,QAAOC,WAAUE,YAAWD,aAE3DwB,GAAU,EA+BZ,OA5BM,MAANoD,GAAAA,EAAQtC,GAAG,SAAUuC,GAGjBvD,IACFQ,EAAkB5B,gBAAkBkB,EAAa,aAAe,WAGhE1D,EAAesH,SAAS,CACtB5E,QAASwE,EACTvE,SAAUA,IAAI4E,WACZL,GAAAA,EAAQvE,YAAY4E,EACtB,EACA3E,SAAWkC,IACToC,MAAAA,GAAAA,EAAQtC,GAAG,SAAUE,GAErBoC,MAAAA,GAAAA,EAAQM,OACD,IAAMN,MAAAA,OAAAA,EAAAA,EAAQO,IAAI,SAAU3C,MAKvC9E,EAAe0H,WAAWzF,OAAOC,EAAIc,OAAO2E,QAC5C3H,EAAe0H,WAAWzF,OAAOE,EAAIa,OAAO4E,SAKxC,MAANV,GAAAA,EAAQM,OACD,KACLN,MAAAA,GAAAA,EAAQO,IAAI,SAAUN,GAElBvD,GACF5D,EAAesH,SAAS,CACtB5E,aAASD,EACTG,SAAUA,IAAM,OAChBD,SAAUA,QACX,CACL,EACC,CAACG,IAGJC,EAAgB,KACd,MAAM8E,EAAyBA,IAAM/D,IAC/BgE,EAAuBA,IAAMzC,GAAqB,GAIxD,OAHArC,OAAO+E,iBAAiB,cAAeD,GACvC9E,OAAO+E,iBAAiB,cAAeD,GACvC9E,OAAO+E,iBAAiB,QAASF,GAC1B,KACL7E,OAAOgF,oBAAoB,cAAeF,GAC1C9E,OAAOgF,oBAAoB,cAAeF,GAC1C9E,OAAOgF,oBAAoB,QAASH,GACtC,EACC,IAGH3E,EAAU,KACJU,IACF4B,SAASC,gBAAgBU,UAAUC,OAAO,8BAA+BtD,GACzE0C,SAASC,gBAAgBU,UAAUC,OAAO,gCAAiCtD,GAC3E9C,EAAesH,SAAS,CAAE3G,mBAAoBmC,KAEzC,KAEL0C,SAASC,gBAAgBU,UAAU8B,OAAO,+BAC1CzC,SAASC,gBAAgBU,UAAU8B,OAAO,+BAC5C,GACC,CAACnF,IAEJI,EAAU,KAAKgF,IAAAA,EAAAC,EACb5E,EAAsB,OAAhB2E,EAAGjE,EAAMQ,UAANyD,EAAexD,OAASyD,OAAHA,EAAGlE,EAAMQ,UAAN0D,EAAe5D,OAClD,EAAG,CAAChB,IAMGD,EAAWA,EAAS,IAAM,OClN7B8E,EAA8B,oBAAXpF,OCHT,SAAAqF,EAAUlG,EAAWmG,EAAYC,EAAYC,EAAYC,GACvE,OAAOD,GAAOrG,EAAImG,IAAOG,EAAKD,IAAQD,EAAKD,EAC7C,CCmCA,SAASI,EAAWC,EAAsCC,GACxD,MAAMC,EFjBF,UAAwBC,SAAEA,EAAW,GAAmB,CAAE,GAG9D,MAAOC,EAAYC,GAAiBC,EAAqB,CACvDC,MAAOd,EAAYpF,OAAOmG,WAAaC,SACvCC,OAAQjB,EAAYpF,OAAOsG,YAAcF,WA0C3C,OAvCAlG,EAAU,KAGR,MAAMqG,EAAW/D,SAASgE,eAAe,oBAGzC,SAASC,IACP,MAAMP,EAAQK,EAAWA,EAASG,YAAc1G,OAAOmG,WACjDE,EAASE,EAAWA,EAASI,aAAe3G,OAAOsG,YAErDJ,IAAUH,EAAWG,OAASG,IAAWN,EAAWM,QAEtDL,EAAc,CACZE,QACAG,UAGN,CAEA,MAAMO,EAAkBC,EAAIf,SAASW,EAAcX,GAG7CgB,EAAiB9G,OAAO8G,gBAAkBC,EAChD,IAAIC,EAUJ,OATIT,GACFS,EAAW,IAAIF,EAAeF,GAC9BI,EAASC,QAAQV,IAEjBvG,OAAO+E,iBAAiB,SAAU6B,GAGpCH,IAEO,KAAK,IAAAS,EACVlH,OAAOgF,oBAAoB,SAAU4B,GAC7B,OAARM,EAAAF,IAAAE,EAAUC,aACZ,EACC,CAACpB,EAAYC,IAETD,CACT,CE/BeqB,IACPnI,OAAEA,EAAMW,SAAEA,GAAaC,IACvBzC,EAAkBJ,EAAgBgC,GAAUA,EAAM5B,iBAClD0B,EAAa9B,EAAgBgC,GAAUA,EAAMF,YAC7C3B,EAAQH,EAAgBgC,GAAUA,EAAM7B,QAGxCkK,WAAEA,EAAUC,UAAEA,EAASC,WAAEA,EAAUzE,QAAEA,GAAY0E,EAAQ,KAC7D,MAAMxF,EAAS,CAAEqF,WAAY,KAAMC,UAAW,EAAGC,YAAY,GACvDE,EAAO7B,GAAW,CAAA,EAIxB,OAHA3H,OAAOyJ,KAAKD,GAAM7I,IAAI,CAACd,EAAa6J,UAChBlI,IAAdgI,EAAK3J,KAAoBkE,EAAOlE,GAAO2J,EAAK3J,GAClD,GACOkE,GACN,CAAC4D,KAGE5E,IAAEA,EAAK4G,OAAQC,GAAeC,EAAU,CAAET,aAAYC,cAG5DvH,EAAgB,KACdiB,EAAI2E,EAAMlE,QACZ,EAAG,CAACkE,EAAOA,MAAAA,OAAAA,EAAAA,EAAOlE,UAGlB,MAAOsG,EAAOC,GAAY/B,EAAegC,EAAKC,KAAK,EAAG,EAAG,IAGnDC,EAA2BjH,EAAO,CACtC2G,YAAY,EACZvI,UAAW,EACX8I,YAAa,EACbC,UAAW,IACV5G,QAIG6G,EAAOpH,EAAO,CAClBqH,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPxC,MAAO,EACPG,OAAQ,IACP5E,SAGIkH,EAAcC,GAAmB3C,EAAeqC,GAGjDO,EAAS3H,EAAO,CACpBqH,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPxC,MAAO,EACPG,OAAQ,EACRlH,EAAG,EACHD,EAAG,EACH4J,kBAAmB,IAClBrH,QAGGsH,EAAW7H,EAAO+G,EAAKC,KAAK,EAAG,EAAG,IAAIzG,QAG5C1B,EAAgB,KAAK,IAAAiJ,EACnB,MAAMC,EAAQD,OAAHA,EAAGrD,EAAMlE,cAANuH,EAAAA,EAAeE,wBAC7B,IAAKD,EAAO,OACZ,MAAME,EAAWrG,EAAWA,EAAwBsG,UAAYpJ,OAAO2E,QACjE0E,EAAWvG,EAAWA,EAAwBwG,WAAatJ,OAAO4E,QACxE0D,EAAKC,IAAMU,EAAMV,IAAMY,EACvBb,EAAKE,OAASS,EAAMT,OAASW,EAC7Bb,EAAKG,KAAOQ,EAAMR,KAAOY,EACzBf,EAAKI,MAAQO,EAAMP,MAAQW,EAC3Bf,EAAKpC,MAAQ+C,EAAM/C,MACnBoC,EAAKjC,OAAS4C,EAAM5C,OACpBuC,EAAevK,EAAA,CAAA,EAAMiK,IACrBN,EAASC,EAAKC,MAAKI,MAAAA,OAAAA,EAAAA,EAAMpC,OAAQ9I,GAAqB,MAAJkL,OAAI,EAAJA,EAAMjC,QAASjJ,EAAiB,IAClFD,GACEoM,QAAQC,IACN,oCACAlB,EACA,gBACA,CAAEa,WAAUE,YACZ,QACAxD,EACA,cACA/G,EAEN,EAAG,CAAC6G,EAAOE,EAAM/G,EAAY1B,EAAiBD,IAE9C,MAAMsM,EAASnH,EACb,EAAGoH,qBAAAA,GAAuB,EAAOzK,OAAQ0K,GAAmC,CAAE,KAC5E,IAAKhE,EAAMlE,SAAYiI,IAAyBvB,EAAYN,WAC1D,OAGF,MAAM+B,EAAUD,GAAkB1K,GAzHxC,SAAsB4J,EAAgBP,EAAYrJ,EAAoB4G,GACpEgD,EAAON,IAAMD,EAAKC,KAAOtJ,EAAOC,GAAK,GACrC2J,EAAOL,OAASF,EAAKE,QAAUvJ,EAAOC,GAAK,GAC3C2J,EAAOJ,KAAOH,EAAKG,MAAQxJ,EAAOE,GAAK,GACvC0J,EAAOH,MAAQJ,EAAKI,OAASzJ,EAAOE,GAAK,GACzC0J,EAAO3C,MAAQoC,EAAKpC,MACpB2C,EAAOxC,OAASiC,EAAKjC,OAErBwC,EAAO1J,EAAI0J,EAAOJ,KAAoB,GAAbH,EAAKpC,MAA2B,GAAbL,EAAKK,MACjD2C,EAAO3J,EAAI2J,EAAON,IAAoB,GAAdD,EAAKjC,OAA6B,GAAdR,EAAKQ,OACjDwC,EAAOC,kBAAoBjD,EAAKQ,OAASwC,EAAOL,MAClD,CAgHMqB,CAAahB,EAAQP,EAAMsB,EAAS/D,GA9G1C,SAAwBkD,EAAgBF,EAAgBzL,GACtD2L,EAAS5J,EAAI0J,EAAO1J,EAAI/B,EACxB2L,EAAS7J,GAAK,EAAI2J,EAAO3J,EAAI9B,CAC/B,CA4GM0M,CAAef,EAAUF,EAAQzL,GAGjC,MAAM2M,EAA2C,eAA5BH,EAAQpK,gBACvBwK,EAAWD,EAAe,QAAU,SAIpCE,EAAWpE,EAAKmE,GAAYnB,EAHhBkB,EAAe,OAAS,OAI1C5B,EAAY7I,SAAW+F,EAAU4E,EAAU,EAAGpE,EAAKmE,GAAYnB,EAAOmB,GAAW,EAAG,GACpF7B,EAAYC,WAAa/C,EAAU4E,EAAU,EAAGpB,EAAOmB,GAAW,EAAG,GACrE7B,EAAYE,SAAWhD,EAAU4E,EAAU,EAAGpE,EAAKmE,GAAW,EAAG,EACnE,EACA,CAACrE,EAAOE,EAAMzI,EAAiB6B,IAsBjC,OAlBAc,EAAgB,KACdoI,EAAYN,WAAaA,EAEzB4B,EAAO,CAAEC,sBAAsB,IAC/BvM,GAASoM,QAAQC,IAAI,yBAA0B3B,EAAY,WAC7D,EAAG,CAACA,IAGJ9H,EAAgB,KACd0J,EAAO,CAAEC,sBAAsB,IAC/BvM,GAASoM,QAAQC,IAAI,qCACvB,EAAG,CAACC,EAAQ3K,IAGZoB,EAAU,KACR,GAAIqH,EAAY,OAAO3H,EAAUgK,GAAYH,EAAO,CAAEC,sBAAsB,IAAO,EAClF,CAACnC,EAAYkC,EAAQ7J,IAEjB,CAELmI,QACAF,aAGAS,KAAMK,EACNE,SACAE,WACAZ,cAEAsB,SAEJ"}