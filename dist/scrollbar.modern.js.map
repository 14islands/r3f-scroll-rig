{"version":3,"file":"scrollbar.modern.js","sources":["../src/config.ts","../src/store.ts","../src/scrollbar/useScrollbar.ts","../src/hooks/useIsomorphicLayoutEffect.ts","../src/scrollbar/LenisScrollbar.tsx","../src/scrollbar/SmoothScrollbar.tsx","../src/hooks/useWindowSize.ts","../src/utils/math.ts","../src/hooks/useTracker.ts"],"sourcesContent":["// Global config\n\nimport { WebGLRenderer } from 'three'\n\ntype PreloadCallback = (gl: WebGLRenderer) => void\n\nexport const config = {\n  // Execution order for useFrames (highest = last render)\n  PRIORITY_PRELOAD: 0,\n  PRIORITY_SCISSORS: 1,\n  PRIORITY_VIEWPORTS: 1,\n  PRIORITY_GLOBAL: 1000,\n\n  DEFAULT_SCALE_MULTIPLIER: 1,\n\n  // Global rendering props\n  preloadQueue: [] as PreloadCallback[],\n}\n","import create from 'zustand'\nimport { config } from './config'\n\nimport { LenisScrollCallback } from './scrollbar/LenisScrollbar'\n\ninterface ScrollRigStore {\n  debug: boolean\n  scaleMultiplier: number\n  globalRender: boolean\n  globalPriority: number\n  globalAutoClear: boolean\n  globalClearDepth: boolean\n  globalRenderQueue: false | any[]\n  clearGlobalRenderQueue: () => void\n  isCanvasAvailable: boolean\n  hasSmoothScrollbar: boolean\n  canvasChildren: Record<string, any | undefined>\n  updateCanvas: (key: string, newProps: any) => void\n  renderToCanvas: (key: string, mesh: any, props: any) => void\n  removeFromCanvas: (key: string, dispose: boolean) => void\n  pageReflow: number\n  requestReflow: () => void\n  scroll: {\n    y: number\n    x: number\n    limit: number\n    velocity: number\n    progress: number\n    direction: number\n    scrollDirection?: 'vertical' | 'horizontal'\n  }\n  scrollTo: (target: any) => void\n  onScroll: (cb: LenisScrollCallback) => () => void\n}\n\nconst useCanvasStore = create<ScrollRigStore>((set) => ({\n  // //////////////////////////////////////////////////////////////////////////\n  // GLOBAL ScrollRig STATE\n  // //////////////////////////////////////////////////////////////////////////\n  debug: false,\n  scaleMultiplier: config.DEFAULT_SCALE_MULTIPLIER,\n\n  globalRender: true,\n  globalPriority: config.PRIORITY_GLOBAL,\n  globalAutoClear: false,\n  globalClearDepth: true,\n\n  globalRenderQueue: false,\n  clearGlobalRenderQueue: () => set(() => ({ globalRenderQueue: false })),\n\n  // true if WebGL initialized without errors\n  isCanvasAvailable: true,\n\n  // true if <VirtualScrollbar> is currently enabled\n  hasSmoothScrollbar: false,\n\n  // map of all components to render on the global canvas\n  canvasChildren: {},\n\n  // add component to canvas\n  renderToCanvas: (key, mesh, props = {}) =>\n    set(({ canvasChildren }) => {\n      // check if already mounted\n      if (Object.getOwnPropertyDescriptor(canvasChildren, key)) {\n        // increase usage count\n        canvasChildren[key].instances += 1\n        canvasChildren[key].props.inactive = false\n        return { canvasChildren }\n      } else {\n        // otherwise mount it\n        const obj = { ...canvasChildren, [key]: { mesh, props, instances: 1 } }\n        return { canvasChildren: obj }\n      }\n    }),\n\n  // pass new props to a canvas component\n  updateCanvas: (key, newProps) =>\n    // @ts-ignore\n    set(({ canvasChildren }) => {\n      if (!canvasChildren[key]) return\n      const {\n        [key]: { mesh, props, instances },\n      } = canvasChildren\n      const obj = {\n        ...canvasChildren,\n        [key]: { mesh, props: { ...props, ...newProps }, instances },\n      }\n      // console.log('updateCanvas', key, { ...props, ...newProps })\n      return { canvasChildren: obj }\n    }),\n\n  // remove component from canvas\n  removeFromCanvas: (key, dispose = true) =>\n    set(({ canvasChildren }) => {\n      // check if remove or reduce instances\n      if (canvasChildren[key]?.instances > 1) {\n        // reduce usage count\n        canvasChildren[key].instances -= 1\n        return { canvasChildren }\n      } else {\n        if (dispose) {\n          // unmount since no longer used\n          const { [key]: _omit, ...obj } = canvasChildren // make a separate copy of the obj and omit\n          return { canvasChildren: obj }\n        } else {\n          // or tell it that it is \"inactive\"\n          canvasChildren[key].instances = 0\n          canvasChildren[key].props.inactive = true\n          return { canvasChildren: { ...canvasChildren } }\n        }\n      }\n    }),\n\n  // Used to ask components to re-calculate their positions after a layout reflow\n  pageReflow: 0,\n  requestReflow: () => {\n    set((state) => {\n      return { pageReflow: state.pageReflow + 1 }\n    })\n  },\n\n  // keep track of scrollbar\n  scroll: {\n    y: 0,\n    x: 0,\n    limit: 0,\n    velocity: 0,\n    progress: 0,\n    direction: 0,\n    scrollDirection: undefined,\n  },\n  scrollTo: (target) => window.scrollTo(0, target),\n  onScroll: () => () => {},\n}))\n\nexport { useCanvasStore }\n","import { useCanvasStore } from '../store'\nimport { LenisScrollCallback } from './LenisScrollbar'\n\nexport interface Scroll {\n  y: number\n  x: number\n  limit: number\n  velocity: number\n  progress: number\n  direction: number\n  scrollDirection: string\n}\n\ninterface UseScrollbarProps {\n  enabled: boolean\n  scroll: Scroll\n  scrollTo: (target: any) => void\n  onScroll: (cb: LenisScrollCallback) => () => void\n}\n\n/**\n * Public interface for ScrollRig\n */\nexport const useScrollbar = () => {\n  const hasSmoothScrollbar = useCanvasStore((state) => state.hasSmoothScrollbar)\n  const scroll = useCanvasStore((state) => state.scroll)\n  const scrollTo = useCanvasStore((state) => state.scrollTo)\n  const onScroll = useCanvasStore((state) => state.onScroll)\n\n  return {\n    enabled: hasSmoothScrollbar,\n    scroll,\n    scrollTo,\n    onScroll,\n  } as UseScrollbarProps\n}\n","import { useEffect, useLayoutEffect as vanillaUseLayoutEffect } from 'react'\n\nexport const isBrowser = typeof window !== 'undefined'\n\nexport const useLayoutEffect = isBrowser ? vanillaUseLayoutEffect : useEffect\n","import React, { useRef, useEffect, forwardRef, useImperativeHandle, ReactElement } from 'react'\n\n// @ts-ignore\n// eslint-disable-next-line import/no-unresolved\nimport Lenis from '@studio-freight/lenis'\n\nexport type LenisScrollCallback = (props: {\n  scroll: number\n  limit: number\n  velocity: number\n  direction: number\n  progress: number\n}) => void\n\nexport type LenisScrollToTarget = number | HTMLElement | string\nexport type LenisScrollToConfig = {\n  offset: number\n  immediate: boolean\n  duration: number\n  easing: (t: number) => number\n}\ntype LenisScrollTo = (target: LenisScrollToTarget, props: LenisScrollToConfig) => void\n\ntype LenisScrollbarProps = {\n  children: (props: any) => ReactElement\n  duration?: number\n  easing?: (t: number) => number\n  smooth?: boolean\n  direction?: string\n  config?: any\n  smoothTouch?: boolean\n}\n\nexport interface ILenisScrollbar {\n  stop: () => void\n  start: () => void\n  on: (event: string, cb: LenisScrollCallback) => void\n  once: (event: string, cb: LenisScrollCallback) => void\n  off: (event: string, cb: LenisScrollCallback) => void\n  notify: () => void\n  scrollTo: LenisScrollTo\n  raf: (time: number) => void\n}\n\nconst EASE_EXP_OUT = (t: number) => (t === 1 ? 1 : 1 - Math.pow(2, -10 * t)) // https://easings.net/\n\nexport function LenisScrollbar(\n  {\n    children,\n    duration = 1,\n    easing = EASE_EXP_OUT,\n    smooth = true,\n    direction = 'vertical',\n    config,\n    ...props\n  }: LenisScrollbarProps,\n  ref: any\n) {\n  const lenisImpl = useRef<ILenisScrollbar>()\n\n  // Expose lenis imperative API\n  useImperativeHandle(ref, () => lenisImpl.current)\n\n  useEffect(\n    function initLenis() {\n      // @ts-ignore\n      const lenis = (lenisImpl.current = new Lenis({\n        duration,\n        easing,\n        smooth,\n        direction,\n        ...config,\n      }))\n\n      // cleanup on unmount\n      return () => {\n        lenis.destroy()\n      }\n    },\n    [duration, easing, smooth, direction]\n  )\n\n  // Support a render function as child\n  return children && children(props)\n}\n\nexport default forwardRef(LenisScrollbar)\n","import React, { useEffect, useRef, useCallback, ReactElement, useMemo, forwardRef, useImperativeHandle } from 'react'\nimport { addEffect, invalidate } from '@react-three/fiber'\nimport pkg from 'debounce'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { useCanvasStore } from '../store'\n\nimport LenisScrollbar, {\n  ILenisScrollbar,\n  LenisScrollCallback,\n  LenisScrollToTarget,\n  LenisScrollToConfig,\n} from './LenisScrollbar'\ninterface ISmoothScrobbar {\n  children: (props: any) => ReactElement\n  scrollRestoration?: ScrollRestoration\n  enabled?: boolean\n  locked?: boolean\n  disablePointerOnScroll?: boolean\n  config?: object\n  horizontal?: boolean\n  scrollInContainer?: boolean\n  updateGlobalState?: boolean\n  onScroll?: LenisScrollCallback\n}\n\nconst SmoothScrollbarImpl = (\n  {\n    children,\n    enabled = true,\n    locked = false,\n    scrollRestoration = 'auto',\n    disablePointerOnScroll = true,\n    horizontal = false,\n    scrollInContainer = false,\n    updateGlobalState = true,\n    onScroll,\n    config,\n  }: ISmoothScrobbar,\n  ref: any\n) => {\n  const innerRef = useRef<HTMLElement>()\n  const lenis = useRef<ILenisScrollbar>()\n  const preventPointer = useRef(false)\n  const globalScrollState = useCanvasStore((state) => state.scroll)\n\n  // expose scrollTo imperatively\n  useImperativeHandle(ref, () => {\n    return {\n      scrollTo: (target: LenisScrollToTarget, props: LenisScrollToConfig) => lenis.current?.scrollTo(target, props),\n      __lenis: lenis.current,\n    }\n  })\n\n  // disable pointer events while scrolling to avoid slow event handlers\n  const preventPointerEvents = (prevent: boolean) => {\n    if (!disablePointerOnScroll) return\n    if (innerRef.current && preventPointer.current !== prevent) {\n      preventPointer.current = prevent\n      innerRef.current.style.pointerEvents = prevent ? 'none' : 'auto'\n    }\n  }\n\n  // reset pointer events when moving mouse\n  const onMouseMove = useCallback(() => {\n    preventPointerEvents(false)\n  }, [])\n\n  // function to bind to scroll event\n  // return function that will unbind same callback\n  const globalOnScroll = useCallback((cb: LenisScrollCallback) => {\n    lenis.current?.on('scroll', cb)\n    return () => lenis.current?.off('scroll', cb)\n  }, [])\n\n  // apply chosen scroll restoration\n  useLayoutEffect(() => {\n    if ('scrollRestoration' in window.history) {\n      window.history.scrollRestoration = scrollRestoration\n    }\n  }, [])\n\n  useEffect(() => {\n    // let r3f drive the frameloop\n    const removeEffect = addEffect((time: number) => lenis.current?.raf(time))\n\n    // update global scroll store\n    lenis.current?.on('scroll', ({ scroll, limit, velocity, direction, progress }) => {\n      if (updateGlobalState) {\n        globalScrollState.y = !horizontal ? scroll : 0\n        globalScrollState.x = horizontal ? scroll : 0\n        globalScrollState.limit = limit\n        globalScrollState.velocity = velocity\n        globalScrollState.direction = direction\n        globalScrollState.progress = progress\n      }\n\n      // disable pointer logic\n      const disablePointer = pkg.debounce(() => preventPointerEvents(true), 100, true)\n      if (Math.abs(velocity) > 1.4) {\n        disablePointer()\n      } else {\n        preventPointerEvents(false)\n      }\n\n      onScroll && onScroll({ scroll, limit, velocity, direction, progress })\n\n      invalidate()\n    })\n\n    // trigger initial scroll event to update global state\n    lenis.current?.notify()\n\n    // update global state\n    if (updateGlobalState) {\n      globalScrollState.scrollDirection = horizontal ? 'horizontal' : 'vertical'\n\n      // expose global scrollTo function\n      // @ts-ignore\n      useCanvasStore.setState({ scrollTo: lenis.current?.scrollTo })\n\n      // expose global onScroll function to subscribe to scroll events\n      // @ts-ignore\n      useCanvasStore.setState({ onScroll: globalOnScroll })\n\n      // Set current scroll position on load in case reloaded further down\n      useCanvasStore.getState().scroll.y = window.scrollY\n      useCanvasStore.getState().scroll.x = window.scrollX\n    }\n\n    // Set active\n    document.documentElement.classList.toggle('js-smooth-scrollbar-enabled', enabled)\n    document.documentElement.classList.toggle('js-smooth-scrollbar-disabled', !enabled)\n    useCanvasStore.setState({ hasSmoothScrollbar: enabled })\n\n    // make sure R3F loop is invalidated when scrolling\n    const invalidateOnWheelEvent = () => invalidate()\n\n    window.addEventListener('pointermove', onMouseMove)\n    window.addEventListener('wheel', invalidateOnWheelEvent)\n    return () => {\n      removeEffect()\n      window.removeEventListener('pointermove', onMouseMove)\n      window.removeEventListener('wheel', invalidateOnWheelEvent)\n    }\n  }, [enabled])\n\n  useEffect(() => {\n    locked ? lenis.current?.stop() : lenis.current?.start()\n  }, [locked])\n\n  // Set up scroll containers - allows scrolling without resizing window on iOS/mobile\n  const { wrapper, content } = useMemo(() => {\n    if (typeof document === 'undefined') return {}\n    const html = document.documentElement\n    const wrapper = document.body\n    const content = document.body.firstElementChild\n\n    html.classList.toggle('ScrollRig-scrollHtml', scrollInContainer)\n    wrapper.classList.toggle('ScrollRig-scrollWrapper', scrollInContainer)\n\n    return {\n      wrapper,\n      content,\n    }\n  }, [scrollInContainer])\n\n  return (\n    <LenisScrollbar\n      ref={lenis}\n      smooth={enabled}\n      direction={horizontal ? 'horizontal' : 'vertical'}\n      config={\n        scrollInContainer\n          ? {\n              smoothTouch: true,\n              wrapper,\n              content,\n              ...config,\n            }\n          : { ...config }\n      }\n    >\n      {/* Use function child so we can spread props\n        - for instance disable pointer events while scrolling */}\n      {(bind: any) => children({ ...bind, ref: innerRef })}\n    </LenisScrollbar>\n  )\n}\n\nexport const SmoothScrollbar = forwardRef(SmoothScrollbarImpl)\n","import { useState, useEffect, useMemo } from 'react'\nimport pkg from 'debounce'\n\nconst isBrowser = typeof window !== 'undefined'\n\n// https://usehooks.com/useWindowSize/\n\nexport interface WindowSize {\n  width: number\n  height: number\n}\n\ntype ConfigProps = {\n  debounce?: number\n}\n\n/*\n * Triggers a resize only if the Canvas DOM element changed dimensions - not on window resize event\n */\n\nexport function useWindowSize({ debounce = 0 }: ConfigProps = {}) {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<WindowSize>({\n    width: isBrowser ? window.innerWidth : Infinity,\n    height: isBrowser ? window.innerHeight : Infinity,\n  })\n  useEffect(() => {\n    // check if we can find a canvas - if so, base size on canvas instead of window\n    // since 100vh !== window.innerHeight on mobile\n    const canvasEl = document.getElementById('ScrollRig-canvas')\n\n    // Handler to call on window resize\n    function handleResize() {\n      const width = canvasEl ? canvasEl.clientWidth : window.innerWidth\n      const height = canvasEl ? canvasEl.clientHeight : window.innerHeight\n\n      if (width !== windowSize.width || height !== windowSize.height) {\n        // Set window width/height to state\n        setWindowSize({\n          width,\n          height,\n        })\n      }\n    }\n\n    const debouncedResize = pkg.debounce(handleResize, debounce)\n\n    // Add event listener\n    let observer: ResizeObserver\n    if (canvasEl) {\n      observer = new ResizeObserver(debouncedResize)\n      observer.observe(canvasEl)\n    } else {\n      window.addEventListener('resize', debouncedResize)\n    }\n    // Call handler right away so state gets updated with initial window size\n    handleResize()\n    // Remove event listener on cleanup\n    return () => {\n      window.removeEventListener('resize', debouncedResize)\n      observer?.disconnect()\n    }\n  }, []) // Empty array ensures that effect is only run on mount\n\n  return windowSize\n}\n","// Linear mapping from range <a1, a2> to range <b1, b2>\nexport function mapLinear(x: number, a1: number, a2: number, b1: number, b2: number) {\n  return b1 + ((x - a1) * (b2 - b1)) / (a2 - a1)\n}\n","import { useRef, useCallback, useEffect, useMemo, useState, MutableRefObject } from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { useWindowSize } from './useWindowSize'\nimport vecn from 'vecn'\n\nimport { useLayoutEffect } from '../hooks/useIsomorphicLayoutEffect'\nimport { mapLinear } from '../utils/math'\nimport { useCanvasStore } from '../store'\nimport { useScrollbar, Scroll } from '../scrollbar/useScrollbar'\n\nimport type { Rect, Bounds, TrackerOptions, Tracker, ScrollState } from './useTracker.d'\n\nfunction updateBounds(bounds: Bounds, rect: Rect, scroll: Scroll, size: any) {\n  bounds.top = rect.top - scroll.y\n  bounds.bottom = rect.bottom - scroll.y\n  bounds.left = rect.left - scroll.x\n  bounds.right = rect.right - scroll.x\n  bounds.width = rect.width\n  bounds.height = rect.height\n  // move coordinate system so 0,0 is at center of screen\n  bounds.x = bounds.left + rect.width * 0.5 - size.width * 0.5\n  bounds.y = bounds.top + rect.height * 0.5 - size.height * 0.5\n  bounds.positiveYUpBottom = size.height - bounds.bottom // inverse Y\n}\n\nfunction updatePosition(position: vec3, bounds: Bounds, scaleMultiplier: number) {\n  position.x = bounds.x * scaleMultiplier\n  position.y = -1 * bounds.y * scaleMultiplier\n}\n\n/**\n * Returns the current Scene position of the DOM element\n * based on initial getBoundingClientRect and scroll delta from start\n */\nfunction useTracker(track: MutableRefObject<HTMLElement>, options?: TrackerOptions): Tracker {\n  const size = useWindowSize()\n  const { scroll, onScroll } = useScrollbar()\n  const scaleMultiplier = useCanvasStore((state) => state.scaleMultiplier)\n  const pageReflow = useCanvasStore((state) => state.pageReflow)\n\n  // extend defaults with optional options\n  const { rootMargin, threshold, autoUpdate, wrapper } = useMemo(() => {\n    const target = { rootMargin: '0%', threshold: 0, autoUpdate: true } as TrackerOptions\n    const opts = options || {}\n    Object.keys(opts).map((key: string, index) => {\n      if (opts[key] !== undefined) target[key] = opts[key]\n    })\n    return target\n  }, [options])\n\n  // check if element is in viewport\n  const { ref, inView: inViewport } = useInView({ rootMargin, threshold })\n\n  // bind useInView ref to current tracking element\n  useLayoutEffect(() => {\n    ref(track.current)\n  }, [track])\n\n  // Using state so it's reactive\n  const [scale, setScale] = useState<vec3>()\n\n  // Using ref because\n  const scrollState: ScrollState = useRef({\n    inViewport: false,\n    progress: -1,\n    visibility: -1,\n    viewport: -1,\n  }).current\n\n  // DOM rect (initial position in pixels offset by scroll value on page load)\n  // Using ref so we can calculate bounds & position without a re-render\n  const rect = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n  }).current\n\n  // expose internal ref as a reactive state as well\n  const [reactiveRect, setReactiveRect] = useState<Rect>(rect)\n\n  // bounding rect in pixels - updated by scroll\n  const bounds = useRef({\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0,\n    x: 0,\n    y: 0,\n    positiveYUpBottom: 0,\n  }).current\n\n  // position in viewport units - updated by scroll\n  const position = useRef(vecn.vec3(0, 0, 0)).current\n\n  // Calculate bounding Rect as soon as it's available\n  useLayoutEffect(() => {\n    const _rect = track.current?.getBoundingClientRect()\n    if (!_rect) return\n    const initialY = wrapper ? (wrapper as HTMLElement).scrollTop : window.scrollY\n    const initialX = wrapper ? (wrapper as HTMLElement).scrollLeft : window.scrollX\n    rect.top = _rect.top + initialY\n    rect.bottom = _rect.bottom + initialY\n    rect.left = _rect.left + initialX\n    rect.right = _rect.right + initialX\n    rect.width = _rect.width\n    rect.height = _rect.height\n    rect.x = rect.left + _rect.width * 0.5\n    rect.y = rect.top + _rect.height * 0.5\n    setReactiveRect({ ...rect })\n    setScale(vecn.vec3(rect?.width * scaleMultiplier, rect?.height * scaleMultiplier, 1))\n  }, [track, size, pageReflow, scaleMultiplier])\n\n  const update = useCallback(\n    ({ onlyUpdateInViewport = true, scroll: _scroll = scroll } = {}) => {\n      if (!track.current || (onlyUpdateInViewport && !scrollState.inViewport)) {\n        return\n      }\n\n      updateBounds(bounds, rect, _scroll, size)\n      updatePosition(position, bounds, scaleMultiplier)\n\n      // scrollState setup based on scroll direction\n      const isHorizontal = _scroll.scrollDirection === 'horizontal'\n      const sizeProp = isHorizontal ? 'width' : 'height'\n      const startProp = isHorizontal ? 'left' : 'top'\n\n      // calculate progress of passing through viewport (0 = just entered, 1 = just exited)\n      const pxInside = size[sizeProp] - bounds[startProp]\n      scrollState.progress = mapLinear(pxInside, 0, size[sizeProp] + bounds[sizeProp], 0, 1) // percent of total visible distance\n      scrollState.visibility = mapLinear(pxInside, 0, bounds[sizeProp], 0, 1) // percent of item height in view\n      scrollState.viewport = mapLinear(pxInside, 0, size[sizeProp], 0, 1) // percent of window height scrolled since visible\n    },\n    [track, size, scaleMultiplier, scroll]\n  )\n\n  // update scrollState in viewport\n  useLayoutEffect(() => {\n    scrollState.inViewport = inViewport\n    // update once more in case it went out of view\n    update({ onlyUpdateInViewport: false })\n  }, [inViewport])\n\n  // re-run if the callback updated\n  useLayoutEffect(() => {\n    update({ onlyUpdateInViewport: false })\n  }, [update])\n\n  // auto-update on scroll\n  useEffect(() => {\n    if (autoUpdate) return onScroll((_scroll) => update())\n  }, [autoUpdate, update, onScroll])\n\n  return {\n    rect: reactiveRect, // Dom rect - doesn't change on scroll - not - reactive\n    bounds, // scrolled bounding rect in pixels - not reactive\n    scale, // reactive scene scale - includes z-axis so it can be spread onto mesh directly\n    position, // scrolled element position in viewport units - not reactive\n    scrollState, // scroll progress stats - not reactive\n    inViewport, // reactive prop for when inside viewport\n    update: (args) => update({ onlyUpdateInViewport: false, ...args }), // optional manual update\n  }\n}\n\nexport { useTracker }\n"],"names":["useCanvasStore","create","set","debug","scaleMultiplier","globalRender","globalPriority","globalAutoClear","globalClearDepth","globalRenderQueue","clearGlobalRenderQueue","isCanvasAvailable","hasSmoothScrollbar","canvasChildren","renderToCanvas","key","mesh","props","Object","getOwnPropertyDescriptor","instances","inactive","_extends","updateCanvas","newProps","removeFromCanvas","dispose","_canvasChildren$key","map","_toPropertyKey","pageReflow","requestReflow","state","scroll","y","x","limit","velocity","progress","direction","scrollDirection","undefined","scrollTo","target","window","onScroll","useScrollbar","enabled","useLayoutEffect","vanillaUseLayoutEffect","useEffect","_excluded","EASE_EXP_OUT","t","Math","pow","forwardRef","_ref","ref","children","duration","easing","smooth","config","lenisImpl","useRef","useImperativeHandle","current","lenis","Lenis","destroy","locked","scrollRestoration","disablePointerOnScroll","horizontal","scrollInContainer","updateGlobalState","innerRef","preventPointer","_lenis$current","__lenis","preventPointerEvents","prevent","style","pointerEvents","useCallback","globalOnScroll","cb","_lenis$current2","on","_lenis$current3","off","history","_lenis$current5","_lenis$current6","removeEffect","addEffect","time","_lenis$current4","raf","globalScrollState","disablePointer","pkg","debounce","abs","invalidate","notify","setState","_lenis$current7","getState","scrollY","scrollX","document","documentElement","classList","toggle","invalidateOnWheelEvent","addEventListener","onMouseMove","removeEventListener","_lenis$current8","stop","_lenis$current9","start","wrapper","content","useMemo","html","body","firstElementChild","createElement","LenisScrollbar","smoothTouch","bind","isBrowser","mapLinear","a1","a2","b1","b2","useTracker","track","options","size","useWindowSize","windowSize","setWindowSize","useState","width","innerWidth","Infinity","height","innerHeight","canvasEl","getElementById","handleResize","clientWidth","clientHeight","debouncedResize","observer","observe","_observer","disconnect","rootMargin","threshold","autoUpdate","opts","keys","index","inView","inViewport","useInView","scale","setScale","scrollState","visibility","viewport","rect","top","bottom","left","right","reactiveRect","setReactiveRect","bounds","positiveYUpBottom","position","vecn","vec3","_track$current","_rect","getBoundingClientRect","scrollTop","initialX","scrollLeft","initialY","onlyUpdateInViewport","_scroll","updateBounds","updatePosition","isHorizontal","sizeProp","pxInside","update","args"],"mappings":"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"}